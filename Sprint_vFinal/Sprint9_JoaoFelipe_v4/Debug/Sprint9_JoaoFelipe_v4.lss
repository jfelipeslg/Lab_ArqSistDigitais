
Sprint9_JoaoFelipe_v4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800100  00002510  000025a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002510  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000230  00800198  00800198  0000263c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000263c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002698  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000026d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d43  00000000  00000000  00002808  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005ec  00000000  00000000  0000454b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f08  00000000  00000000  00004b37  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004e8  00000000  00000000  00005a40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000551  00000000  00000000  00005f28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013ea  00000000  00000000  00006479  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00007863  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__vector_1>
       8:	0c 94 00 02 	jmp	0x400	; 0x400 <__vector_2>
       c:	0c 94 68 01 	jmp	0x2d0	; 0x2d0 <__vector_3>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 8b 01 	jmp	0x316	; 0x316 <__vector_5>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_14>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 6a 0b 	jmp	0x16d4	; 0x16d4 <__vector_18>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	e0 e1       	ldi	r30, 0x10	; 16
     25c:	f5 e2       	ldi	r31, 0x25	; 37
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a8 39       	cpi	r26, 0x98	; 152
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	a8 e9       	ldi	r26, 0x98	; 152
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a8 3c       	cpi	r26, 0xC8	; 200
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 a9 08 	call	0x1152	; 0x1152 <main>
     27e:	0c 94 86 12 	jmp	0x250c	; 0x250c <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_14>:
void saturacao_O2(uint32_t , uint16_t *, uint16_t *);
void alarme( uint32_t, uint16_t , uint16_t );
void control_luz(uint16_t);

ISR(TIMER0_COMPA_vect)	// Contador do Temporizador [1ms]
{
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	0f 92       	push	r0
     28e:	11 24       	eor	r1, r1
     290:	8f 93       	push	r24
     292:	9f 93       	push	r25
     294:	af 93       	push	r26
     296:	bf 93       	push	r27
	tempo_ms++;
     298:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <tempo_ms>
     29c:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
     2a0:	a0 91 c2 01 	lds	r26, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
     2a4:	b0 91 c3 01 	lds	r27, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
     2a8:	01 96       	adiw	r24, 0x01	; 1
     2aa:	a1 1d       	adc	r26, r1
     2ac:	b1 1d       	adc	r27, r1
     2ae:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <tempo_ms>
     2b2:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <tempo_ms+0x1>
     2b6:	a0 93 c2 01 	sts	0x01C2, r26	; 0x8001c2 <tempo_ms+0x2>
     2ba:	b0 93 c3 01 	sts	0x01C3, r27	; 0x8001c3 <tempo_ms+0x3>
}
     2be:	bf 91       	pop	r27
     2c0:	af 91       	pop	r26
     2c2:	9f 91       	pop	r25
     2c4:	8f 91       	pop	r24
     2c6:	0f 90       	pop	r0
     2c8:	0f be       	out	0x3f, r0	; 63
     2ca:	0f 90       	pop	r0
     2cc:	1f 90       	pop	r1
     2ce:	18 95       	reti

000002d0 <__vector_3>:

ISR(PCINT0_vect)
{
     2d0:	1f 92       	push	r1
     2d2:	0f 92       	push	r0
     2d4:	0f b6       	in	r0, 0x3f	; 63
     2d6:	0f 92       	push	r0
     2d8:	11 24       	eor	r1, r1
     2da:	8f 93       	push	r24
     2dc:	9f 93       	push	r25
	if(PINB & (1<<PINB6))
     2de:	1e 9b       	sbis	0x03, 6	; 3
     2e0:	13 c0       	rjmp	.+38     	; 0x308 <__vector_3+0x38>
	{
		if (sel >= 5)
     2e2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <sel>
     2e6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <sel+0x1>
     2ea:	85 30       	cpi	r24, 0x05	; 5
     2ec:	91 05       	cpc	r25, r1
     2ee:	38 f0       	brcs	.+14     	; 0x2fe <__vector_3+0x2e>
		{
			sel = 1;
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <sel+0x1>
     2f8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <sel>
     2fc:	05 c0       	rjmp	.+10     	; 0x308 <__vector_3+0x38>
		}
		else
		{
			sel = sel + 1;
     2fe:	01 96       	adiw	r24, 0x01	; 1
     300:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <sel+0x1>
     304:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <sel>
		}
	}
}
     308:	9f 91       	pop	r25
     30a:	8f 91       	pop	r24
     30c:	0f 90       	pop	r0
     30e:	0f be       	out	0x3f, r0	; 63
     310:	0f 90       	pop	r0
     312:	1f 90       	pop	r1
     314:	18 95       	reti

00000316 <__vector_5>:

ISR(PCINT2_vect)		// Deteção dos Batimentos Cardiacos
{
     316:	1f 92       	push	r1
     318:	0f 92       	push	r0
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	0f 92       	push	r0
     31e:	11 24       	eor	r1, r1
     320:	8f 93       	push	r24
     322:	9f 93       	push	r25
	if(PIND & (1<<PIND4))
     324:	4c 9b       	sbis	0x09, 4	; 9
     326:	09 c0       	rjmp	.+18     	; 0x33a <__vector_5+0x24>
	{
		batimentos++;
     328:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <batimentos>
     32c:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <batimentos+0x1>
     330:	01 96       	adiw	r24, 0x01	; 1
     332:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <batimentos+0x1>
     336:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <batimentos>
	}
}
     33a:	9f 91       	pop	r25
     33c:	8f 91       	pop	r24
     33e:	0f 90       	pop	r0
     340:	0f be       	out	0x3f, r0	; 63
     342:	0f 90       	pop	r0
     344:	1f 90       	pop	r1
     346:	18 95       	reti

00000348 <__vector_1>:

ISR(INT0_vect)			// D2 ~ Abaixa Frequência
{
     348:	1f 92       	push	r1
     34a:	0f 92       	push	r0
     34c:	0f b6       	in	r0, 0x3f	; 63
     34e:	0f 92       	push	r0
     350:	11 24       	eor	r1, r1
     352:	8f 93       	push	r24
     354:	9f 93       	push	r25
	if (sel == 2)
     356:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <sel>
     35a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <sel+0x1>
     35e:	82 30       	cpi	r24, 0x02	; 2
     360:	91 05       	cpc	r25, r1
     362:	a1 f4       	brne	.+40     	; 0x38c <__vector_1+0x44>
	{
		FreqRespiracao = FreqRespiracao - 1;
     364:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <FreqRespiracao>
     368:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <FreqRespiracao+0x1>
     36c:	01 97       	sbiw	r24, 0x01	; 1
		if (FreqRespiracao < 5) {FreqRespiracao = 5;}
     36e:	85 30       	cpi	r24, 0x05	; 5
     370:	91 05       	cpc	r25, r1
     372:	28 f0       	brcs	.+10     	; 0x37e <__vector_1+0x36>

ISR(INT0_vect)			// D2 ~ Abaixa Frequência
{
	if (sel == 2)
	{
		FreqRespiracao = FreqRespiracao - 1;
     374:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <FreqRespiracao+0x1>
     378:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <FreqRespiracao>
     37c:	3a c0       	rjmp	.+116    	; 0x3f2 <__vector_1+0xaa>
		if (FreqRespiracao < 5) {FreqRespiracao = 5;}
     37e:	85 e0       	ldi	r24, 0x05	; 5
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <FreqRespiracao+0x1>
     386:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <FreqRespiracao>
     38a:	33 c0       	rjmp	.+102    	; 0x3f2 <__vector_1+0xaa>
	}
	else if (sel == 3)
     38c:	83 30       	cpi	r24, 0x03	; 3
     38e:	91 05       	cpc	r25, r1
     390:	61 f4       	brne	.+24     	; 0x3aa <__vector_1+0x62>
	{
		if (SendO2 <= 0) {SendO2 = 0;}
     392:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <SendO2>
     396:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <SendO2+0x1>
     39a:	00 97       	sbiw	r24, 0x00	; 0
     39c:	51 f1       	breq	.+84     	; 0x3f2 <__vector_1+0xaa>
		else {SendO2 = SendO2 - 1;}
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <SendO2+0x1>
     3a4:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <SendO2>
     3a8:	24 c0       	rjmp	.+72     	; 0x3f2 <__vector_1+0xaa>
	}
	else if (sel == 4)
     3aa:	84 30       	cpi	r24, 0x04	; 4
     3ac:	91 05       	cpc	r25, r1
     3ae:	a1 f4       	brne	.+40     	; 0x3d8 <__vector_1+0x90>
	{
		if(volume <= 1) {volume = 1;}
     3b0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <volume>
     3b4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <volume+0x1>
     3b8:	82 30       	cpi	r24, 0x02	; 2
     3ba:	91 05       	cpc	r25, r1
     3bc:	38 f4       	brcc	.+14     	; 0x3cc <__vector_1+0x84>
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <volume+0x1>
     3c6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <volume>
     3ca:	13 c0       	rjmp	.+38     	; 0x3f2 <__vector_1+0xaa>
		else {volume = volume - 1;}
     3cc:	01 97       	sbiw	r24, 0x01	; 1
     3ce:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <volume+0x1>
     3d2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <volume>
     3d6:	0d c0       	rjmp	.+26     	; 0x3f2 <__vector_1+0xaa>
	}
	else if (sel == 5)
     3d8:	05 97       	sbiw	r24, 0x05	; 5
     3da:	59 f4       	brne	.+22     	; 0x3f2 <__vector_1+0xaa>
	{
		if(luz <= 0) {luz = 0;}
     3dc:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <luz>
     3e0:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <luz+0x1>
     3e4:	00 97       	sbiw	r24, 0x00	; 0
     3e6:	29 f0       	breq	.+10     	; 0x3f2 <__vector_1+0xaa>
		else {luz = luz - 1;}
     3e8:	01 97       	sbiw	r24, 0x01	; 1
     3ea:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <luz+0x1>
     3ee:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <luz>
	}
	else {}
}
     3f2:	9f 91       	pop	r25
     3f4:	8f 91       	pop	r24
     3f6:	0f 90       	pop	r0
     3f8:	0f be       	out	0x3f, r0	; 63
     3fa:	0f 90       	pop	r0
     3fc:	1f 90       	pop	r1
     3fe:	18 95       	reti

00000400 <__vector_2>:

ISR(INT1_vect)			// D3 ~ Aumenta Frequência
{
     400:	1f 92       	push	r1
     402:	0f 92       	push	r0
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	0f 92       	push	r0
     408:	11 24       	eor	r1, r1
     40a:	8f 93       	push	r24
     40c:	9f 93       	push	r25
	if (sel == 2)
     40e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <sel>
     412:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <sel+0x1>
     416:	82 30       	cpi	r24, 0x02	; 2
     418:	91 05       	cpc	r25, r1
     41a:	a1 f4       	brne	.+40     	; 0x444 <__vector_2+0x44>
	{
		FreqRespiracao = FreqRespiracao + 1;
     41c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <FreqRespiracao>
     420:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <FreqRespiracao+0x1>
     424:	01 96       	adiw	r24, 0x01	; 1
		if (FreqRespiracao > 30) {FreqRespiracao = 30;}
     426:	8f 31       	cpi	r24, 0x1F	; 31
     428:	91 05       	cpc	r25, r1
     42a:	28 f4       	brcc	.+10     	; 0x436 <__vector_2+0x36>

ISR(INT1_vect)			// D3 ~ Aumenta Frequência
{
	if (sel == 2)
	{
		FreqRespiracao = FreqRespiracao + 1;
     42c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <FreqRespiracao+0x1>
     430:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <FreqRespiracao>
     434:	4a c0       	rjmp	.+148    	; 0x4ca <__vector_2+0xca>
		if (FreqRespiracao > 30) {FreqRespiracao = 30;}
     436:	8e e1       	ldi	r24, 0x1E	; 30
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <FreqRespiracao+0x1>
     43e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <FreqRespiracao>
     442:	43 c0       	rjmp	.+134    	; 0x4ca <__vector_2+0xca>
	}
	
	else if (sel == 3)
     444:	83 30       	cpi	r24, 0x03	; 3
     446:	91 05       	cpc	r25, r1
     448:	a1 f4       	brne	.+40     	; 0x472 <__vector_2+0x72>
	{
		if (SendO2 >= 10) {SendO2 = 10;}
     44a:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <SendO2>
     44e:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <SendO2+0x1>
     452:	8a 30       	cpi	r24, 0x0A	; 10
     454:	91 05       	cpc	r25, r1
     456:	38 f0       	brcs	.+14     	; 0x466 <__vector_2+0x66>
     458:	8a e0       	ldi	r24, 0x0A	; 10
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <SendO2+0x1>
     460:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <SendO2>
     464:	32 c0       	rjmp	.+100    	; 0x4ca <__vector_2+0xca>
		else {SendO2 = SendO2 + 1;}
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <SendO2+0x1>
     46c:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <SendO2>
     470:	2c c0       	rjmp	.+88     	; 0x4ca <__vector_2+0xca>
	}
	else if (sel == 4)
     472:	84 30       	cpi	r24, 0x04	; 4
     474:	91 05       	cpc	r25, r1
     476:	a1 f4       	brne	.+40     	; 0x4a0 <__vector_2+0xa0>
	{
		if (volume >= 8) {volume = 8;}
     478:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <volume>
     47c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <volume+0x1>
     480:	88 30       	cpi	r24, 0x08	; 8
     482:	91 05       	cpc	r25, r1
     484:	38 f0       	brcs	.+14     	; 0x494 <__vector_2+0x94>
     486:	88 e0       	ldi	r24, 0x08	; 8
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <volume+0x1>
     48e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <volume>
     492:	1b c0       	rjmp	.+54     	; 0x4ca <__vector_2+0xca>
		else {volume = volume + 1;}
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <volume+0x1>
     49a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <volume>
     49e:	15 c0       	rjmp	.+42     	; 0x4ca <__vector_2+0xca>
	}
	else if (sel == 5)
     4a0:	05 97       	sbiw	r24, 0x05	; 5
     4a2:	99 f4       	brne	.+38     	; 0x4ca <__vector_2+0xca>
	{
		if (luz >= 7) {luz = 7;}
     4a4:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <luz>
     4a8:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <luz+0x1>
     4ac:	87 30       	cpi	r24, 0x07	; 7
     4ae:	91 05       	cpc	r25, r1
     4b0:	38 f0       	brcs	.+14     	; 0x4c0 <__vector_2+0xc0>
     4b2:	87 e0       	ldi	r24, 0x07	; 7
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <luz+0x1>
     4ba:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <luz>
     4be:	05 c0       	rjmp	.+10     	; 0x4ca <__vector_2+0xca>
		else {luz = luz + 1;}
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <luz+0x1>
     4c6:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <luz>
	}
	else {}
}
     4ca:	9f 91       	pop	r25
     4cc:	8f 91       	pop	r24
     4ce:	0f 90       	pop	r0
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	0f 90       	pop	r0
     4d4:	1f 90       	pop	r1
     4d6:	18 95       	reti

000004d8 <animalcd>:
		control_luz(luz);
	}
}

void animalcd(uint32_t tempo_ms_myfun, uint16_t FreqRespiracao, uint16_t batimentos_min, uint16_t temp_celsius, uint16_t SpO2, char* pressao, uint16_t SendO2, uint16_t sel, uint16_t volume, uint16_t luz)
{
     4d8:	2f 92       	push	r2
     4da:	3f 92       	push	r3
     4dc:	4f 92       	push	r4
     4de:	5f 92       	push	r5
     4e0:	6f 92       	push	r6
     4e2:	7f 92       	push	r7
     4e4:	8f 92       	push	r8
     4e6:	9f 92       	push	r9
     4e8:	af 92       	push	r10
     4ea:	bf 92       	push	r11
     4ec:	cf 92       	push	r12
     4ee:	df 92       	push	r13
     4f0:	ef 92       	push	r14
     4f2:	ff 92       	push	r15
     4f4:	0f 93       	push	r16
     4f6:	1f 93       	push	r17
     4f8:	cf 93       	push	r28
     4fa:	df 93       	push	r29
     4fc:	cd b7       	in	r28, 0x3d	; 61
     4fe:	de b7       	in	r29, 0x3e	; 62
     500:	a7 97       	sbiw	r28, 0x27	; 39
     502:	0f b6       	in	r0, 0x3f	; 63
     504:	f8 94       	cli
     506:	de bf       	out	0x3e, r29	; 62
     508:	0f be       	out	0x3f, r0	; 63
     50a:	cd bf       	out	0x3d, r28	; 61
     50c:	2b 01       	movw	r4, r22
     50e:	3c 01       	movw	r6, r24
     510:	2c a3       	std	Y+36, r18	; 0x24
     512:	3d a3       	std	Y+37, r19	; 0x25
     514:	0e a3       	std	Y+38, r16	; 0x26
     516:	1f a3       	std	Y+39, r17	; 0x27
     518:	3c ac       	ldd	r3, Y+60	; 0x3c
     51a:	2d ac       	ldd	r2, Y+61	; 0x3d
	static uint32_t tempo_ms_anterior = 0;
	
	char FreqRespiracao_LCD[5]; sprintf (FreqRespiracao_LCD, "%d", FreqRespiracao);
     51c:	5f 93       	push	r21
     51e:	4f 93       	push	r20
     520:	08 e1       	ldi	r16, 0x18	; 24
     522:	11 e0       	ldi	r17, 0x01	; 1
     524:	1f 93       	push	r17
     526:	0f 93       	push	r16
     528:	ce 01       	movw	r24, r28
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	9f 93       	push	r25
     52e:	8f 93       	push	r24
     530:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	char SendO2_LCD[5];  sprintf (SendO2_LCD, "%d", 10*SendO2);
     534:	c5 01       	movw	r24, r10
     536:	88 0f       	add	r24, r24
     538:	99 1f       	adc	r25, r25
     53a:	aa 0c       	add	r10, r10
     53c:	bb 1c       	adc	r11, r11
     53e:	aa 0c       	add	r10, r10
     540:	bb 1c       	adc	r11, r11
     542:	aa 0c       	add	r10, r10
     544:	bb 1c       	adc	r11, r11
     546:	a8 0e       	add	r10, r24
     548:	b9 1e       	adc	r11, r25
     54a:	bf 92       	push	r11
     54c:	af 92       	push	r10
     54e:	1f 93       	push	r17
     550:	0f 93       	push	r16
     552:	ce 01       	movw	r24, r28
     554:	06 96       	adiw	r24, 0x06	; 6
     556:	9f 93       	push	r25
     558:	8f 93       	push	r24
     55a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	char batimentos_LCD[5]; sprintf (batimentos_LCD, "%d", batimentos_min);
     55e:	2d a1       	ldd	r18, Y+37	; 0x25
     560:	2f 93       	push	r18
     562:	3c a1       	ldd	r19, Y+36	; 0x24
     564:	3f 93       	push	r19
     566:	1f 93       	push	r17
     568:	0f 93       	push	r16
     56a:	ce 01       	movw	r24, r28
     56c:	0b 96       	adiw	r24, 0x0b	; 11
     56e:	9f 93       	push	r25
     570:	8f 93       	push	r24
     572:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	char temp_celsius_LCD[5]; sprintf (temp_celsius_LCD, "%d", temp_celsius);
     576:	4f a1       	ldd	r20, Y+39	; 0x27
     578:	4f 93       	push	r20
     57a:	5e a1       	ldd	r21, Y+38	; 0x26
     57c:	5f 93       	push	r21
     57e:	1f 93       	push	r17
     580:	0f 93       	push	r16
     582:	ce 01       	movw	r24, r28
     584:	40 96       	adiw	r24, 0x10	; 16
     586:	9f 93       	push	r25
     588:	8f 93       	push	r24
     58a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	char SpO2_LCD[5]; sprintf (SpO2_LCD, "%d", SpO2);
     58e:	ff 92       	push	r15
     590:	ef 92       	push	r14
     592:	1f 93       	push	r17
     594:	0f 93       	push	r16
     596:	ce 01       	movw	r24, r28
     598:	45 96       	adiw	r24, 0x15	; 21
     59a:	9f 93       	push	r25
     59c:	8f 93       	push	r24
     59e:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	char Volume_LCD[5]; sprintf (Volume_LCD, "%d", volume);
     5a2:	2f 92       	push	r2
     5a4:	3f 92       	push	r3
     5a6:	1f 93       	push	r17
     5a8:	0f 93       	push	r16
     5aa:	ce 01       	movw	r24, r28
     5ac:	4a 96       	adiw	r24, 0x1a	; 26
     5ae:	9f 93       	push	r25
     5b0:	8f 93       	push	r24
     5b2:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	char Luz_LCD[5]; luz = luz*14.285714; sprintf (Luz_LCD, "%d", luz);
     5b6:	6e ad       	ldd	r22, Y+62	; 0x3e
     5b8:	7f ad       	ldd	r23, Y+63	; 0x3f
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__floatunsisf>
     5c2:	29 e4       	ldi	r18, 0x49	; 73
     5c4:	32 e9       	ldi	r19, 0x92	; 146
     5c6:	44 e6       	ldi	r20, 0x64	; 100
     5c8:	51 e4       	ldi	r21, 0x41	; 65
     5ca:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <__mulsf3>
     5ce:	0f b6       	in	r0, 0x3f	; 63
     5d0:	f8 94       	cli
     5d2:	de bf       	out	0x3e, r29	; 62
     5d4:	0f be       	out	0x3f, r0	; 63
     5d6:	cd bf       	out	0x3d, r28	; 61
     5d8:	0e 94 b4 0c 	call	0x1968	; 0x1968 <__fixunssfsi>
     5dc:	7f 93       	push	r23
     5de:	6f 93       	push	r22
     5e0:	1f 93       	push	r17
     5e2:	0f 93       	push	r16
     5e4:	ce 01       	movw	r24, r28
     5e6:	4f 96       	adiw	r24, 0x1f	; 31
     5e8:	9f 93       	push	r25
     5ea:	8f 93       	push	r24
     5ec:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <sprintf>
	
	if (sel == 1)
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	31 e0       	ldi	r19, 0x01	; 1
     5fe:	83 16       	cp	r8, r19
     600:	91 04       	cpc	r9, r1
     602:	09 f0       	breq	.+2      	; 0x606 <animalcd+0x12e>
     604:	5d c0       	rjmp	.+186    	; 0x6c0 <animalcd+0x1e8>
	{
		if((tempo_ms_myfun - tempo_ms_anterior) >= 200)
     606:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <tempo_ms_anterior.2225>
     60a:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     60e:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     612:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <tempo_ms_anterior.2225+0x3>
     616:	a3 01       	movw	r20, r6
     618:	92 01       	movw	r18, r4
     61a:	28 1b       	sub	r18, r24
     61c:	39 0b       	sbc	r19, r25
     61e:	4a 0b       	sbc	r20, r26
     620:	5b 0b       	sbc	r21, r27
     622:	28 3c       	cpi	r18, 0xC8	; 200
     624:	31 05       	cpc	r19, r1
     626:	41 05       	cpc	r20, r1
     628:	51 05       	cpc	r21, r1
     62a:	08 f4       	brcc	.+2      	; 0x62e <animalcd+0x156>
     62c:	a8 c1       	rjmp	.+848    	; 0x97e <__stack+0x7f>
		{
			nokia_lcd_clear();
     62e:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <nokia_lcd_clear>
			nokia_lcd_write_string("   Tela 1",1);
     632:	61 e0       	ldi	r22, 0x01	; 1
     634:	8b e1       	ldi	r24, 0x1B	; 27
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,10);
     63c:	6a e0       	ldi	r22, 0x0A	; 10
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(batimentos_LCD,1);
     644:	61 e0       	ldi	r22, 0x01	; 1
     646:	ce 01       	movw	r24, r28
     648:	0b 96       	adiw	r24, 0x0b	; 11
     64a:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" BPM",1);
     64e:	61 e0       	ldi	r22, 0x01	; 1
     650:	85 e2       	ldi	r24, 0x25	; 37
     652:	91 e0       	ldi	r25, 0x01	; 1
     654:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,20);
     658:	64 e1       	ldi	r22, 0x14	; 20
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(temp_celsius_LCD,1);
     660:	61 e0       	ldi	r22, 0x01	; 1
     662:	ce 01       	movw	r24, r28
     664:	40 96       	adiw	r24, 0x10	; 16
     666:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" °C",1);
     66a:	61 e0       	ldi	r22, 0x01	; 1
     66c:	8a e2       	ldi	r24, 0x2A	; 42
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
     674:	6e e1       	ldi	r22, 0x1E	; 30
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(SpO2_LCD,1);
     67c:	61 e0       	ldi	r22, 0x01	; 1
     67e:	ce 01       	movw	r24, r28
     680:	45 96       	adiw	r24, 0x15	; 21
     682:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" %",1);
     686:	61 e0       	ldi	r22, 0x01	; 1
     688:	8e e2       	ldi	r24, 0x2E	; 46
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
     690:	68 e2       	ldi	r22, 0x28	; 40
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(pressao,1);
     698:	61 e0       	ldi	r22, 0x01	; 1
     69a:	c6 01       	movw	r24, r12
     69c:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" mmHg",1);
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	81 e3       	ldi	r24, 0x31	; 49
     6a4:	91 e0       	ldi	r25, 0x01	; 1
     6a6:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_render();
     6aa:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <nokia_lcd_render>
			
			tempo_ms_anterior = tempo_ms_myfun;
     6ae:	40 92 ac 01 	sts	0x01AC, r4	; 0x8001ac <tempo_ms_anterior.2225>
     6b2:	50 92 ad 01 	sts	0x01AD, r5	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     6b6:	60 92 ae 01 	sts	0x01AE, r6	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     6ba:	70 92 af 01 	sts	0x01AF, r7	; 0x8001af <tempo_ms_anterior.2225+0x3>
     6be:	5f c1       	rjmp	.+702    	; 0x97e <__stack+0x7f>
		}
	}
	else if (sel == 2)
     6c0:	32 e0       	ldi	r19, 0x02	; 2
     6c2:	83 16       	cp	r8, r19
     6c4:	91 04       	cpc	r9, r1
     6c6:	09 f0       	breq	.+2      	; 0x6ca <animalcd+0x1f2>
     6c8:	50 c0       	rjmp	.+160    	; 0x76a <animalcd+0x292>
	{
		if((tempo_ms_myfun - tempo_ms_anterior) >= 200)
     6ca:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <tempo_ms_anterior.2225>
     6ce:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     6d2:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     6d6:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <tempo_ms_anterior.2225+0x3>
     6da:	a3 01       	movw	r20, r6
     6dc:	92 01       	movw	r18, r4
     6de:	28 1b       	sub	r18, r24
     6e0:	39 0b       	sbc	r19, r25
     6e2:	4a 0b       	sbc	r20, r26
     6e4:	5b 0b       	sbc	r21, r27
     6e6:	28 3c       	cpi	r18, 0xC8	; 200
     6e8:	31 05       	cpc	r19, r1
     6ea:	41 05       	cpc	r20, r1
     6ec:	51 05       	cpc	r21, r1
     6ee:	08 f4       	brcc	.+2      	; 0x6f2 <animalcd+0x21a>
     6f0:	46 c1       	rjmp	.+652    	; 0x97e <__stack+0x7f>
		{
			nokia_lcd_clear();
     6f2:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <nokia_lcd_clear>
			nokia_lcd_write_string("   Tela 2",1);
     6f6:	61 e0       	ldi	r22, 0x01	; 1
     6f8:	87 e3       	ldi	r24, 0x37	; 55
     6fa:	91 e0       	ldi	r25, 0x01	; 1
     6fc:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,20);
     700:	64 e1       	ldi	r22, 0x14	; 20
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(FreqRespiracao_LCD,1);
     708:	61 e0       	ldi	r22, 0x01	; 1
     70a:	ce 01       	movw	r24, r28
     70c:	01 96       	adiw	r24, 0x01	; 1
     70e:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" Resp/Min **",1);
     712:	61 e0       	ldi	r22, 0x01	; 1
     714:	81 e4       	ldi	r24, 0x41	; 65
     716:	91 e0       	ldi	r25, 0x01	; 1
     718:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
     71c:	6e e1       	ldi	r22, 0x1E	; 30
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(SendO2_LCD,1);
     724:	61 e0       	ldi	r22, 0x01	; 1
     726:	ce 01       	movw	r24, r28
     728:	06 96       	adiw	r24, 0x06	; 6
     72a:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string("% O2",1);
     72e:	61 e0       	ldi	r22, 0x01	; 1
     730:	8e e4       	ldi	r24, 0x4E	; 78
     732:	91 e0       	ldi	r25, 0x01	; 1
     734:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
     738:	68 e2       	ldi	r22, 0x28	; 40
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(Volume_LCD,1);
     740:	61 e0       	ldi	r22, 0x01	; 1
     742:	ce 01       	movw	r24, r28
     744:	4a 96       	adiw	r24, 0x1a	; 26
     746:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" Volume",1);
     74a:	61 e0       	ldi	r22, 0x01	; 1
     74c:	83 e5       	ldi	r24, 0x53	; 83
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_render();
     754:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <nokia_lcd_render>
			
			tempo_ms_anterior = tempo_ms_myfun;
     758:	40 92 ac 01 	sts	0x01AC, r4	; 0x8001ac <tempo_ms_anterior.2225>
     75c:	50 92 ad 01 	sts	0x01AD, r5	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     760:	60 92 ae 01 	sts	0x01AE, r6	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     764:	70 92 af 01 	sts	0x01AF, r7	; 0x8001af <tempo_ms_anterior.2225+0x3>
     768:	0a c1       	rjmp	.+532    	; 0x97e <__stack+0x7f>
		}
	}
	
	else if(sel == 3)
     76a:	33 e0       	ldi	r19, 0x03	; 3
     76c:	83 16       	cp	r8, r19
     76e:	91 04       	cpc	r9, r1
     770:	09 f0       	breq	.+2      	; 0x774 <animalcd+0x29c>
     772:	50 c0       	rjmp	.+160    	; 0x814 <animalcd+0x33c>
	{
		if((tempo_ms_myfun - tempo_ms_anterior) >= 200)
     774:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <tempo_ms_anterior.2225>
     778:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     77c:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     780:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <tempo_ms_anterior.2225+0x3>
     784:	a3 01       	movw	r20, r6
     786:	92 01       	movw	r18, r4
     788:	28 1b       	sub	r18, r24
     78a:	39 0b       	sbc	r19, r25
     78c:	4a 0b       	sbc	r20, r26
     78e:	5b 0b       	sbc	r21, r27
     790:	28 3c       	cpi	r18, 0xC8	; 200
     792:	31 05       	cpc	r19, r1
     794:	41 05       	cpc	r20, r1
     796:	51 05       	cpc	r21, r1
     798:	08 f4       	brcc	.+2      	; 0x79c <animalcd+0x2c4>
     79a:	f1 c0       	rjmp	.+482    	; 0x97e <__stack+0x7f>
		{
			nokia_lcd_clear();
     79c:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <nokia_lcd_clear>
			nokia_lcd_write_string("   Tela 2",1);
     7a0:	61 e0       	ldi	r22, 0x01	; 1
     7a2:	87 e3       	ldi	r24, 0x37	; 55
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,20);
     7aa:	64 e1       	ldi	r22, 0x14	; 20
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(FreqRespiracao_LCD,1);
     7b2:	61 e0       	ldi	r22, 0x01	; 1
     7b4:	ce 01       	movw	r24, r28
     7b6:	01 96       	adiw	r24, 0x01	; 1
     7b8:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" Resp/Min",1);
     7bc:	61 e0       	ldi	r22, 0x01	; 1
     7be:	8b e5       	ldi	r24, 0x5B	; 91
     7c0:	91 e0       	ldi	r25, 0x01	; 1
     7c2:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
     7c6:	6e e1       	ldi	r22, 0x1E	; 30
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(SendO2_LCD,1);
     7ce:	61 e0       	ldi	r22, 0x01	; 1
     7d0:	ce 01       	movw	r24, r28
     7d2:	06 96       	adiw	r24, 0x06	; 6
     7d4:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string("% O2 **",1);
     7d8:	61 e0       	ldi	r22, 0x01	; 1
     7da:	85 e6       	ldi	r24, 0x65	; 101
     7dc:	91 e0       	ldi	r25, 0x01	; 1
     7de:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
     7e2:	68 e2       	ldi	r22, 0x28	; 40
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(Volume_LCD,1);
     7ea:	61 e0       	ldi	r22, 0x01	; 1
     7ec:	ce 01       	movw	r24, r28
     7ee:	4a 96       	adiw	r24, 0x1a	; 26
     7f0:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" Volume",1);
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	83 e5       	ldi	r24, 0x53	; 83
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_render();
     7fe:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <nokia_lcd_render>
			
			tempo_ms_anterior = tempo_ms_myfun;
     802:	40 92 ac 01 	sts	0x01AC, r4	; 0x8001ac <tempo_ms_anterior.2225>
     806:	50 92 ad 01 	sts	0x01AD, r5	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     80a:	60 92 ae 01 	sts	0x01AE, r6	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     80e:	70 92 af 01 	sts	0x01AF, r7	; 0x8001af <tempo_ms_anterior.2225+0x3>
     812:	b5 c0       	rjmp	.+362    	; 0x97e <__stack+0x7f>
		}
	}
	
	else if(sel == 4)
     814:	34 e0       	ldi	r19, 0x04	; 4
     816:	83 16       	cp	r8, r19
     818:	91 04       	cpc	r9, r1
     81a:	09 f0       	breq	.+2      	; 0x81e <animalcd+0x346>
     81c:	50 c0       	rjmp	.+160    	; 0x8be <animalcd+0x3e6>
	{
		if((tempo_ms_myfun - tempo_ms_anterior) >= 200)
     81e:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <tempo_ms_anterior.2225>
     822:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     826:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     82a:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <tempo_ms_anterior.2225+0x3>
     82e:	a3 01       	movw	r20, r6
     830:	92 01       	movw	r18, r4
     832:	28 1b       	sub	r18, r24
     834:	39 0b       	sbc	r19, r25
     836:	4a 0b       	sbc	r20, r26
     838:	5b 0b       	sbc	r21, r27
     83a:	28 3c       	cpi	r18, 0xC8	; 200
     83c:	31 05       	cpc	r19, r1
     83e:	41 05       	cpc	r20, r1
     840:	51 05       	cpc	r21, r1
     842:	08 f4       	brcc	.+2      	; 0x846 <animalcd+0x36e>
     844:	9c c0       	rjmp	.+312    	; 0x97e <__stack+0x7f>
		{
			nokia_lcd_clear();
     846:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <nokia_lcd_clear>
			nokia_lcd_write_string("   Tela 2",1);
     84a:	61 e0       	ldi	r22, 0x01	; 1
     84c:	87 e3       	ldi	r24, 0x37	; 55
     84e:	91 e0       	ldi	r25, 0x01	; 1
     850:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,20);
     854:	64 e1       	ldi	r22, 0x14	; 20
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(FreqRespiracao_LCD,1);
     85c:	61 e0       	ldi	r22, 0x01	; 1
     85e:	ce 01       	movw	r24, r28
     860:	01 96       	adiw	r24, 0x01	; 1
     862:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" Resp/Min",1);
     866:	61 e0       	ldi	r22, 0x01	; 1
     868:	8b e5       	ldi	r24, 0x5B	; 91
     86a:	91 e0       	ldi	r25, 0x01	; 1
     86c:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
     870:	6e e1       	ldi	r22, 0x1E	; 30
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(SendO2_LCD,1);
     878:	61 e0       	ldi	r22, 0x01	; 1
     87a:	ce 01       	movw	r24, r28
     87c:	06 96       	adiw	r24, 0x06	; 6
     87e:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string("% O2",1);
     882:	61 e0       	ldi	r22, 0x01	; 1
     884:	8e e4       	ldi	r24, 0x4E	; 78
     886:	91 e0       	ldi	r25, 0x01	; 1
     888:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
     88c:	68 e2       	ldi	r22, 0x28	; 40
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(Volume_LCD,1);
     894:	61 e0       	ldi	r22, 0x01	; 1
     896:	ce 01       	movw	r24, r28
     898:	4a 96       	adiw	r24, 0x1a	; 26
     89a:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" Volume **",1);
     89e:	61 e0       	ldi	r22, 0x01	; 1
     8a0:	8d e6       	ldi	r24, 0x6D	; 109
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_render();
     8a8:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <nokia_lcd_render>
			
			tempo_ms_anterior = tempo_ms_myfun;
     8ac:	40 92 ac 01 	sts	0x01AC, r4	; 0x8001ac <tempo_ms_anterior.2225>
     8b0:	50 92 ad 01 	sts	0x01AD, r5	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     8b4:	60 92 ae 01 	sts	0x01AE, r6	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     8b8:	70 92 af 01 	sts	0x01AF, r7	; 0x8001af <tempo_ms_anterior.2225+0x3>
     8bc:	60 c0       	rjmp	.+192    	; 0x97e <__stack+0x7f>
		}
	}
	
	else if(sel == 5)
     8be:	35 e0       	ldi	r19, 0x05	; 5
     8c0:	83 16       	cp	r8, r19
     8c2:	91 04       	cpc	r9, r1
     8c4:	a1 f5       	brne	.+104    	; 0x92e <__stack+0x2f>
	{
		if((tempo_ms_myfun - tempo_ms_anterior) >= 200)
     8c6:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <tempo_ms_anterior.2225>
     8ca:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     8ce:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     8d2:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <tempo_ms_anterior.2225+0x3>
     8d6:	a3 01       	movw	r20, r6
     8d8:	92 01       	movw	r18, r4
     8da:	28 1b       	sub	r18, r24
     8dc:	39 0b       	sbc	r19, r25
     8de:	4a 0b       	sbc	r20, r26
     8e0:	5b 0b       	sbc	r21, r27
     8e2:	28 3c       	cpi	r18, 0xC8	; 200
     8e4:	31 05       	cpc	r19, r1
     8e6:	41 05       	cpc	r20, r1
     8e8:	51 05       	cpc	r21, r1
     8ea:	08 f4       	brcc	.+2      	; 0x8ee <animalcd+0x416>
     8ec:	48 c0       	rjmp	.+144    	; 0x97e <__stack+0x7f>
		{
			nokia_lcd_clear();
     8ee:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <nokia_lcd_clear>
			nokia_lcd_write_string("   Conforto",1);
     8f2:	61 e0       	ldi	r22, 0x01	; 1
     8f4:	88 e7       	ldi	r24, 0x78	; 120
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,20);
     8fc:	64 e1       	ldi	r22, 0x14	; 20
     8fe:	80 e0       	ldi	r24, 0x00	; 0
     900:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>
			nokia_lcd_write_string(Luz_LCD,1);
     904:	61 e0       	ldi	r22, 0x01	; 1
     906:	ce 01       	movw	r24, r28
     908:	4f 96       	adiw	r24, 0x1f	; 31
     90a:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_write_string(" % da Luz",1);
     90e:	61 e0       	ldi	r22, 0x01	; 1
     910:	84 e8       	ldi	r24, 0x84	; 132
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>
			nokia_lcd_render();
     918:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <nokia_lcd_render>
			
			tempo_ms_anterior = tempo_ms_myfun;
     91c:	40 92 ac 01 	sts	0x01AC, r4	; 0x8001ac <tempo_ms_anterior.2225>
     920:	50 92 ad 01 	sts	0x01AD, r5	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     924:	60 92 ae 01 	sts	0x01AE, r6	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     928:	70 92 af 01 	sts	0x01AF, r7	; 0x8001af <tempo_ms_anterior.2225+0x3>
     92c:	28 c0       	rjmp	.+80     	; 0x97e <__stack+0x7f>
		}
	}
	
	else
	{
		if((tempo_ms_myfun - tempo_ms_anterior) >= 200)
     92e:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <tempo_ms_anterior.2225>
     932:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     936:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     93a:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <tempo_ms_anterior.2225+0x3>
     93e:	a3 01       	movw	r20, r6
     940:	92 01       	movw	r18, r4
     942:	28 1b       	sub	r18, r24
     944:	39 0b       	sbc	r19, r25
     946:	4a 0b       	sbc	r20, r26
     948:	5b 0b       	sbc	r21, r27
     94a:	28 3c       	cpi	r18, 0xC8	; 200
     94c:	31 05       	cpc	r19, r1
     94e:	41 05       	cpc	r20, r1
     950:	51 05       	cpc	r21, r1
     952:	a8 f0       	brcs	.+42     	; 0x97e <__stack+0x7f>
		{
			nokia_lcd_clear();
     954:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <nokia_lcd_clear>

			nokia_lcd_set_cursor(0,20);
     958:	64 e1       	ldi	r22, 0x14	; 20
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <nokia_lcd_set_cursor>

			nokia_lcd_write_string(" ERRO!",2);
     960:	62 e0       	ldi	r22, 0x02	; 2
     962:	8e e8       	ldi	r24, 0x8E	; 142
     964:	91 e0       	ldi	r25, 0x01	; 1
     966:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <nokia_lcd_write_string>

			nokia_lcd_render();
     96a:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <nokia_lcd_render>
			
			tempo_ms_anterior = tempo_ms_myfun;
     96e:	40 92 ac 01 	sts	0x01AC, r4	; 0x8001ac <tempo_ms_anterior.2225>
     972:	50 92 ad 01 	sts	0x01AD, r5	; 0x8001ad <tempo_ms_anterior.2225+0x1>
     976:	60 92 ae 01 	sts	0x01AE, r6	; 0x8001ae <tempo_ms_anterior.2225+0x2>
     97a:	70 92 af 01 	sts	0x01AF, r7	; 0x8001af <tempo_ms_anterior.2225+0x3>
		}
	}
}
     97e:	a7 96       	adiw	r28, 0x27	; 39
     980:	0f b6       	in	r0, 0x3f	; 63
     982:	f8 94       	cli
     984:	de bf       	out	0x3e, r29	; 62
     986:	0f be       	out	0x3f, r0	; 63
     988:	cd bf       	out	0x3d, r28	; 61
     98a:	df 91       	pop	r29
     98c:	cf 91       	pop	r28
     98e:	1f 91       	pop	r17
     990:	0f 91       	pop	r16
     992:	ff 90       	pop	r15
     994:	ef 90       	pop	r14
     996:	df 90       	pop	r13
     998:	cf 90       	pop	r12
     99a:	bf 90       	pop	r11
     99c:	af 90       	pop	r10
     99e:	9f 90       	pop	r9
     9a0:	8f 90       	pop	r8
     9a2:	7f 90       	pop	r7
     9a4:	6f 90       	pop	r6
     9a6:	5f 90       	pop	r5
     9a8:	4f 90       	pop	r4
     9aa:	3f 90       	pop	r3
     9ac:	2f 90       	pop	r2
     9ae:	08 95       	ret

000009b0 <Servo_Resp>:

void Servo_Resp(uint32_t tempo_ms_myfun, uint16_t *FreqRespiracao, uint16_t *Posicao_Servo, uint16_t vol)
{
     9b0:	2f 92       	push	r2
     9b2:	3f 92       	push	r3
     9b4:	4f 92       	push	r4
     9b6:	5f 92       	push	r5
     9b8:	6f 92       	push	r6
     9ba:	7f 92       	push	r7
     9bc:	8f 92       	push	r8
     9be:	9f 92       	push	r9
     9c0:	af 92       	push	r10
     9c2:	bf 92       	push	r11
     9c4:	cf 92       	push	r12
     9c6:	df 92       	push	r13
     9c8:	ef 92       	push	r14
     9ca:	ff 92       	push	r15
     9cc:	0f 93       	push	r16
     9ce:	1f 93       	push	r17
     9d0:	cf 93       	push	r28
     9d2:	df 93       	push	r29
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	a8 97       	sbiw	r28, 0x28	; 40
     9da:	0f b6       	in	r0, 0x3f	; 63
     9dc:	f8 94       	cli
     9de:	de bf       	out	0x3e, r29	; 62
     9e0:	0f be       	out	0x3f, r0	; 63
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	2b 01       	movw	r4, r22
     9e6:	3c 01       	movw	r6, r24
     9e8:	3c a3       	std	Y+36, r19	; 0x24
     9ea:	2b a3       	std	Y+35, r18	; 0x23
     9ec:	18 01       	movw	r2, r16
	uint16_t i = 0;
	uint16_t servo[17];
	
	float seg_resp, seg_led_ms;
	
	for (i = 0; i < volume + 1; i++)		 { servo[i] = 2000 + (250 * i); }
     9ee:	80 90 06 01 	lds	r8, 0x0106	; 0x800106 <volume.2240>
     9f2:	90 90 07 01 	lds	r9, 0x0107	; 0x800107 <volume.2240+0x1>
     9f6:	a0 90 08 01 	lds	r10, 0x0108	; 0x800108 <volume.2240+0x2>
     9fa:	b0 90 09 01 	lds	r11, 0x0109	; 0x800109 <volume.2240+0x3>
     9fe:	2f ef       	ldi	r18, 0xFF	; 255
     a00:	82 16       	cp	r8, r18
     a02:	92 06       	cpc	r9, r18
     a04:	a2 06       	cpc	r10, r18
     a06:	b2 06       	cpc	r11, r18
     a08:	69 f1       	breq	.+90     	; 0xa64 <Servo_Resp+0xb4>
     a0a:	95 01       	movw	r18, r10
     a0c:	84 01       	movw	r16, r8
     a0e:	0f 5f       	subi	r16, 0xFF	; 255
     a10:	1f 4f       	sbci	r17, 0xFF	; 255
     a12:	2f 4f       	sbci	r18, 0xFF	; 255
     a14:	3f 4f       	sbci	r19, 0xFF	; 255
     a16:	de 01       	movw	r26, r28
     a18:	11 96       	adiw	r26, 0x01	; 1
     a1a:	c1 2c       	mov	r12, r1
     a1c:	d1 2c       	mov	r13, r1
     a1e:	76 01       	movw	r14, r12
     a20:	80 ed       	ldi	r24, 0xD0	; 208
     a22:	97 e0       	ldi	r25, 0x07	; 7
     a24:	8d 93       	st	X+, r24
     a26:	9d 93       	st	X+, r25
     a28:	86 50       	subi	r24, 0x06	; 6
     a2a:	9f 4f       	sbci	r25, 0xFF	; 255
     a2c:	6f ef       	ldi	r22, 0xFF	; 255
     a2e:	c6 1a       	sub	r12, r22
     a30:	d6 0a       	sbc	r13, r22
     a32:	e6 0a       	sbc	r14, r22
     a34:	f6 0a       	sbc	r15, r22
     a36:	c0 16       	cp	r12, r16
     a38:	d1 06       	cpc	r13, r17
     a3a:	e2 06       	cpc	r14, r18
     a3c:	f3 06       	cpc	r15, r19
     a3e:	90 f3       	brcs	.-28     	; 0xa24 <Servo_Resp+0x74>
	for (i = volume + 1; i < 2*volume ; i++) { servo[i] = servo[i - 1] - 250; }
     a40:	94 01       	movw	r18, r8
     a42:	2f 5f       	subi	r18, 0xFF	; 255
     a44:	3f 4f       	sbci	r19, 0xFF	; 255
     a46:	75 01       	movw	r14, r10
     a48:	64 01       	movw	r12, r8
     a4a:	cc 0c       	add	r12, r12
     a4c:	dd 1c       	adc	r13, r13
     a4e:	ee 1c       	adc	r14, r14
     a50:	ff 1c       	adc	r15, r15
     a52:	c9 01       	movw	r24, r18
     a54:	a0 e0       	ldi	r26, 0x00	; 0
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	8c 15       	cp	r24, r12
     a5a:	9d 05       	cpc	r25, r13
     a5c:	ae 05       	cpc	r26, r14
     a5e:	bf 05       	cpc	r27, r15
     a60:	58 f0       	brcs	.+22     	; 0xa78 <Servo_Resp+0xc8>
     a62:	23 c0       	rjmp	.+70     	; 0xaaa <Servo_Resp+0xfa>
     a64:	0f 2e       	mov	r0, r31
     a66:	fe ef       	ldi	r31, 0xFE	; 254
     a68:	cf 2e       	mov	r12, r31
     a6a:	dd 24       	eor	r13, r13
     a6c:	da 94       	dec	r13
     a6e:	ed 2c       	mov	r14, r13
     a70:	fd 2c       	mov	r15, r13
     a72:	f0 2d       	mov	r31, r0
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	f4 01       	movw	r30, r8
     a7a:	ee 0f       	add	r30, r30
     a7c:	ff 1f       	adc	r31, r31
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	8c 0f       	add	r24, r28
     a84:	9d 1f       	adc	r25, r29
     a86:	e8 0f       	add	r30, r24
     a88:	f9 1f       	adc	r31, r25
     a8a:	81 91       	ld	r24, Z+
     a8c:	91 91       	ld	r25, Z+
     a8e:	8a 5f       	subi	r24, 0xFA	; 250
     a90:	91 09       	sbc	r25, r1
     a92:	91 83       	std	Z+1, r25	; 0x01
     a94:	80 83       	st	Z, r24
     a96:	2f 5f       	subi	r18, 0xFF	; 255
     a98:	3f 4f       	sbci	r19, 0xFF	; 255
     a9a:	c9 01       	movw	r24, r18
     a9c:	a0 e0       	ldi	r26, 0x00	; 0
     a9e:	b0 e0       	ldi	r27, 0x00	; 0
     aa0:	8c 15       	cp	r24, r12
     aa2:	9d 05       	cpc	r25, r13
     aa4:	ae 05       	cpc	r26, r14
     aa6:	bf 05       	cpc	r27, r15
     aa8:	80 f3       	brcs	.-32     	; 0xa8a <Servo_Resp+0xda>
	
	seg_resp = 60/ *FreqRespiracao;
     aaa:	da 01       	movw	r26, r20
     aac:	6d 91       	ld	r22, X+
     aae:	7c 91       	ld	r23, X
     ab0:	8c e3       	ldi	r24, 0x3C	; 60
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__udivmodhi4>
     ab8:	80 e0       	ldi	r24, 0x00	; 0
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__floatunsisf>
	seg_led_ms = seg_resp*1000/(2*volume);
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	4a e7       	ldi	r20, 0x7A	; 122
     ac6:	54 e4       	ldi	r21, 0x44	; 68
     ac8:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <__mulsf3>
     acc:	6d a3       	std	Y+37, r22	; 0x25
     ace:	7e a3       	std	Y+38, r23	; 0x26
     ad0:	8f a3       	std	Y+39, r24	; 0x27
     ad2:	98 a7       	std	Y+40, r25	; 0x28
     ad4:	c7 01       	movw	r24, r14
     ad6:	b6 01       	movw	r22, r12
     ad8:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__floatunsisf>
     adc:	9b 01       	movw	r18, r22
     ade:	ac 01       	movw	r20, r24
     ae0:	6d a1       	ldd	r22, Y+37	; 0x25
     ae2:	7e a1       	ldd	r23, Y+38	; 0x26
     ae4:	8f a1       	ldd	r24, Y+39	; 0x27
     ae6:	98 a5       	ldd	r25, Y+40	; 0x28
     ae8:	0e 94 42 0c 	call	0x1884	; 0x1884 <__divsf3>
     aec:	6b 01       	movw	r12, r22
     aee:	7c 01       	movw	r14, r24
	
	if((tempo_ms_myfun - tempo_ms_anterior) >= seg_led_ms)
     af0:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <tempo_ms_anterior.2239>
     af4:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <tempo_ms_anterior.2239+0x1>
     af8:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <tempo_ms_anterior.2239+0x2>
     afc:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <tempo_ms_anterior.2239+0x3>
     b00:	a3 01       	movw	r20, r6
     b02:	92 01       	movw	r18, r4
     b04:	28 1b       	sub	r18, r24
     b06:	39 0b       	sbc	r19, r25
     b08:	4a 0b       	sbc	r20, r26
     b0a:	5b 0b       	sbc	r21, r27
     b0c:	ca 01       	movw	r24, r20
     b0e:	b9 01       	movw	r22, r18
     b10:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__floatunsisf>
     b14:	9b 01       	movw	r18, r22
     b16:	ac 01       	movw	r20, r24
     b18:	c7 01       	movw	r24, r14
     b1a:	b6 01       	movw	r22, r12
     b1c:	0e 94 3d 0c 	call	0x187a	; 0x187a <__cmpsf2>
     b20:	18 16       	cp	r1, r24
     b22:	0c f4       	brge	.+2      	; 0xb26 <Servo_Resp+0x176>
     b24:	49 c0       	rjmp	.+146    	; 0xbb8 <Servo_Resp+0x208>
	{
		OCR1A = servo[*Posicao_Servo];
     b26:	ab a1       	ldd	r26, Y+35	; 0x23
     b28:	bc a1       	ldd	r27, Y+36	; 0x24
     b2a:	ed 91       	ld	r30, X+
     b2c:	fc 91       	ld	r31, X
     b2e:	11 97       	sbiw	r26, 0x01	; 1
     b30:	ee 0f       	add	r30, r30
     b32:	ff 1f       	adc	r31, r31
     b34:	ec 0f       	add	r30, r28
     b36:	fd 1f       	adc	r31, r29
     b38:	81 81       	ldd	r24, Z+1	; 0x01
     b3a:	92 81       	ldd	r25, Z+2	; 0x02
     b3c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     b40:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		*Posicao_Servo = *Posicao_Servo + 1;
     b44:	8d 91       	ld	r24, X+
     b46:	9c 91       	ld	r25, X
     b48:	11 97       	sbiw	r26, 0x01	; 1
     b4a:	01 96       	adiw	r24, 0x01	; 1
     b4c:	8d 93       	st	X+, r24
     b4e:	9c 93       	st	X, r25
		if (*Posicao_Servo == (2*volume))
     b50:	a0 e0       	ldi	r26, 0x00	; 0
     b52:	b0 e0       	ldi	r27, 0x00	; 0
     b54:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <volume.2240>
     b58:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <volume.2240+0x1>
     b5c:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <volume.2240+0x2>
     b60:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <volume.2240+0x3>
     b64:	44 0f       	add	r20, r20
     b66:	55 1f       	adc	r21, r21
     b68:	66 1f       	adc	r22, r22
     b6a:	77 1f       	adc	r23, r23
     b6c:	84 17       	cp	r24, r20
     b6e:	95 07       	cpc	r25, r21
     b70:	a6 07       	cpc	r26, r22
     b72:	b7 07       	cpc	r27, r23
     b74:	79 f4       	brne	.+30     	; 0xb94 <Servo_Resp+0x1e4>
		{
			*Posicao_Servo = 0;
     b76:	eb a1       	ldd	r30, Y+35	; 0x23
     b78:	fc a1       	ldd	r31, Y+36	; 0x24
     b7a:	11 82       	std	Z+1, r1	; 0x01
     b7c:	10 82       	st	Z, r1
			
			// O volume da respiração é trocado apenas após completar o ciclo, a fim de não inteferir de maneira descontrolada na respiração do paciente.
			volume = vol;
     b7e:	81 01       	movw	r16, r2
     b80:	20 e0       	ldi	r18, 0x00	; 0
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	00 93 06 01 	sts	0x0106, r16	; 0x800106 <volume.2240>
     b88:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <volume.2240+0x1>
     b8c:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <volume.2240+0x2>
     b90:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <volume.2240+0x3>
		}
		
		if (OCR1A == 2000) {PORTD |= 0b01000000;}
     b94:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     b98:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     b9c:	80 3d       	cpi	r24, 0xD0	; 208
     b9e:	97 40       	sbci	r25, 0x07	; 7
     ba0:	11 f4       	brne	.+4      	; 0xba6 <Servo_Resp+0x1f6>
     ba2:	5e 9a       	sbi	0x0b, 6	; 11
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <Servo_Resp+0x1f8>
		else			   {PORTD &= 0b10111111;}
     ba6:	5e 98       	cbi	0x0b, 6	; 11
		
		tempo_ms_anterior = tempo_ms_myfun;
     ba8:	40 92 a8 01 	sts	0x01A8, r4	; 0x8001a8 <tempo_ms_anterior.2239>
     bac:	50 92 a9 01 	sts	0x01A9, r5	; 0x8001a9 <tempo_ms_anterior.2239+0x1>
     bb0:	60 92 aa 01 	sts	0x01AA, r6	; 0x8001aa <tempo_ms_anterior.2239+0x2>
     bb4:	70 92 ab 01 	sts	0x01AB, r7	; 0x8001ab <tempo_ms_anterior.2239+0x3>
	}
}
     bb8:	a8 96       	adiw	r28, 0x28	; 40
     bba:	0f b6       	in	r0, 0x3f	; 63
     bbc:	f8 94       	cli
     bbe:	de bf       	out	0x3e, r29	; 62
     bc0:	0f be       	out	0x3f, r0	; 63
     bc2:	cd bf       	out	0x3d, r28	; 61
     bc4:	df 91       	pop	r29
     bc6:	cf 91       	pop	r28
     bc8:	1f 91       	pop	r17
     bca:	0f 91       	pop	r16
     bcc:	ff 90       	pop	r15
     bce:	ef 90       	pop	r14
     bd0:	df 90       	pop	r13
     bd2:	cf 90       	pop	r12
     bd4:	bf 90       	pop	r11
     bd6:	af 90       	pop	r10
     bd8:	9f 90       	pop	r9
     bda:	8f 90       	pop	r8
     bdc:	7f 90       	pop	r7
     bde:	6f 90       	pop	r6
     be0:	5f 90       	pop	r5
     be2:	4f 90       	pop	r4
     be4:	3f 90       	pop	r3
     be6:	2f 90       	pop	r2
     be8:	08 95       	ret

00000bea <Servo_O2>:

void Servo_O2(uint16_t *SendO2)
{
     bea:	cf 93       	push	r28
     bec:	df 93       	push	r29
     bee:	cd b7       	in	r28, 0x3d	; 61
     bf0:	de b7       	in	r29, 0x3e	; 62
     bf2:	68 97       	sbiw	r28, 0x18	; 24
     bf4:	0f b6       	in	r0, 0x3f	; 63
     bf6:	f8 94       	cli
     bf8:	de bf       	out	0x3e, r29	; 62
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	cd bf       	out	0x3d, r28	; 61
	
	uint16_t servo[12] = {2000, 2200, 2400, 2600, 2800, 3000, 3200, 3400, 3600, 3800, 4000};
     bfe:	de 01       	movw	r26, r28
     c00:	11 96       	adiw	r26, 0x01	; 1
     c02:	28 e1       	ldi	r18, 0x18	; 24
     c04:	fd 01       	movw	r30, r26
     c06:	11 92       	st	Z+, r1
     c08:	2a 95       	dec	r18
     c0a:	e9 f7       	brne	.-6      	; 0xc06 <Servo_O2+0x1c>
     c0c:	20 ed       	ldi	r18, 0xD0	; 208
     c0e:	37 e0       	ldi	r19, 0x07	; 7
     c10:	3a 83       	std	Y+2, r19	; 0x02
     c12:	29 83       	std	Y+1, r18	; 0x01
     c14:	28 e9       	ldi	r18, 0x98	; 152
     c16:	38 e0       	ldi	r19, 0x08	; 8
     c18:	3c 83       	std	Y+4, r19	; 0x04
     c1a:	2b 83       	std	Y+3, r18	; 0x03
     c1c:	20 e6       	ldi	r18, 0x60	; 96
     c1e:	39 e0       	ldi	r19, 0x09	; 9
     c20:	3e 83       	std	Y+6, r19	; 0x06
     c22:	2d 83       	std	Y+5, r18	; 0x05
     c24:	28 e2       	ldi	r18, 0x28	; 40
     c26:	3a e0       	ldi	r19, 0x0A	; 10
     c28:	38 87       	std	Y+8, r19	; 0x08
     c2a:	2f 83       	std	Y+7, r18	; 0x07
     c2c:	20 ef       	ldi	r18, 0xF0	; 240
     c2e:	3a e0       	ldi	r19, 0x0A	; 10
     c30:	3a 87       	std	Y+10, r19	; 0x0a
     c32:	29 87       	std	Y+9, r18	; 0x09
     c34:	28 eb       	ldi	r18, 0xB8	; 184
     c36:	3b e0       	ldi	r19, 0x0B	; 11
     c38:	3c 87       	std	Y+12, r19	; 0x0c
     c3a:	2b 87       	std	Y+11, r18	; 0x0b
     c3c:	20 e8       	ldi	r18, 0x80	; 128
     c3e:	3c e0       	ldi	r19, 0x0C	; 12
     c40:	3e 87       	std	Y+14, r19	; 0x0e
     c42:	2d 87       	std	Y+13, r18	; 0x0d
     c44:	28 e4       	ldi	r18, 0x48	; 72
     c46:	3d e0       	ldi	r19, 0x0D	; 13
     c48:	38 8b       	std	Y+16, r19	; 0x10
     c4a:	2f 87       	std	Y+15, r18	; 0x0f
     c4c:	20 e1       	ldi	r18, 0x10	; 16
     c4e:	3e e0       	ldi	r19, 0x0E	; 14
     c50:	3a 8b       	std	Y+18, r19	; 0x12
     c52:	29 8b       	std	Y+17, r18	; 0x11
     c54:	28 ed       	ldi	r18, 0xD8	; 216
     c56:	3e e0       	ldi	r19, 0x0E	; 14
     c58:	3c 8b       	std	Y+20, r19	; 0x14
     c5a:	2b 8b       	std	Y+19, r18	; 0x13
     c5c:	20 ea       	ldi	r18, 0xA0	; 160
     c5e:	3f e0       	ldi	r19, 0x0F	; 15
     c60:	3e 8b       	std	Y+22, r19	; 0x16
     c62:	2d 8b       	std	Y+21, r18	; 0x15
	
	OCR1B = servo[*SendO2];
     c64:	fc 01       	movw	r30, r24
     c66:	80 81       	ld	r24, Z
     c68:	91 81       	ldd	r25, Z+1	; 0x01
     c6a:	fc 01       	movw	r30, r24
     c6c:	ee 0f       	add	r30, r30
     c6e:	ff 1f       	adc	r31, r31
     c70:	ea 0f       	add	r30, r26
     c72:	fb 1f       	adc	r31, r27
     c74:	80 81       	ld	r24, Z
     c76:	91 81       	ldd	r25, Z+1	; 0x01
     c78:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     c7c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
}
     c80:	68 96       	adiw	r28, 0x18	; 24
     c82:	0f b6       	in	r0, 0x3f	; 63
     c84:	f8 94       	cli
     c86:	de bf       	out	0x3e, r29	; 62
     c88:	0f be       	out	0x3f, r0	; 63
     c8a:	cd bf       	out	0x3d, r28	; 61
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	08 95       	ret

00000c92 <bpm>:

void bpm(uint32_t tempo_ms_myfun, uint16_t *batimentos, uint16_t *batimentos_min)
{
     c92:	cf 92       	push	r12
     c94:	df 92       	push	r13
     c96:	ef 92       	push	r14
     c98:	ff 92       	push	r15
     c9a:	0f 93       	push	r16
     c9c:	1f 93       	push	r17
     c9e:	cf 93       	push	r28
     ca0:	df 93       	push	r29
     ca2:	f9 01       	movw	r30, r18
	static uint32_t tempo_ms_anterior = 0;

	if((tempo_ms_myfun - tempo_ms_anterior) >= 3000)
     ca4:	00 91 a4 01 	lds	r16, 0x01A4	; 0x8001a4 <tempo_ms_anterior.2260>
     ca8:	10 91 a5 01 	lds	r17, 0x01A5	; 0x8001a5 <tempo_ms_anterior.2260+0x1>
     cac:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <tempo_ms_anterior.2260+0x2>
     cb0:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <tempo_ms_anterior.2260+0x3>
     cb4:	6b 01       	movw	r12, r22
     cb6:	7c 01       	movw	r14, r24
     cb8:	c0 1a       	sub	r12, r16
     cba:	d1 0a       	sbc	r13, r17
     cbc:	e2 0a       	sbc	r14, r18
     cbe:	f3 0a       	sbc	r15, r19
     cc0:	a8 eb       	ldi	r26, 0xB8	; 184
     cc2:	ca 16       	cp	r12, r26
     cc4:	ab e0       	ldi	r26, 0x0B	; 11
     cc6:	da 06       	cpc	r13, r26
     cc8:	e1 04       	cpc	r14, r1
     cca:	f1 04       	cpc	r15, r1
     ccc:	a8 f0       	brcs	.+42     	; 0xcf8 <bpm+0x66>
	{
		*batimentos_min = *batimentos;
		*batimentos_min = 20*(*batimentos_min);
     cce:	ea 01       	movw	r28, r20
     cd0:	a8 81       	ld	r26, Y
     cd2:	b9 81       	ldd	r27, Y+1	; 0x01
     cd4:	14 e1       	ldi	r17, 0x14	; 20
     cd6:	1a 9f       	mul	r17, r26
     cd8:	90 01       	movw	r18, r0
     cda:	1b 9f       	mul	r17, r27
     cdc:	30 0d       	add	r19, r0
     cde:	11 24       	eor	r1, r1
     ce0:	31 83       	std	Z+1, r19	; 0x01
     ce2:	20 83       	st	Z, r18
		*batimentos = 0;
     ce4:	19 82       	std	Y+1, r1	; 0x01
     ce6:	18 82       	st	Y, r1
		
		tempo_ms_anterior = tempo_ms_myfun;
     ce8:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <tempo_ms_anterior.2260>
     cec:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <tempo_ms_anterior.2260+0x1>
     cf0:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <tempo_ms_anterior.2260+0x2>
     cf4:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <tempo_ms_anterior.2260+0x3>
	}
}
     cf8:	df 91       	pop	r29
     cfa:	cf 91       	pop	r28
     cfc:	1f 91       	pop	r17
     cfe:	0f 91       	pop	r16
     d00:	ff 90       	pop	r15
     d02:	ef 90       	pop	r14
     d04:	df 90       	pop	r13
     d06:	cf 90       	pop	r12
     d08:	08 95       	ret

00000d0a <temperatura>:

void temperatura(uint32_t tempo_ms_myfun, uint16_t *temp_celsius, uint16_t *flag_150ms)
{
     d0a:	cf 92       	push	r12
     d0c:	df 92       	push	r13
     d0e:	ef 92       	push	r14
     d10:	ff 92       	push	r15
     d12:	0f 93       	push	r16
     d14:	1f 93       	push	r17
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29
     d1a:	e9 01       	movw	r28, r18
	static uint32_t tempo_ms_anterior = 0;
	
	if((tempo_ms_myfun - tempo_ms_anterior) >= 150)
     d1c:	00 91 a0 01 	lds	r16, 0x01A0	; 0x8001a0 <tempo_ms_anterior.2266>
     d20:	10 91 a1 01 	lds	r17, 0x01A1	; 0x8001a1 <tempo_ms_anterior.2266+0x1>
     d24:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <tempo_ms_anterior.2266+0x2>
     d28:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <tempo_ms_anterior.2266+0x3>
     d2c:	6b 01       	movw	r12, r22
     d2e:	7c 01       	movw	r14, r24
     d30:	c0 1a       	sub	r12, r16
     d32:	d1 0a       	sbc	r13, r17
     d34:	e2 0a       	sbc	r14, r18
     d36:	f3 0a       	sbc	r15, r19
     d38:	26 e9       	ldi	r18, 0x96	; 150
     d3a:	c2 16       	cp	r12, r18
     d3c:	d1 04       	cpc	r13, r1
     d3e:	e1 04       	cpc	r14, r1
     d40:	f1 04       	cpc	r15, r1
     d42:	08 f4       	brcc	.+2      	; 0xd46 <temperatura+0x3c>
     d44:	3f c0       	rjmp	.+126    	; 0xdc4 <temperatura+0xba>
     d46:	8a 01       	movw	r16, r20
     d48:	6b 01       	movw	r12, r22
     d4a:	7c 01       	movw	r14, r24
	{
		if (*flag_150ms == 0)
     d4c:	88 81       	ld	r24, Y
     d4e:	99 81       	ldd	r25, Y+1	; 0x01
     d50:	89 2b       	or	r24, r25
     d52:	81 f5       	brne	.+96     	; 0xdb4 <temperatura+0xaa>
		{
			*temp_celsius = 0.049*ADC + 10.01039;	  // Conversão de B para Temperatura com https://mycurvefit.com/ | Pontos: (410,30),(511,35),(614,40),(717,45)
     d54:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     d58:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__floatunsisf>
     d64:	29 e3       	ldi	r18, 0x39	; 57
     d66:	34 eb       	ldi	r19, 0xB4	; 180
     d68:	48 e4       	ldi	r20, 0x48	; 72
     d6a:	5d e3       	ldi	r21, 0x3D	; 61
     d6c:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <__mulsf3>
     d70:	2f e8       	ldi	r18, 0x8F	; 143
     d72:	3a e2       	ldi	r19, 0x2A	; 42
     d74:	40 e2       	ldi	r20, 0x20	; 32
     d76:	51 e4       	ldi	r21, 0x41	; 65
     d78:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__addsf3>
     d7c:	0e 94 b4 0c 	call	0x1968	; 0x1968 <__fixunssfsi>
     d80:	f8 01       	movw	r30, r16
     d82:	71 83       	std	Z+1, r23	; 0x01
     d84:	60 83       	st	Z, r22
			if (*temp_celsius > 45) {*temp_celsius = 45;}
     d86:	6e 32       	cpi	r22, 0x2E	; 46
     d88:	71 05       	cpc	r23, r1
     d8a:	28 f0       	brcs	.+10     	; 0xd96 <temperatura+0x8c>
     d8c:	8d e2       	ldi	r24, 0x2D	; 45
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	91 83       	std	Z+1, r25	; 0x01
     d92:	80 83       	st	Z, r24
     d94:	08 c0       	rjmp	.+16     	; 0xda6 <temperatura+0x9c>
			if (*temp_celsius < 30) {*temp_celsius = 30;}
     d96:	6e 31       	cpi	r22, 0x1E	; 30
     d98:	71 05       	cpc	r23, r1
     d9a:	28 f4       	brcc	.+10     	; 0xda6 <temperatura+0x9c>
     d9c:	8e e1       	ldi	r24, 0x1E	; 30
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	f8 01       	movw	r30, r16
     da2:	91 83       	std	Z+1, r25	; 0x01
     da4:	80 83       	st	Z, r24
			ADMUX  = 0b01000001;
     da6:	81 e4       	ldi	r24, 0x41	; 65
     da8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
			*flag_150ms = 1;
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	99 83       	std	Y+1, r25	; 0x01
     db2:	88 83       	st	Y, r24
		}
		
		tempo_ms_anterior = tempo_ms_myfun;
     db4:	c0 92 a0 01 	sts	0x01A0, r12	; 0x8001a0 <tempo_ms_anterior.2266>
     db8:	d0 92 a1 01 	sts	0x01A1, r13	; 0x8001a1 <tempo_ms_anterior.2266+0x1>
     dbc:	e0 92 a2 01 	sts	0x01A2, r14	; 0x8001a2 <tempo_ms_anterior.2266+0x2>
     dc0:	f0 92 a3 01 	sts	0x01A3, r15	; 0x8001a3 <tempo_ms_anterior.2266+0x3>
		
	}
}
     dc4:	df 91       	pop	r29
     dc6:	cf 91       	pop	r28
     dc8:	1f 91       	pop	r17
     dca:	0f 91       	pop	r16
     dcc:	ff 90       	pop	r15
     dce:	ef 90       	pop	r14
     dd0:	df 90       	pop	r13
     dd2:	cf 90       	pop	r12
     dd4:	08 95       	ret

00000dd6 <saturacao_O2>:

void saturacao_O2(uint32_t tempo_ms_myfun, uint16_t *SpO2, uint16_t *flag_150ms)
{
     dd6:	cf 92       	push	r12
     dd8:	df 92       	push	r13
     dda:	ef 92       	push	r14
     ddc:	ff 92       	push	r15
     dde:	0f 93       	push	r16
     de0:	1f 93       	push	r17
     de2:	cf 93       	push	r28
     de4:	df 93       	push	r29
     de6:	e9 01       	movw	r28, r18
	static uint32_t tempo_ms_anterior = 0;
	
	if((tempo_ms_myfun - tempo_ms_anterior) >= 300)
     de8:	00 91 9c 01 	lds	r16, 0x019C	; 0x80019c <tempo_ms_anterior.2272>
     dec:	10 91 9d 01 	lds	r17, 0x019D	; 0x80019d <tempo_ms_anterior.2272+0x1>
     df0:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <tempo_ms_anterior.2272+0x2>
     df4:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <tempo_ms_anterior.2272+0x3>
     df8:	6b 01       	movw	r12, r22
     dfa:	7c 01       	movw	r14, r24
     dfc:	c0 1a       	sub	r12, r16
     dfe:	d1 0a       	sbc	r13, r17
     e00:	e2 0a       	sbc	r14, r18
     e02:	f3 0a       	sbc	r15, r19
     e04:	2c e2       	ldi	r18, 0x2C	; 44
     e06:	c2 16       	cp	r12, r18
     e08:	21 e0       	ldi	r18, 0x01	; 1
     e0a:	d2 06       	cpc	r13, r18
     e0c:	e1 04       	cpc	r14, r1
     e0e:	f1 04       	cpc	r15, r1
     e10:	b0 f1       	brcs	.+108    	; 0xe7e <saturacao_O2+0xa8>
     e12:	8a 01       	movw	r16, r20
     e14:	6b 01       	movw	r12, r22
     e16:	7c 01       	movw	r14, r24
	{
		if (*flag_150ms == 1)
     e18:	88 81       	ld	r24, Y
     e1a:	99 81       	ldd	r25, Y+1	; 0x01
     e1c:	01 97       	sbiw	r24, 0x01	; 1
     e1e:	39 f5       	brne	.+78     	; 0xe6e <saturacao_O2+0x98>
		{
			*SpO2 = 0.123*ADC + 0.02598703;	  // Conversão de B para Temperatura com https://mycurvefit.com/ | Pontos: (410,50),(511,62.5),(614,75),(717,87.5)
     e20:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     e24:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__floatunsisf>
     e30:	2d e6       	ldi	r18, 0x6D	; 109
     e32:	37 ee       	ldi	r19, 0xE7	; 231
     e34:	4b ef       	ldi	r20, 0xFB	; 251
     e36:	5d e3       	ldi	r21, 0x3D	; 61
     e38:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <__mulsf3>
     e3c:	20 ec       	ldi	r18, 0xC0	; 192
     e3e:	32 ee       	ldi	r19, 0xE2	; 226
     e40:	44 ed       	ldi	r20, 0xD4	; 212
     e42:	5c e3       	ldi	r21, 0x3C	; 60
     e44:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__addsf3>
     e48:	0e 94 b4 0c 	call	0x1968	; 0x1968 <__fixunssfsi>
			if (*SpO2 > 100) {*SpO2 = 100;}
     e4c:	65 36       	cpi	r22, 0x65	; 101
     e4e:	71 05       	cpc	r23, r1
     e50:	20 f4       	brcc	.+8      	; 0xe5a <saturacao_O2+0x84>
	
	if((tempo_ms_myfun - tempo_ms_anterior) >= 300)
	{
		if (*flag_150ms == 1)
		{
			*SpO2 = 0.123*ADC + 0.02598703;	  // Conversão de B para Temperatura com https://mycurvefit.com/ | Pontos: (410,50),(511,62.5),(614,75),(717,87.5)
     e52:	f8 01       	movw	r30, r16
     e54:	71 83       	std	Z+1, r23	; 0x01
     e56:	60 83       	st	Z, r22
     e58:	05 c0       	rjmp	.+10     	; 0xe64 <saturacao_O2+0x8e>
			if (*SpO2 > 100) {*SpO2 = 100;}
     e5a:	84 e6       	ldi	r24, 0x64	; 100
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	f8 01       	movw	r30, r16
     e60:	91 83       	std	Z+1, r25	; 0x01
     e62:	80 83       	st	Z, r24
			ADMUX  = 0b01000000;
     e64:	80 e4       	ldi	r24, 0x40	; 64
     e66:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
			*flag_150ms = 0;
     e6a:	19 82       	std	Y+1, r1	; 0x01
     e6c:	18 82       	st	Y, r1
		}

		tempo_ms_anterior = tempo_ms_myfun;
     e6e:	c0 92 9c 01 	sts	0x019C, r12	; 0x80019c <tempo_ms_anterior.2272>
     e72:	d0 92 9d 01 	sts	0x019D, r13	; 0x80019d <tempo_ms_anterior.2272+0x1>
     e76:	e0 92 9e 01 	sts	0x019E, r14	; 0x80019e <tempo_ms_anterior.2272+0x2>
     e7a:	f0 92 9f 01 	sts	0x019F, r15	; 0x80019f <tempo_ms_anterior.2272+0x3>
		
	}
}
     e7e:	df 91       	pop	r29
     e80:	cf 91       	pop	r28
     e82:	1f 91       	pop	r17
     e84:	0f 91       	pop	r16
     e86:	ff 90       	pop	r15
     e88:	ef 90       	pop	r14
     e8a:	df 90       	pop	r13
     e8c:	cf 90       	pop	r12
     e8e:	08 95       	ret

00000e90 <control_luz>:

void control_luz(uint16_t luz)
{
	uint16_t aux1 = luz;
	
	if (aux1 == 0)
     e90:	00 97       	sbiw	r24, 0x00	; 0
     e92:	39 f4       	brne	.+14     	; 0xea2 <control_luz+0x12>
	{
		PORTD |= 0b00100011;
     e94:	8b b1       	in	r24, 0x0b	; 11
     e96:	83 62       	ori	r24, 0x23	; 35
     e98:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11011100;
     e9a:	8b b1       	in	r24, 0x0b	; 11
     e9c:	8c 7d       	andi	r24, 0xDC	; 220
     e9e:	8b b9       	out	0x0b, r24	; 11
     ea0:	08 95       	ret
	}
	else if (aux1 == 1)
     ea2:	81 30       	cpi	r24, 0x01	; 1
     ea4:	91 05       	cpc	r25, r1
     ea6:	39 f4       	brne	.+14     	; 0xeb6 <control_luz+0x26>
	{
		PORTD |= 0b00100011;
     ea8:	8b b1       	in	r24, 0x0b	; 11
     eaa:	83 62       	ori	r24, 0x23	; 35
     eac:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11011101;
     eae:	8b b1       	in	r24, 0x0b	; 11
     eb0:	8d 7d       	andi	r24, 0xDD	; 221
     eb2:	8b b9       	out	0x0b, r24	; 11
     eb4:	08 95       	ret
	}
	else if (aux1 == 2)
     eb6:	82 30       	cpi	r24, 0x02	; 2
     eb8:	91 05       	cpc	r25, r1
     eba:	39 f4       	brne	.+14     	; 0xeca <control_luz+0x3a>
	{
		PORTD |= 0b00100011;
     ebc:	8b b1       	in	r24, 0x0b	; 11
     ebe:	83 62       	ori	r24, 0x23	; 35
     ec0:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11011110;
     ec2:	8b b1       	in	r24, 0x0b	; 11
     ec4:	8e 7d       	andi	r24, 0xDE	; 222
     ec6:	8b b9       	out	0x0b, r24	; 11
     ec8:	08 95       	ret
	}
	else if (aux1 == 3)
     eca:	83 30       	cpi	r24, 0x03	; 3
     ecc:	91 05       	cpc	r25, r1
     ece:	29 f4       	brne	.+10     	; 0xeda <control_luz+0x4a>
	{
		PORTD |= 0b00100011;
     ed0:	8b b1       	in	r24, 0x0b	; 11
     ed2:	83 62       	ori	r24, 0x23	; 35
     ed4:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11011111;
     ed6:	5d 98       	cbi	0x0b, 5	; 11
     ed8:	08 95       	ret
	}
	else if (aux1 == 4)
     eda:	84 30       	cpi	r24, 0x04	; 4
     edc:	91 05       	cpc	r25, r1
     ede:	39 f4       	brne	.+14     	; 0xeee <control_luz+0x5e>
	{
		PORTD |= 0b00100011;
     ee0:	8b b1       	in	r24, 0x0b	; 11
     ee2:	83 62       	ori	r24, 0x23	; 35
     ee4:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11111100;
     ee6:	8b b1       	in	r24, 0x0b	; 11
     ee8:	8c 7f       	andi	r24, 0xFC	; 252
     eea:	8b b9       	out	0x0b, r24	; 11
     eec:	08 95       	ret
	}
	else if (aux1 == 5)
     eee:	85 30       	cpi	r24, 0x05	; 5
     ef0:	91 05       	cpc	r25, r1
     ef2:	29 f4       	brne	.+10     	; 0xefe <control_luz+0x6e>
	{
		PORTD |= 0b00100011;
     ef4:	8b b1       	in	r24, 0x0b	; 11
     ef6:	83 62       	ori	r24, 0x23	; 35
     ef8:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11111101;
     efa:	59 98       	cbi	0x0b, 1	; 11
     efc:	08 95       	ret
	}
	else if (aux1 == 6)
     efe:	86 30       	cpi	r24, 0x06	; 6
     f00:	91 05       	cpc	r25, r1
     f02:	29 f4       	brne	.+10     	; 0xf0e <control_luz+0x7e>
	{
		PORTD |= 0b00100011;
     f04:	8b b1       	in	r24, 0x0b	; 11
     f06:	83 62       	ori	r24, 0x23	; 35
     f08:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11111110;
     f0a:	58 98       	cbi	0x0b, 0	; 11
     f0c:	08 95       	ret
	}
	else if (aux1 == 7)
     f0e:	07 97       	sbiw	r24, 0x07	; 7
     f10:	29 f4       	brne	.+10     	; 0xf1c <control_luz+0x8c>
	{
		PORTD |= 0b00100011;
     f12:	8b b1       	in	r24, 0x0b	; 11
     f14:	83 62       	ori	r24, 0x23	; 35
     f16:	8b b9       	out	0x0b, r24	; 11
		PORTD &= 0b11111111;
     f18:	8b b1       	in	r24, 0x0b	; 11
     f1a:	8b b9       	out	0x0b, r24	; 11
     f1c:	08 95       	ret

00000f1e <alarme>:
	}
	else {}
}

void alarme( uint32_t tempo_ms_myfun, uint16_t temp_celsius, uint16_t SpO2)
{
     f1e:	cf 92       	push	r12
     f20:	df 92       	push	r13
     f22:	ef 92       	push	r14
     f24:	ff 92       	push	r15
     f26:	0f 93       	push	r16
     f28:	1f 93       	push	r17
     f2a:	cf 93       	push	r28
	static uint32_t tempo_ms_anterior = 0;
	
	
	if( (SpO2 < 60) | (temp_celsius < 35) | (temp_celsius > 41) )
     f2c:	c1 e0       	ldi	r28, 0x01	; 1
     f2e:	2c 33       	cpi	r18, 0x3C	; 60
     f30:	31 05       	cpc	r19, r1
     f32:	08 f0       	brcs	.+2      	; 0xf36 <alarme+0x18>
     f34:	c0 e0       	ldi	r28, 0x00	; 0
     f36:	21 e0       	ldi	r18, 0x01	; 1
     f38:	fa 01       	movw	r30, r20
     f3a:	b3 97       	sbiw	r30, 0x23	; 35
     f3c:	37 97       	sbiw	r30, 0x07	; 7
     f3e:	08 f4       	brcc	.+2      	; 0xf42 <alarme+0x24>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	21 11       	cpse	r18, r1
     f44:	03 c0       	rjmp	.+6      	; 0xf4c <alarme+0x2e>
     f46:	cc 23       	and	r28, r28
     f48:	09 f4       	brne	.+2      	; 0xf4c <alarme+0x2e>
     f4a:	fa c0       	rjmp	.+500    	; 0x1140 <alarme+0x222>
	{
		PORTD |= 0b10000000;
     f4c:	5f 9a       	sbi	0x0b, 7	; 11
		
		if((tempo_ms_myfun - tempo_ms_anterior) >= 3000)
     f4e:	00 91 98 01 	lds	r16, 0x0198	; 0x800198 <__data_end>
     f52:	10 91 99 01 	lds	r17, 0x0199	; 0x800199 <__data_end+0x1>
     f56:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <__data_end+0x2>
     f5a:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <__data_end+0x3>
     f5e:	6b 01       	movw	r12, r22
     f60:	7c 01       	movw	r14, r24
     f62:	c0 1a       	sub	r12, r16
     f64:	d1 0a       	sbc	r13, r17
     f66:	e2 0a       	sbc	r14, r18
     f68:	f3 0a       	sbc	r15, r19
     f6a:	e8 eb       	ldi	r30, 0xB8	; 184
     f6c:	ce 16       	cp	r12, r30
     f6e:	eb e0       	ldi	r30, 0x0B	; 11
     f70:	de 06       	cpc	r13, r30
     f72:	e1 04       	cpc	r14, r1
     f74:	f1 04       	cpc	r15, r1
     f76:	08 f4       	brcc	.+2      	; 0xf7a <alarme+0x5c>
     f78:	e4 c0       	rjmp	.+456    	; 0x1142 <alarme+0x224>
     f7a:	8a 01       	movw	r16, r20
     f7c:	6b 01       	movw	r12, r22
     f7e:	7c 01       	movw	r14, r24
		{
			USART_Transmit('P');
     f80:	80 e5       	ldi	r24, 0x50	; 80
     f82:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('A');
     f86:	81 e4       	ldi	r24, 0x41	; 65
     f88:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('C');
     f8c:	83 e4       	ldi	r24, 0x43	; 67
     f8e:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('I');
     f92:	89 e4       	ldi	r24, 0x49	; 73
     f94:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('E');
     f98:	85 e4       	ldi	r24, 0x45	; 69
     f9a:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('N');
     f9e:	8e e4       	ldi	r24, 0x4E	; 78
     fa0:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('T');
     fa4:	84 e5       	ldi	r24, 0x54	; 84
     fa6:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('E');
     faa:	85 e4       	ldi	r24, 0x45	; 69
     fac:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit(' ');
     fb0:	80 e2       	ldi	r24, 0x20	; 32
     fb2:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('E');
     fb6:	85 e4       	ldi	r24, 0x45	; 69
     fb8:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('M');
     fbc:	8d e4       	ldi	r24, 0x4D	; 77
     fbe:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit(' ');
     fc2:	80 e2       	ldi	r24, 0x20	; 32
     fc4:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('P');
     fc8:	80 e5       	ldi	r24, 0x50	; 80
     fca:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('E');
     fce:	85 e4       	ldi	r24, 0x45	; 69
     fd0:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('R');
     fd4:	82 e5       	ldi	r24, 0x52	; 82
     fd6:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('I');
     fda:	89 e4       	ldi	r24, 0x49	; 73
     fdc:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('G');
     fe0:	87 e4       	ldi	r24, 0x47	; 71
     fe2:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('O');
     fe6:	8f e4       	ldi	r24, 0x4F	; 79
     fe8:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit('!');
     fec:	81 e2       	ldi	r24, 0x21	; 33
     fee:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			USART_Transmit(' ');
     ff2:	80 e2       	ldi	r24, 0x20	; 32
     ff4:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
			
			if (SpO2 < 60)
     ff8:	cc 23       	and	r28, r28
     ffa:	21 f1       	breq	.+72     	; 0x1044 <alarme+0x126>
			{
				USART_Transmit('S');
     ffc:	83 e5       	ldi	r24, 0x53	; 83
     ffe:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('P');
    1002:	80 e5       	ldi	r24, 0x50	; 80
    1004:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('O');
    1008:	8f e4       	ldi	r24, 0x4F	; 79
    100a:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('2');
    100e:	82 e3       	ldi	r24, 0x32	; 50
    1010:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit(' ');
    1014:	80 e2       	ldi	r24, 0x20	; 32
    1016:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('B');
    101a:	82 e4       	ldi	r24, 0x42	; 66
    101c:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    1020:	81 e4       	ldi	r24, 0x41	; 65
    1022:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('I');
    1026:	89 e4       	ldi	r24, 0x49	; 73
    1028:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('X');
    102c:	88 e5       	ldi	r24, 0x58	; 88
    102e:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    1032:	81 e4       	ldi	r24, 0x41	; 65
    1034:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('!');
    1038:	81 e2       	ldi	r24, 0x21	; 33
    103a:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit(' ');
    103e:	80 e2       	ldi	r24, 0x20	; 32
    1040:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>

			}
			
			
			if (temp_celsius < 35)
    1044:	03 32       	cpi	r16, 0x23	; 35
    1046:	11 05       	cpc	r17, r1
    1048:	c8 f5       	brcc	.+114    	; 0x10bc <alarme+0x19e>
			{
				USART_Transmit('T');
    104a:	84 e5       	ldi	r24, 0x54	; 84
    104c:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('E');
    1050:	85 e4       	ldi	r24, 0x45	; 69
    1052:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('M');
    1056:	8d e4       	ldi	r24, 0x4D	; 77
    1058:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('P');
    105c:	80 e5       	ldi	r24, 0x50	; 80
    105e:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('E');
    1062:	85 e4       	ldi	r24, 0x45	; 69
    1064:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('R');
    1068:	82 e5       	ldi	r24, 0x52	; 82
    106a:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    106e:	81 e4       	ldi	r24, 0x41	; 65
    1070:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('T');
    1074:	84 e5       	ldi	r24, 0x54	; 84
    1076:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('U');
    107a:	85 e5       	ldi	r24, 0x55	; 85
    107c:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('R');
    1080:	82 e5       	ldi	r24, 0x52	; 82
    1082:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    1086:	81 e4       	ldi	r24, 0x41	; 65
    1088:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit(' ');
    108c:	80 e2       	ldi	r24, 0x20	; 32
    108e:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('B');
    1092:	82 e4       	ldi	r24, 0x42	; 66
    1094:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    1098:	81 e4       	ldi	r24, 0x41	; 65
    109a:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('I');
    109e:	89 e4       	ldi	r24, 0x49	; 73
    10a0:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('X');
    10a4:	88 e5       	ldi	r24, 0x58	; 88
    10a6:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    10aa:	81 e4       	ldi	r24, 0x41	; 65
    10ac:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('!');
    10b0:	81 e2       	ldi	r24, 0x21	; 33
    10b2:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit(' ');
    10b6:	80 e2       	ldi	r24, 0x20	; 32
    10b8:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>

			}
			
			if (temp_celsius > 41)
    10bc:	0a 32       	cpi	r16, 0x2A	; 42
    10be:	11 05       	cpc	r17, r1
    10c0:	b0 f1       	brcs	.+108    	; 0x112e <alarme+0x210>
			{
				USART_Transmit('T');
    10c2:	84 e5       	ldi	r24, 0x54	; 84
    10c4:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('E');
    10c8:	85 e4       	ldi	r24, 0x45	; 69
    10ca:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('M');
    10ce:	8d e4       	ldi	r24, 0x4D	; 77
    10d0:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('P');
    10d4:	80 e5       	ldi	r24, 0x50	; 80
    10d6:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('E');
    10da:	85 e4       	ldi	r24, 0x45	; 69
    10dc:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('R');
    10e0:	82 e5       	ldi	r24, 0x52	; 82
    10e2:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    10e6:	81 e4       	ldi	r24, 0x41	; 65
    10e8:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('T');
    10ec:	84 e5       	ldi	r24, 0x54	; 84
    10ee:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('U');
    10f2:	85 e5       	ldi	r24, 0x55	; 85
    10f4:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('R');
    10f8:	82 e5       	ldi	r24, 0x52	; 82
    10fa:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    10fe:	81 e4       	ldi	r24, 0x41	; 65
    1100:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit(' ');
    1104:	80 e2       	ldi	r24, 0x20	; 32
    1106:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    110a:	81 e4       	ldi	r24, 0x41	; 65
    110c:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('L');
    1110:	8c e4       	ldi	r24, 0x4C	; 76
    1112:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('T');
    1116:	84 e5       	ldi	r24, 0x54	; 84
    1118:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('A');
    111c:	81 e4       	ldi	r24, 0x41	; 65
    111e:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit('!');
    1122:	81 e2       	ldi	r24, 0x21	; 33
    1124:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>
				USART_Transmit(' ');
    1128:	80 e2       	ldi	r24, 0x20	; 32
    112a:	0e 94 0f 0b 	call	0x161e	; 0x161e <USART_Transmit>

			}

			tempo_ms_anterior = tempo_ms_myfun;
    112e:	c0 92 98 01 	sts	0x0198, r12	; 0x800198 <__data_end>
    1132:	d0 92 99 01 	sts	0x0199, r13	; 0x800199 <__data_end+0x1>
    1136:	e0 92 9a 01 	sts	0x019A, r14	; 0x80019a <__data_end+0x2>
    113a:	f0 92 9b 01 	sts	0x019B, r15	; 0x80019b <__data_end+0x3>
    113e:	01 c0       	rjmp	.+2      	; 0x1142 <alarme+0x224>
		}
	}
	
	else
	{
		PORTD &= 0b01111111;
    1140:	5f 98       	cbi	0x0b, 7	; 11
	}
    1142:	cf 91       	pop	r28
    1144:	1f 91       	pop	r17
    1146:	0f 91       	pop	r16
    1148:	ff 90       	pop	r15
    114a:	ef 90       	pop	r14
    114c:	df 90       	pop	r13
    114e:	cf 90       	pop	r12
    1150:	08 95       	ret

00001152 <main>:
	else {}
}

int main(void)
{
	DDRD = 0b11100011; PORTD = 0b00011100;
    1152:	83 ee       	ldi	r24, 0xE3	; 227
    1154:	8a b9       	out	0x0a, r24	; 10
    1156:	8c e1       	ldi	r24, 0x1C	; 28
    1158:	8b b9       	out	0x0b, r24	; 11
	DDRB = 0b10111111; PORTB = 0b01000000;
    115a:	8f eb       	ldi	r24, 0xBF	; 191
    115c:	84 b9       	out	0x04, r24	; 4
    115e:	80 e4       	ldi	r24, 0x40	; 64
    1160:	85 b9       	out	0x05, r24	; 5
	DDRC = 0b11111100;
    1162:	9c ef       	ldi	r25, 0xFC	; 252
    1164:	97 b9       	out	0x07, r25	; 7
	
	// Configurando ações do botão
	EIMSK  = 0b00000011;				// Habilita a interrupção externa INT0 [D2] e INT1 [D3]
    1166:	23 e0       	ldi	r18, 0x03	; 3
    1168:	2d bb       	out	0x1d, r18	; 29
	EICRA  = 0b00001010;				// Interrupção externa na borda de descida para INT0 e INT1
    116a:	9a e0       	ldi	r25, 0x0A	; 10
    116c:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	PCICR  = 0b00000101;				// Habilita as Interrupções na Porta D e B
    1170:	95 e0       	ldi	r25, 0x05	; 5
    1172:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	PCMSK0 = 0b01000000;
    1176:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
	PCMSK2 = 0b00010000;
    117a:	90 e1       	ldi	r25, 0x10	; 16
    117c:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
	
	// Configurando Timer de 1ms
	TCCR0A = 0b00000010;
    1180:	92 e0       	ldi	r25, 0x02	; 2
    1182:	94 bd       	out	0x24, r25	; 36
	TCCR0B = 0b00000011;			// Prescaler
    1184:	25 bd       	out	0x25, r18	; 37
	OCR0A = 249;					// 16000/16MHZ => 1ms
    1186:	29 ef       	ldi	r18, 0xF9	; 249
    1188:	27 bd       	out	0x27, r18	; 39
	TIMSK0 = 0b00000010;
    118a:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	// Configurando ADC
	ADMUX  = 0b01000000;			// Tensão interna de ref (5V), canal 0 //ADMUX = 0b01000001;		// Tensão interna de ref (5V), canal 1
    118e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = 0b11100111;		// Habilita o AD, habilita interrupção, modo de conversão contínua, prescaler = 128
    1192:	87 ee       	ldi	r24, 0xE7	; 231
    1194:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADCSRB = 0b00000000;				// Modo de conversão contínua
    1198:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	DIDR0  = 0b00000000;
    119c:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
	
	// Configurando PWM
	ICR1 = 39999;
    11a0:	8f e3       	ldi	r24, 0x3F	; 63
    11a2:	9c e9       	ldi	r25, 0x9C	; 156
    11a4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
    11a8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	TCCR1A = 0b10100010;
    11ac:	82 ea       	ldi	r24, 0xA2	; 162
    11ae:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0b00011010;
    11b2:	8a e1       	ldi	r24, 0x1A	; 26
    11b4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	OCR1A = 2000;
    11b8:	80 ed       	ldi	r24, 0xD0	; 208
    11ba:	97 e0       	ldi	r25, 0x07	; 7
    11bc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    11c0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 2000;
    11c4:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    11c8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	
	sei();
    11cc:	78 94       	sei
	
	nokia_lcd_init();
    11ce:	0e 94 a0 09 	call	0x1340	; 0x1340 <nokia_lcd_init>
	
	USART_Init(MYUBRR);
    11d2:	87 e6       	ldi	r24, 0x67	; 103
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 02 0b 	call	0x1604	; 0x1604 <USART_Init>
	
	while (1)
	{
		animalcd(tempo_ms, FreqRespiracao, batimentos_min, temp_celsius, SpO2, pressao_arterial, SendO2, sel, volume, luz);
    11da:	80 90 0a 01 	lds	r8, 0x010A	; 0x80010a <sel>
    11de:	90 90 0b 01 	lds	r9, 0x010B	; 0x80010b <sel+0x1>
    11e2:	a0 90 bc 01 	lds	r10, 0x01BC	; 0x8001bc <SendO2>
    11e6:	b0 90 bd 01 	lds	r11, 0x01BD	; 0x8001bd <SendO2+0x1>
    11ea:	e0 90 b4 01 	lds	r14, 0x01B4	; 0x8001b4 <SpO2>
    11ee:	f0 90 b5 01 	lds	r15, 0x01B5	; 0x8001b5 <SpO2+0x1>
    11f2:	00 91 b6 01 	lds	r16, 0x01B6	; 0x8001b6 <temp_celsius>
    11f6:	10 91 b7 01 	lds	r17, 0x01B7	; 0x8001b7 <temp_celsius+0x1>
    11fa:	20 91 b8 01 	lds	r18, 0x01B8	; 0x8001b8 <batimentos_min>
    11fe:	30 91 b9 01 	lds	r19, 0x01B9	; 0x8001b9 <batimentos_min+0x1>
    1202:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <FreqRespiracao>
    1206:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <FreqRespiracao+0x1>
    120a:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <tempo_ms>
    120e:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
    1212:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
    1216:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
    121a:	e0 91 b1 01 	lds	r30, 0x01B1	; 0x8001b1 <luz+0x1>
    121e:	ef 93       	push	r30
    1220:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <luz>
    1224:	ef 93       	push	r30
    1226:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <volume+0x1>
    122a:	ef 93       	push	r30
    122c:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <volume>
    1230:	ef 93       	push	r30
    1232:	0f 2e       	mov	r0, r31
    1234:	f0 e1       	ldi	r31, 0x10	; 16
    1236:	cf 2e       	mov	r12, r31
    1238:	f1 e0       	ldi	r31, 0x01	; 1
    123a:	df 2e       	mov	r13, r31
    123c:	f0 2d       	mov	r31, r0
    123e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <animalcd>
		Servo_Resp(tempo_ms, &FreqRespiracao, &Posicao_Servo, volume);
    1242:	00 91 0c 01 	lds	r16, 0x010C	; 0x80010c <volume>
    1246:	10 91 0d 01 	lds	r17, 0x010D	; 0x80010d <volume+0x1>
    124a:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <tempo_ms>
    124e:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
    1252:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
    1256:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
    125a:	2e eb       	ldi	r18, 0xBE	; 190
    125c:	31 e0       	ldi	r19, 0x01	; 1
    125e:	4e e0       	ldi	r20, 0x0E	; 14
    1260:	51 e0       	ldi	r21, 0x01	; 1
    1262:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <Servo_Resp>
		Servo_O2(&SendO2);
    1266:	8c eb       	ldi	r24, 0xBC	; 188
    1268:	91 e0       	ldi	r25, 0x01	; 1
    126a:	0e 94 f5 05 	call	0xbea	; 0xbea <Servo_O2>
		bpm(tempo_ms, &batimentos, &batimentos_min);
    126e:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <tempo_ms>
    1272:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
    1276:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
    127a:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
    127e:	28 eb       	ldi	r18, 0xB8	; 184
    1280:	31 e0       	ldi	r19, 0x01	; 1
    1282:	4a eb       	ldi	r20, 0xBA	; 186
    1284:	51 e0       	ldi	r21, 0x01	; 1
    1286:	0e 94 49 06 	call	0xc92	; 0xc92 <bpm>
		temperatura(tempo_ms, &temp_celsius , &flag_150ms);
    128a:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <tempo_ms>
    128e:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
    1292:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
    1296:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
    129a:	22 eb       	ldi	r18, 0xB2	; 178
    129c:	31 e0       	ldi	r19, 0x01	; 1
    129e:	46 eb       	ldi	r20, 0xB6	; 182
    12a0:	51 e0       	ldi	r21, 0x01	; 1
    12a2:	0e 94 85 06 	call	0xd0a	; 0xd0a <temperatura>
		saturacao_O2(tempo_ms, &SpO2, &flag_150ms);
    12a6:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <tempo_ms>
    12aa:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
    12ae:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
    12b2:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
    12b6:	22 eb       	ldi	r18, 0xB2	; 178
    12b8:	31 e0       	ldi	r19, 0x01	; 1
    12ba:	44 eb       	ldi	r20, 0xB4	; 180
    12bc:	51 e0       	ldi	r21, 0x01	; 1
    12be:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <saturacao_O2>
		alarme(tempo_ms,temp_celsius, SpO2 );
    12c2:	20 91 b4 01 	lds	r18, 0x01B4	; 0x8001b4 <SpO2>
    12c6:	30 91 b5 01 	lds	r19, 0x01B5	; 0x8001b5 <SpO2+0x1>
    12ca:	40 91 b6 01 	lds	r20, 0x01B6	; 0x8001b6 <temp_celsius>
    12ce:	50 91 b7 01 	lds	r21, 0x01B7	; 0x8001b7 <temp_celsius+0x1>
    12d2:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <tempo_ms>
    12d6:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <tempo_ms+0x1>
    12da:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <tempo_ms+0x2>
    12de:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <tempo_ms+0x3>
    12e2:	0e 94 8f 07 	call	0xf1e	; 0xf1e <alarme>
		control_luz(luz);
    12e6:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <luz>
    12ea:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <luz+0x1>
    12ee:	0e 94 48 07 	call	0xe90	; 0xe90 <control_luz>
	}
    12f2:	0f 90       	pop	r0
    12f4:	0f 90       	pop	r0
    12f6:	0f 90       	pop	r0
    12f8:	0f 90       	pop	r0
    12fa:	6f cf       	rjmp	.-290    	; 0x11da <main+0x88>

000012fc <write>:
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
    12fc:	46 98       	cbi	0x08, 6	; 8
    12fe:	66 23       	and	r22, r22
    1300:	11 f0       	breq	.+4      	; 0x1306 <write+0xa>
    1302:	43 9a       	sbi	0x08, 3	; 8
    1304:	15 c0       	rjmp	.+42     	; 0x1330 <write+0x34>
    1306:	43 98       	cbi	0x08, 3	; 8
    1308:	13 c0       	rjmp	.+38     	; 0x1330 <write+0x34>
    130a:	ac 01       	movw	r20, r24
    130c:	02 2e       	mov	r0, r18
    130e:	02 c0       	rjmp	.+4      	; 0x1314 <write+0x18>
    1310:	55 95       	asr	r21
    1312:	47 95       	ror	r20
    1314:	0a 94       	dec	r0
    1316:	e2 f7       	brpl	.-8      	; 0x1310 <write+0x14>
    1318:	40 ff       	sbrs	r20, 0
    131a:	02 c0       	rjmp	.+4      	; 0x1320 <write+0x24>
    131c:	44 9a       	sbi	0x08, 4	; 8
    131e:	01 c0       	rjmp	.+2      	; 0x1322 <write+0x26>
    1320:	44 98       	cbi	0x08, 4	; 8
    1322:	45 9a       	sbi	0x08, 5	; 8
    1324:	45 98       	cbi	0x08, 5	; 8
    1326:	21 50       	subi	r18, 0x01	; 1
    1328:	31 09       	sbc	r19, r1
    132a:	78 f7       	brcc	.-34     	; 0x130a <write+0xe>
    132c:	46 9a       	sbi	0x08, 6	; 8
    132e:	08 95       	ret
    1330:	27 e0       	ldi	r18, 0x07	; 7
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	e9 cf       	rjmp	.-46     	; 0x130a <write+0xe>

00001338 <write_cmd>:
    1338:	60 e0       	ldi	r22, 0x00	; 0
    133a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <write>
    133e:	08 95       	ret

00001340 <nokia_lcd_init>:
    1340:	cf 93       	push	r28
    1342:	df 93       	push	r29
    1344:	3e 9a       	sbi	0x07, 6	; 7
    1346:	3a 9a       	sbi	0x07, 2	; 7
    1348:	3b 9a       	sbi	0x07, 3	; 7
    134a:	3c 9a       	sbi	0x07, 4	; 7
    134c:	3d 9a       	sbi	0x07, 5	; 7
    134e:	42 9a       	sbi	0x08, 2	; 8
    1350:	46 9a       	sbi	0x08, 6	; 8
    1352:	83 ec       	ldi	r24, 0xC3	; 195
    1354:	99 e0       	ldi	r25, 0x09	; 9
    1356:	01 97       	sbiw	r24, 0x01	; 1
    1358:	f1 f7       	brne	.-4      	; 0x1356 <nokia_lcd_init+0x16>
    135a:	00 c0       	rjmp	.+0      	; 0x135c <nokia_lcd_init+0x1c>
    135c:	00 00       	nop
    135e:	42 98       	cbi	0x08, 2	; 8
    1360:	8b e5       	ldi	r24, 0x5B	; 91
    1362:	94 e4       	ldi	r25, 0x44	; 68
    1364:	01 97       	sbiw	r24, 0x01	; 1
    1366:	f1 f7       	brne	.-4      	; 0x1364 <nokia_lcd_init+0x24>
    1368:	00 c0       	rjmp	.+0      	; 0x136a <nokia_lcd_init+0x2a>
    136a:	00 00       	nop
    136c:	42 9a       	sbi	0x08, 2	; 8
    136e:	46 98       	cbi	0x08, 6	; 8
    1370:	81 e2       	ldi	r24, 0x21	; 33
    1372:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    1376:	83 e1       	ldi	r24, 0x13	; 19
    1378:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    137c:	86 e0       	ldi	r24, 0x06	; 6
    137e:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    1382:	82 ec       	ldi	r24, 0xC2	; 194
    1384:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    1388:	80 e2       	ldi	r24, 0x20	; 32
    138a:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    138e:	89 e0       	ldi	r24, 0x09	; 9
    1390:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    1394:	80 e8       	ldi	r24, 0x80	; 128
    1396:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    139a:	80 e4       	ldi	r24, 0x40	; 64
    139c:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    13a0:	c8 ef       	ldi	r28, 0xF8	; 248
    13a2:	d1 e0       	ldi	r29, 0x01	; 1
    13a4:	61 e0       	ldi	r22, 0x01	; 1
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	0e 94 7e 09 	call	0x12fc	; 0x12fc <write>
    13ac:	21 97       	sbiw	r28, 0x01	; 1
    13ae:	d1 f7       	brne	.-12     	; 0x13a4 <nokia_lcd_init+0x64>
    13b0:	88 e0       	ldi	r24, 0x08	; 8
    13b2:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    13b6:	8c e0       	ldi	r24, 0x0C	; 12
    13b8:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    13bc:	df 91       	pop	r29
    13be:	cf 91       	pop	r28
    13c0:	08 95       	ret

000013c2 <nokia_lcd_clear>:
    13c2:	80 e8       	ldi	r24, 0x80	; 128
    13c4:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    13c8:	80 e4       	ldi	r24, 0x40	; 64
    13ca:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    13ce:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <nokia_lcd+0x1f8>
    13d2:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <nokia_lcd+0x1f9>
    13d6:	e4 ec       	ldi	r30, 0xC4	; 196
    13d8:	f1 e0       	ldi	r31, 0x01	; 1
    13da:	8c eb       	ldi	r24, 0xBC	; 188
    13dc:	93 e0       	ldi	r25, 0x03	; 3
    13de:	11 92       	st	Z+, r1
    13e0:	e8 17       	cp	r30, r24
    13e2:	f9 07       	cpc	r31, r25
    13e4:	e1 f7       	brne	.-8      	; 0x13de <nokia_lcd_clear+0x1c>
    13e6:	08 95       	ret

000013e8 <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    13e8:	26 2f       	mov	r18, r22
    13ea:	26 95       	lsr	r18
    13ec:	26 95       	lsr	r18
    13ee:	26 95       	lsr	r18
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	34 e5       	ldi	r19, 0x54	; 84
    13f4:	23 9f       	mul	r18, r19
    13f6:	80 0d       	add	r24, r0
    13f8:	91 1d       	adc	r25, r1
    13fa:	11 24       	eor	r1, r1
	if (value)
    13fc:	44 23       	and	r20, r20
    13fe:	79 f0       	breq	.+30     	; 0x141e <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
    1400:	fc 01       	movw	r30, r24
    1402:	ec 53       	subi	r30, 0x3C	; 60
    1404:	fe 4f       	sbci	r31, 0xFE	; 254
    1406:	67 70       	andi	r22, 0x07	; 7
    1408:	81 e0       	ldi	r24, 0x01	; 1
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	02 c0       	rjmp	.+4      	; 0x1412 <nokia_lcd_set_pixel+0x2a>
    140e:	88 0f       	add	r24, r24
    1410:	99 1f       	adc	r25, r25
    1412:	6a 95       	dec	r22
    1414:	e2 f7       	brpl	.-8      	; 0x140e <nokia_lcd_set_pixel+0x26>
    1416:	90 81       	ld	r25, Z
    1418:	89 2b       	or	r24, r25
    141a:	80 83       	st	Z, r24
    141c:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
    141e:	fc 01       	movw	r30, r24
    1420:	ec 53       	subi	r30, 0x3C	; 60
    1422:	fe 4f       	sbci	r31, 0xFE	; 254
    1424:	67 70       	andi	r22, 0x07	; 7
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <nokia_lcd_set_pixel+0x48>
    142c:	88 0f       	add	r24, r24
    142e:	99 1f       	adc	r25, r25
    1430:	6a 95       	dec	r22
    1432:	e2 f7       	brpl	.-8      	; 0x142c <nokia_lcd_set_pixel+0x44>
    1434:	80 95       	com	r24
    1436:	90 81       	ld	r25, Z
    1438:	89 23       	and	r24, r25
    143a:	80 83       	st	Z, r24
    143c:	08 95       	ret

0000143e <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
    143e:	4f 92       	push	r4
    1440:	5f 92       	push	r5
    1442:	6f 92       	push	r6
    1444:	7f 92       	push	r7
    1446:	8f 92       	push	r8
    1448:	9f 92       	push	r9
    144a:	af 92       	push	r10
    144c:	bf 92       	push	r11
    144e:	cf 92       	push	r12
    1450:	df 92       	push	r13
    1452:	ef 92       	push	r14
    1454:	ff 92       	push	r15
    1456:	0f 93       	push	r16
    1458:	1f 93       	push	r17
    145a:	cf 93       	push	r28
    145c:	df 93       	push	r29
    145e:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1460:	26 2f       	mov	r18, r22
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	49 01       	movw	r8, r18
    1466:	88 0c       	add	r8, r8
    1468:	99 1c       	adc	r9, r9
    146a:	88 0c       	add	r8, r8
    146c:	99 1c       	adc	r9, r9
    146e:	82 0e       	add	r8, r18
    1470:	93 1e       	adc	r9, r19
    1472:	18 14       	cp	r1, r8
    1474:	19 04       	cpc	r1, r9
    1476:	0c f0       	brlt	.+2      	; 0x147a <nokia_lcd_write_char+0x3c>
    1478:	5e c0       	rjmp	.+188    	; 0x1536 <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
    147a:	89 01       	movw	r16, r18
    147c:	00 0f       	add	r16, r16
    147e:	11 1f       	adc	r17, r17
    1480:	00 0f       	add	r16, r16
    1482:	11 1f       	adc	r17, r17
    1484:	00 0f       	add	r16, r16
    1486:	11 1f       	adc	r17, r17
    1488:	02 1b       	sub	r16, r18
    148a:	13 0b       	sbc	r17, r19
    148c:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    148e:	a8 2e       	mov	r10, r24
    1490:	b1 2c       	mov	r11, r1
    1492:	c5 01       	movw	r24, r10
    1494:	80 97       	sbiw	r24, 0x20	; 32
    1496:	5c 01       	movw	r10, r24
    1498:	aa 0c       	add	r10, r10
    149a:	bb 1c       	adc	r11, r11
    149c:	aa 0c       	add	r10, r10
    149e:	bb 1c       	adc	r11, r11
    14a0:	a8 0e       	add	r10, r24
    14a2:	b9 1e       	adc	r11, r25
    14a4:	41 2c       	mov	r4, r1
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    14a6:	0f 2e       	mov	r0, r31
    14a8:	fd eb       	ldi	r31, 0xBD	; 189
    14aa:	cf 2e       	mov	r12, r31
    14ac:	f3 e0       	ldi	r31, 0x03	; 3
    14ae:	df 2e       	mov	r13, r31
    14b0:	f0 2d       	mov	r31, r0
    14b2:	0f 2e       	mov	r0, r31
    14b4:	fc eb       	ldi	r31, 0xBC	; 188
    14b6:	ef 2e       	mov	r14, r31
    14b8:	f3 e0       	ldi	r31, 0x03	; 3
    14ba:	ff 2e       	mov	r15, r31
    14bc:	f0 2d       	mov	r31, r0
    14be:	2d c0       	rjmp	.+90     	; 0x151a <nokia_lcd_write_char+0xdc>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    14c0:	fe 01       	movw	r30, r28
    14c2:	24 91       	lpm	r18, Z
    14c4:	30 e0       	ldi	r19, 0x00	; 0
    14c6:	87 2d       	mov	r24, r7
    14c8:	65 2d       	mov	r22, r5
    14ca:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <__udivmodqi4>
    14ce:	02 c0       	rjmp	.+4      	; 0x14d4 <nokia_lcd_write_char+0x96>
    14d0:	35 95       	asr	r19
    14d2:	27 95       	ror	r18
    14d4:	8a 95       	dec	r24
    14d6:	e2 f7       	brpl	.-8      	; 0x14d0 <nokia_lcd_write_char+0x92>
    14d8:	20 ff       	sbrs	r18, 0
    14da:	0a c0       	rjmp	.+20     	; 0x14f0 <nokia_lcd_write_char+0xb2>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    14dc:	f6 01       	movw	r30, r12
    14de:	60 81       	ld	r22, Z
    14e0:	67 0d       	add	r22, r7
    14e2:	f7 01       	movw	r30, r14
    14e4:	80 81       	ld	r24, Z
    14e6:	41 e0       	ldi	r20, 0x01	; 1
    14e8:	86 0d       	add	r24, r6
    14ea:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <nokia_lcd_set_pixel>
    14ee:	09 c0       	rjmp	.+18     	; 0x1502 <nokia_lcd_write_char+0xc4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    14f0:	f6 01       	movw	r30, r12
    14f2:	60 81       	ld	r22, Z
    14f4:	67 0d       	add	r22, r7
    14f6:	f7 01       	movw	r30, r14
    14f8:	80 81       	ld	r24, Z
    14fa:	44 2d       	mov	r20, r4
    14fc:	86 0d       	add	r24, r6
    14fe:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1502:	73 94       	inc	r7
    1504:	87 2d       	mov	r24, r7
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	80 17       	cp	r24, r16
    150a:	91 07       	cpc	r25, r17
    150c:	cc f2       	brlt	.-78     	; 0x14c0 <nokia_lcd_write_char+0x82>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    150e:	63 94       	inc	r6
    1510:	86 2d       	mov	r24, r6
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	88 15       	cp	r24, r8
    1516:	99 05       	cpc	r25, r9
    1518:	74 f4       	brge	.+28     	; 0x1536 <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
    151a:	10 16       	cp	r1, r16
    151c:	11 06       	cpc	r1, r17
    151e:	bc f7       	brge	.-18     	; 0x150e <nokia_lcd_write_char+0xd0>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1520:	86 2d       	mov	r24, r6
    1522:	65 2d       	mov	r22, r5
    1524:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <__udivmodqi4>
    1528:	e5 01       	movw	r28, r10
    152a:	c8 0f       	add	r28, r24
    152c:	d1 1d       	adc	r29, r1
    152e:	c8 59       	subi	r28, 0x98	; 152
    1530:	df 4f       	sbci	r29, 0xFF	; 255
    1532:	74 2c       	mov	r7, r4
    1534:	c5 cf       	rjmp	.-118    	; 0x14c0 <nokia_lcd_write_char+0x82>
    1536:	80 91 bc 03 	lds	r24, 0x03BC	; 0x8003bc <nokia_lcd+0x1f8>
    153a:	91 e0       	ldi	r25, 0x01	; 1
    153c:	98 0f       	add	r25, r24
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    153e:	85 2d       	mov	r24, r5
    1540:	88 0f       	add	r24, r24
    1542:	88 0f       	add	r24, r24
    1544:	85 0d       	add	r24, r5
    1546:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
    1548:	84 35       	cpi	r24, 0x54	; 84
    154a:	18 f4       	brcc	.+6      	; 0x1552 <nokia_lcd_write_char+0x114>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    154c:	80 93 bc 03 	sts	0x03BC, r24	; 0x8003bc <nokia_lcd+0x1f8>
    1550:	0e c0       	rjmp	.+28     	; 0x156e <nokia_lcd_write_char+0x130>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
    1552:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1556:	ed eb       	ldi	r30, 0xBD	; 189
    1558:	f3 e0       	ldi	r31, 0x03	; 3
    155a:	80 81       	ld	r24, Z
    155c:	91 e0       	ldi	r25, 0x01	; 1
    155e:	98 0f       	add	r25, r24
    1560:	85 2d       	mov	r24, r5
    1562:	88 0f       	add	r24, r24
    1564:	88 0f       	add	r24, r24
    1566:	88 0f       	add	r24, r24
    1568:	85 19       	sub	r24, r5
    156a:	89 0f       	add	r24, r25
    156c:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
    156e:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <nokia_lcd+0x1f9>
    1572:	80 33       	cpi	r24, 0x30	; 48
    1574:	20 f0       	brcs	.+8      	; 0x157e <nokia_lcd_write_char+0x140>
		nokia_lcd.cursor_x = 0;
    1576:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    157a:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <nokia_lcd+0x1f9>
	}
}
    157e:	df 91       	pop	r29
    1580:	cf 91       	pop	r28
    1582:	1f 91       	pop	r17
    1584:	0f 91       	pop	r16
    1586:	ff 90       	pop	r15
    1588:	ef 90       	pop	r14
    158a:	df 90       	pop	r13
    158c:	cf 90       	pop	r12
    158e:	bf 90       	pop	r11
    1590:	af 90       	pop	r10
    1592:	9f 90       	pop	r9
    1594:	8f 90       	pop	r8
    1596:	7f 90       	pop	r7
    1598:	6f 90       	pop	r6
    159a:	5f 90       	pop	r5
    159c:	4f 90       	pop	r4
    159e:	08 95       	ret

000015a0 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    15a0:	1f 93       	push	r17
    15a2:	cf 93       	push	r28
    15a4:	df 93       	push	r29
    15a6:	ec 01       	movw	r28, r24
	while(*str)
    15a8:	88 81       	ld	r24, Y
    15aa:	88 23       	and	r24, r24
    15ac:	41 f0       	breq	.+16     	; 0x15be <nokia_lcd_write_string+0x1e>
    15ae:	16 2f       	mov	r17, r22
    15b0:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
    15b2:	61 2f       	mov	r22, r17
    15b4:	0e 94 1f 0a 	call	0x143e	; 0x143e <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    15b8:	89 91       	ld	r24, Y+
    15ba:	81 11       	cpse	r24, r1
    15bc:	fa cf       	rjmp	.-12     	; 0x15b2 <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
    15be:	df 91       	pop	r29
    15c0:	cf 91       	pop	r28
    15c2:	1f 91       	pop	r17
    15c4:	08 95       	ret

000015c6 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
    15c6:	80 93 bc 03 	sts	0x03BC, r24	; 0x8003bc <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    15ca:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <nokia_lcd+0x1f9>
    15ce:	08 95       	ret

000015d0 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
    15d0:	0f 93       	push	r16
    15d2:	1f 93       	push	r17
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    15d8:	80 e8       	ldi	r24, 0x80	; 128
    15da:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
	write_cmd(0x40);
    15de:	80 e4       	ldi	r24, 0x40	; 64
    15e0:	0e 94 9c 09 	call	0x1338	; 0x1338 <write_cmd>
    15e4:	c4 ec       	ldi	r28, 0xC4	; 196
    15e6:	d1 e0       	ldi	r29, 0x01	; 1
    15e8:	0c eb       	ldi	r16, 0xBC	; 188
    15ea:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
    15ec:	61 e0       	ldi	r22, 0x01	; 1
    15ee:	89 91       	ld	r24, Y+
    15f0:	0e 94 7e 09 	call	0x12fc	; 0x12fc <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    15f4:	c0 17       	cp	r28, r16
    15f6:	d1 07       	cpc	r29, r17
    15f8:	c9 f7       	brne	.-14     	; 0x15ec <nokia_lcd_render+0x1c>
		write_data(nokia_lcd.screen[i]);
}
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	1f 91       	pop	r17
    1600:	0f 91       	pop	r16
    1602:	08 95       	ret

00001604 <USART_Init>:

unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
    1604:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    1608:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    160c:	88 e9       	ldi	r24, 0x98	; 152
    160e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1612:	86 e0       	ldi	r24, 0x06	; 6
    1614:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    1618:	39 9a       	sbi	0x07, 1	; 7
    161a:	38 98       	cbi	0x07, 0	; 7
    161c:	08 95       	ret

0000161e <USART_Transmit>:
    161e:	e0 ec       	ldi	r30, 0xC0	; 192
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	90 81       	ld	r25, Z
    1624:	95 ff       	sbrs	r25, 5
    1626:	fd cf       	rjmp	.-6      	; 0x1622 <USART_Transmit+0x4>
    1628:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    162c:	08 95       	ret

0000162e <Check_payload_HHHxLLL>:

uint8_t Check_payload_HHHxLLL(char* payload, uint16_t *HHH, uint16_t *LLL)
{
    162e:	ef 92       	push	r14
    1630:	ff 92       	push	r15
    1632:	0f 93       	push	r16
    1634:	1f 93       	push	r17
    1636:	cf 93       	push	r28
    1638:	df 93       	push	r29
    163a:	cd b7       	in	r28, 0x3d	; 61
    163c:	de b7       	in	r29, 0x3e	; 62
    163e:	62 97       	sbiw	r28, 0x12	; 18
    1640:	0f b6       	in	r0, 0x3f	; 63
    1642:	f8 94       	cli
    1644:	de bf       	out	0x3e, r29	; 62
    1646:	0f be       	out	0x3f, r0	; 63
    1648:	cd bf       	out	0x3d, r28	; 61
    164a:	8b 01       	movw	r16, r22
    164c:	7a 01       	movw	r14, r20
	unsigned char Pressao_H[8], Pressao_L[8];
	char *split, *aux;
	
	aux = strdup(payload);
    164e:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <strdup>
    1652:	9a 8b       	std	Y+18, r25	; 0x12
    1654:	89 8b       	std	Y+17, r24	; 0x11
	split = strsep(&aux, "x");
    1656:	65 e9       	ldi	r22, 0x95	; 149
    1658:	71 e0       	ldi	r23, 0x01	; 1
    165a:	ce 01       	movw	r24, r28
    165c:	41 96       	adiw	r24, 0x11	; 17
    165e:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <strsep>
	strcpy(Pressao_H, split);
    1662:	bc 01       	movw	r22, r24
    1664:	ce 01       	movw	r24, r28
    1666:	01 96       	adiw	r24, 0x01	; 1
    1668:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <strcpy>
	split = strsep (&aux, "x");
    166c:	65 e9       	ldi	r22, 0x95	; 149
    166e:	71 e0       	ldi	r23, 0x01	; 1
    1670:	ce 01       	movw	r24, r28
    1672:	41 96       	adiw	r24, 0x11	; 17
    1674:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <strsep>
	strcpy(Pressao_L, split);
    1678:	bc 01       	movw	r22, r24
    167a:	ce 01       	movw	r24, r28
    167c:	09 96       	adiw	r24, 0x09	; 9
    167e:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <strcpy>
	
	*HHH = atoi(Pressao_H);
    1682:	ce 01       	movw	r24, r28
    1684:	01 96       	adiw	r24, 0x01	; 1
    1686:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <atoi>
    168a:	f8 01       	movw	r30, r16
    168c:	91 83       	std	Z+1, r25	; 0x01
    168e:	80 83       	st	Z, r24
	*LLL = atoi(Pressao_L);
    1690:	ce 01       	movw	r24, r28
    1692:	09 96       	adiw	r24, 0x09	; 9
    1694:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <atoi>
    1698:	f7 01       	movw	r30, r14
    169a:	91 83       	std	Z+1, r25	; 0x01
    169c:	80 83       	st	Z, r24
	
	if(*HHH>=0 & *HHH<=999 & *LLL>=0 & *LLL<=999)
    169e:	21 e0       	ldi	r18, 0x01	; 1
    16a0:	88 3e       	cpi	r24, 0xE8	; 232
    16a2:	93 40       	sbci	r25, 0x03	; 3
    16a4:	08 f0       	brcs	.+2      	; 0x16a8 <Check_payload_HHHxLLL+0x7a>
    16a6:	20 e0       	ldi	r18, 0x00	; 0
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	f8 01       	movw	r30, r16
    16ac:	40 81       	ld	r20, Z
    16ae:	51 81       	ldd	r21, Z+1	; 0x01
    16b0:	48 3e       	cpi	r20, 0xE8	; 232
    16b2:	53 40       	sbci	r21, 0x03	; 3
    16b4:	08 f0       	brcs	.+2      	; 0x16b8 <Check_payload_HHHxLLL+0x8a>
    16b6:	80 e0       	ldi	r24, 0x00	; 0
	}
	else
	{
		return 0;
	}
    16b8:	82 23       	and	r24, r18
    16ba:	62 96       	adiw	r28, 0x12	; 18
    16bc:	0f b6       	in	r0, 0x3f	; 63
    16be:	f8 94       	cli
    16c0:	de bf       	out	0x3e, r29	; 62
    16c2:	0f be       	out	0x3f, r0	; 63
    16c4:	cd bf       	out	0x3d, r28	; 61
    16c6:	df 91       	pop	r29
    16c8:	cf 91       	pop	r28
    16ca:	1f 91       	pop	r17
    16cc:	0f 91       	pop	r16
    16ce:	ff 90       	pop	r15
    16d0:	ef 90       	pop	r14
    16d2:	08 95       	ret

000016d4 <__vector_18>:

unsigned char pressao_arterial[8] = "HHHxLLL";
uint16_t pressao_H, pressao_L;

ISR(USART_RX_vect)
{
    16d4:	1f 92       	push	r1
    16d6:	0f 92       	push	r0
    16d8:	0f b6       	in	r0, 0x3f	; 63
    16da:	0f 92       	push	r0
    16dc:	11 24       	eor	r1, r1
    16de:	2f 93       	push	r18
    16e0:	3f 93       	push	r19
    16e2:	4f 93       	push	r20
    16e4:	5f 93       	push	r21
    16e6:	6f 93       	push	r22
    16e8:	7f 93       	push	r23
    16ea:	8f 93       	push	r24
    16ec:	9f 93       	push	r25
    16ee:	af 93       	push	r26
    16f0:	bf 93       	push	r27
    16f2:	ef 93       	push	r30
    16f4:	ff 93       	push	r31
	static uint8_t start_stop_flag = 0, index = 0;
	char char_recebido = UDR0;
    16f6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	switch (char_recebido)
    16fa:	8a 33       	cpi	r24, 0x3A	; 58
    16fc:	41 f0       	breq	.+16     	; 0x170e <__vector_18+0x3a>
    16fe:	8b 33       	cpi	r24, 0x3B	; 59
    1700:	11 f5       	brne	.+68     	; 0x1746 <__vector_18+0x72>
	{
		case ';':
			start_stop_flag = 1;
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <start_stop_flag.1794>
			index = 0;
    1708:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <index.1795>
			break;
    170c:	38 c0       	rjmp	.+112    	; 0x177e <__vector_18+0xaa>
			
		case ':':
			start_stop_flag = 0;
    170e:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <start_stop_flag.1794>
			pressao_arterial[index] = '\0';
    1712:	e0 91 be 03 	lds	r30, 0x03BE	; 0x8003be <index.1795>
    1716:	f0 e0       	ldi	r31, 0x00	; 0
    1718:	e0 5f       	subi	r30, 0xF0	; 240
    171a:	fe 4f       	sbci	r31, 0xFE	; 254
    171c:	10 82       	st	Z, r1
			if(Check_payload_HHHxLLL(pressao_arterial, &pressao_H, &pressao_L) == 0)
    171e:	42 ec       	ldi	r20, 0xC2	; 194
    1720:	53 e0       	ldi	r21, 0x03	; 3
    1722:	60 ec       	ldi	r22, 0xC0	; 192
    1724:	73 e0       	ldi	r23, 0x03	; 3
    1726:	80 e1       	ldi	r24, 0x10	; 16
    1728:	91 e0       	ldi	r25, 0x01	; 1
    172a:	0e 94 17 0b 	call	0x162e	; 0x162e <Check_payload_HHHxLLL>
    172e:	81 11       	cpse	r24, r1
    1730:	26 c0       	rjmp	.+76     	; 0x177e <__vector_18+0xaa>
			{
				strcpy(pressao_arterial, "ERRO!");
    1732:	86 e0       	ldi	r24, 0x06	; 6
    1734:	ef e8       	ldi	r30, 0x8F	; 143
    1736:	f1 e0       	ldi	r31, 0x01	; 1
    1738:	a0 e1       	ldi	r26, 0x10	; 16
    173a:	b1 e0       	ldi	r27, 0x01	; 1
    173c:	01 90       	ld	r0, Z+
    173e:	0d 92       	st	X+, r0
    1740:	8a 95       	dec	r24
    1742:	e1 f7       	brne	.-8      	; 0x173c <__vector_18+0x68>
    1744:	1c c0       	rjmp	.+56     	; 0x177e <__vector_18+0xaa>
			}
			break;
		
		default:
			if(start_stop_flag)
    1746:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <start_stop_flag.1794>
    174a:	99 23       	and	r25, r25
    174c:	c1 f0       	breq	.+48     	; 0x177e <__vector_18+0xaa>
			{
				if(index < 7)
    174e:	e0 91 be 03 	lds	r30, 0x03BE	; 0x8003be <index.1795>
    1752:	e7 30       	cpi	r30, 0x07	; 7
    1754:	48 f4       	brcc	.+18     	; 0x1768 <__vector_18+0x94>
				{
					pressao_arterial[index++] = char_recebido;
    1756:	91 e0       	ldi	r25, 0x01	; 1
    1758:	9e 0f       	add	r25, r30
    175a:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <index.1795>
    175e:	f0 e0       	ldi	r31, 0x00	; 0
    1760:	e0 5f       	subi	r30, 0xF0	; 240
    1762:	fe 4f       	sbci	r31, 0xFE	; 254
    1764:	80 83       	st	Z, r24
    1766:	0b c0       	rjmp	.+22     	; 0x177e <__vector_18+0xaa>
				}
 				else
				{
					start_stop_flag = 0;
    1768:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <start_stop_flag.1794>
					strcpy(pressao_arterial, "ERRO!");
    176c:	86 e0       	ldi	r24, 0x06	; 6
    176e:	ef e8       	ldi	r30, 0x8F	; 143
    1770:	f1 e0       	ldi	r31, 0x01	; 1
    1772:	a0 e1       	ldi	r26, 0x10	; 16
    1774:	b1 e0       	ldi	r27, 0x01	; 1
    1776:	01 90       	ld	r0, Z+
    1778:	0d 92       	st	X+, r0
    177a:	8a 95       	dec	r24
    177c:	e1 f7       	brne	.-8      	; 0x1776 <__vector_18+0xa2>
				}
			}
	}
}
    177e:	ff 91       	pop	r31
    1780:	ef 91       	pop	r30
    1782:	bf 91       	pop	r27
    1784:	af 91       	pop	r26
    1786:	9f 91       	pop	r25
    1788:	8f 91       	pop	r24
    178a:	7f 91       	pop	r23
    178c:	6f 91       	pop	r22
    178e:	5f 91       	pop	r21
    1790:	4f 91       	pop	r20
    1792:	3f 91       	pop	r19
    1794:	2f 91       	pop	r18
    1796:	0f 90       	pop	r0
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	0f 90       	pop	r0
    179c:	1f 90       	pop	r1
    179e:	18 95       	reti

000017a0 <__subsf3>:
    17a0:	50 58       	subi	r21, 0x80	; 128

000017a2 <__addsf3>:
    17a2:	bb 27       	eor	r27, r27
    17a4:	aa 27       	eor	r26, r26
    17a6:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <__addsf3x>
    17aa:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__fp_round>
    17ae:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_pscA>
    17b2:	38 f0       	brcs	.+14     	; 0x17c2 <__addsf3+0x20>
    17b4:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fp_pscB>
    17b8:	20 f0       	brcs	.+8      	; 0x17c2 <__addsf3+0x20>
    17ba:	39 f4       	brne	.+14     	; 0x17ca <__addsf3+0x28>
    17bc:	9f 3f       	cpi	r25, 0xFF	; 255
    17be:	19 f4       	brne	.+6      	; 0x17c6 <__addsf3+0x24>
    17c0:	26 f4       	brtc	.+8      	; 0x17ca <__addsf3+0x28>
    17c2:	0c 94 4a 0d 	jmp	0x1a94	; 0x1a94 <__fp_nan>
    17c6:	0e f4       	brtc	.+2      	; 0x17ca <__addsf3+0x28>
    17c8:	e0 95       	com	r30
    17ca:	e7 fb       	bst	r30, 7
    17cc:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__fp_inf>

000017d0 <__addsf3x>:
    17d0:	e9 2f       	mov	r30, r25
    17d2:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <__fp_split3>
    17d6:	58 f3       	brcs	.-42     	; 0x17ae <__addsf3+0xc>
    17d8:	ba 17       	cp	r27, r26
    17da:	62 07       	cpc	r22, r18
    17dc:	73 07       	cpc	r23, r19
    17de:	84 07       	cpc	r24, r20
    17e0:	95 07       	cpc	r25, r21
    17e2:	20 f0       	brcs	.+8      	; 0x17ec <__addsf3x+0x1c>
    17e4:	79 f4       	brne	.+30     	; 0x1804 <__addsf3x+0x34>
    17e6:	a6 f5       	brtc	.+104    	; 0x1850 <__addsf3x+0x80>
    17e8:	0c 94 8e 0d 	jmp	0x1b1c	; 0x1b1c <__fp_zero>
    17ec:	0e f4       	brtc	.+2      	; 0x17f0 <__addsf3x+0x20>
    17ee:	e0 95       	com	r30
    17f0:	0b 2e       	mov	r0, r27
    17f2:	ba 2f       	mov	r27, r26
    17f4:	a0 2d       	mov	r26, r0
    17f6:	0b 01       	movw	r0, r22
    17f8:	b9 01       	movw	r22, r18
    17fa:	90 01       	movw	r18, r0
    17fc:	0c 01       	movw	r0, r24
    17fe:	ca 01       	movw	r24, r20
    1800:	a0 01       	movw	r20, r0
    1802:	11 24       	eor	r1, r1
    1804:	ff 27       	eor	r31, r31
    1806:	59 1b       	sub	r21, r25
    1808:	99 f0       	breq	.+38     	; 0x1830 <__addsf3x+0x60>
    180a:	59 3f       	cpi	r21, 0xF9	; 249
    180c:	50 f4       	brcc	.+20     	; 0x1822 <__addsf3x+0x52>
    180e:	50 3e       	cpi	r21, 0xE0	; 224
    1810:	68 f1       	brcs	.+90     	; 0x186c <__addsf3x+0x9c>
    1812:	1a 16       	cp	r1, r26
    1814:	f0 40       	sbci	r31, 0x00	; 0
    1816:	a2 2f       	mov	r26, r18
    1818:	23 2f       	mov	r18, r19
    181a:	34 2f       	mov	r19, r20
    181c:	44 27       	eor	r20, r20
    181e:	58 5f       	subi	r21, 0xF8	; 248
    1820:	f3 cf       	rjmp	.-26     	; 0x1808 <__addsf3x+0x38>
    1822:	46 95       	lsr	r20
    1824:	37 95       	ror	r19
    1826:	27 95       	ror	r18
    1828:	a7 95       	ror	r26
    182a:	f0 40       	sbci	r31, 0x00	; 0
    182c:	53 95       	inc	r21
    182e:	c9 f7       	brne	.-14     	; 0x1822 <__addsf3x+0x52>
    1830:	7e f4       	brtc	.+30     	; 0x1850 <__addsf3x+0x80>
    1832:	1f 16       	cp	r1, r31
    1834:	ba 0b       	sbc	r27, r26
    1836:	62 0b       	sbc	r22, r18
    1838:	73 0b       	sbc	r23, r19
    183a:	84 0b       	sbc	r24, r20
    183c:	ba f0       	brmi	.+46     	; 0x186c <__addsf3x+0x9c>
    183e:	91 50       	subi	r25, 0x01	; 1
    1840:	a1 f0       	breq	.+40     	; 0x186a <__addsf3x+0x9a>
    1842:	ff 0f       	add	r31, r31
    1844:	bb 1f       	adc	r27, r27
    1846:	66 1f       	adc	r22, r22
    1848:	77 1f       	adc	r23, r23
    184a:	88 1f       	adc	r24, r24
    184c:	c2 f7       	brpl	.-16     	; 0x183e <__addsf3x+0x6e>
    184e:	0e c0       	rjmp	.+28     	; 0x186c <__addsf3x+0x9c>
    1850:	ba 0f       	add	r27, r26
    1852:	62 1f       	adc	r22, r18
    1854:	73 1f       	adc	r23, r19
    1856:	84 1f       	adc	r24, r20
    1858:	48 f4       	brcc	.+18     	; 0x186c <__addsf3x+0x9c>
    185a:	87 95       	ror	r24
    185c:	77 95       	ror	r23
    185e:	67 95       	ror	r22
    1860:	b7 95       	ror	r27
    1862:	f7 95       	ror	r31
    1864:	9e 3f       	cpi	r25, 0xFE	; 254
    1866:	08 f0       	brcs	.+2      	; 0x186a <__addsf3x+0x9a>
    1868:	b0 cf       	rjmp	.-160    	; 0x17ca <__addsf3+0x28>
    186a:	93 95       	inc	r25
    186c:	88 0f       	add	r24, r24
    186e:	08 f0       	brcs	.+2      	; 0x1872 <__addsf3x+0xa2>
    1870:	99 27       	eor	r25, r25
    1872:	ee 0f       	add	r30, r30
    1874:	97 95       	ror	r25
    1876:	87 95       	ror	r24
    1878:	08 95       	ret

0000187a <__cmpsf2>:
    187a:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__fp_cmp>
    187e:	08 f4       	brcc	.+2      	; 0x1882 <__cmpsf2+0x8>
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	08 95       	ret

00001884 <__divsf3>:
    1884:	0e 94 56 0c 	call	0x18ac	; 0x18ac <__divsf3x>
    1888:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__fp_round>
    188c:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fp_pscB>
    1890:	58 f0       	brcs	.+22     	; 0x18a8 <__divsf3+0x24>
    1892:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_pscA>
    1896:	40 f0       	brcs	.+16     	; 0x18a8 <__divsf3+0x24>
    1898:	29 f4       	brne	.+10     	; 0x18a4 <__divsf3+0x20>
    189a:	5f 3f       	cpi	r21, 0xFF	; 255
    189c:	29 f0       	breq	.+10     	; 0x18a8 <__divsf3+0x24>
    189e:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__fp_inf>
    18a2:	51 11       	cpse	r21, r1
    18a4:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__fp_szero>
    18a8:	0c 94 4a 0d 	jmp	0x1a94	; 0x1a94 <__fp_nan>

000018ac <__divsf3x>:
    18ac:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <__fp_split3>
    18b0:	68 f3       	brcs	.-38     	; 0x188c <__divsf3+0x8>

000018b2 <__divsf3_pse>:
    18b2:	99 23       	and	r25, r25
    18b4:	b1 f3       	breq	.-20     	; 0x18a2 <__divsf3+0x1e>
    18b6:	55 23       	and	r21, r21
    18b8:	91 f3       	breq	.-28     	; 0x189e <__divsf3+0x1a>
    18ba:	95 1b       	sub	r25, r21
    18bc:	55 0b       	sbc	r21, r21
    18be:	bb 27       	eor	r27, r27
    18c0:	aa 27       	eor	r26, r26
    18c2:	62 17       	cp	r22, r18
    18c4:	73 07       	cpc	r23, r19
    18c6:	84 07       	cpc	r24, r20
    18c8:	38 f0       	brcs	.+14     	; 0x18d8 <__divsf3_pse+0x26>
    18ca:	9f 5f       	subi	r25, 0xFF	; 255
    18cc:	5f 4f       	sbci	r21, 0xFF	; 255
    18ce:	22 0f       	add	r18, r18
    18d0:	33 1f       	adc	r19, r19
    18d2:	44 1f       	adc	r20, r20
    18d4:	aa 1f       	adc	r26, r26
    18d6:	a9 f3       	breq	.-22     	; 0x18c2 <__divsf3_pse+0x10>
    18d8:	35 d0       	rcall	.+106    	; 0x1944 <__divsf3_pse+0x92>
    18da:	0e 2e       	mov	r0, r30
    18dc:	3a f0       	brmi	.+14     	; 0x18ec <__divsf3_pse+0x3a>
    18de:	e0 e8       	ldi	r30, 0x80	; 128
    18e0:	32 d0       	rcall	.+100    	; 0x1946 <__divsf3_pse+0x94>
    18e2:	91 50       	subi	r25, 0x01	; 1
    18e4:	50 40       	sbci	r21, 0x00	; 0
    18e6:	e6 95       	lsr	r30
    18e8:	00 1c       	adc	r0, r0
    18ea:	ca f7       	brpl	.-14     	; 0x18de <__divsf3_pse+0x2c>
    18ec:	2b d0       	rcall	.+86     	; 0x1944 <__divsf3_pse+0x92>
    18ee:	fe 2f       	mov	r31, r30
    18f0:	29 d0       	rcall	.+82     	; 0x1944 <__divsf3_pse+0x92>
    18f2:	66 0f       	add	r22, r22
    18f4:	77 1f       	adc	r23, r23
    18f6:	88 1f       	adc	r24, r24
    18f8:	bb 1f       	adc	r27, r27
    18fa:	26 17       	cp	r18, r22
    18fc:	37 07       	cpc	r19, r23
    18fe:	48 07       	cpc	r20, r24
    1900:	ab 07       	cpc	r26, r27
    1902:	b0 e8       	ldi	r27, 0x80	; 128
    1904:	09 f0       	breq	.+2      	; 0x1908 <__divsf3_pse+0x56>
    1906:	bb 0b       	sbc	r27, r27
    1908:	80 2d       	mov	r24, r0
    190a:	bf 01       	movw	r22, r30
    190c:	ff 27       	eor	r31, r31
    190e:	93 58       	subi	r25, 0x83	; 131
    1910:	5f 4f       	sbci	r21, 0xFF	; 255
    1912:	3a f0       	brmi	.+14     	; 0x1922 <__divsf3_pse+0x70>
    1914:	9e 3f       	cpi	r25, 0xFE	; 254
    1916:	51 05       	cpc	r21, r1
    1918:	78 f0       	brcs	.+30     	; 0x1938 <__divsf3_pse+0x86>
    191a:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__fp_inf>
    191e:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__fp_szero>
    1922:	5f 3f       	cpi	r21, 0xFF	; 255
    1924:	e4 f3       	brlt	.-8      	; 0x191e <__divsf3_pse+0x6c>
    1926:	98 3e       	cpi	r25, 0xE8	; 232
    1928:	d4 f3       	brlt	.-12     	; 0x191e <__divsf3_pse+0x6c>
    192a:	86 95       	lsr	r24
    192c:	77 95       	ror	r23
    192e:	67 95       	ror	r22
    1930:	b7 95       	ror	r27
    1932:	f7 95       	ror	r31
    1934:	9f 5f       	subi	r25, 0xFF	; 255
    1936:	c9 f7       	brne	.-14     	; 0x192a <__divsf3_pse+0x78>
    1938:	88 0f       	add	r24, r24
    193a:	91 1d       	adc	r25, r1
    193c:	96 95       	lsr	r25
    193e:	87 95       	ror	r24
    1940:	97 f9       	bld	r25, 7
    1942:	08 95       	ret
    1944:	e1 e0       	ldi	r30, 0x01	; 1
    1946:	66 0f       	add	r22, r22
    1948:	77 1f       	adc	r23, r23
    194a:	88 1f       	adc	r24, r24
    194c:	bb 1f       	adc	r27, r27
    194e:	62 17       	cp	r22, r18
    1950:	73 07       	cpc	r23, r19
    1952:	84 07       	cpc	r24, r20
    1954:	ba 07       	cpc	r27, r26
    1956:	20 f0       	brcs	.+8      	; 0x1960 <__divsf3_pse+0xae>
    1958:	62 1b       	sub	r22, r18
    195a:	73 0b       	sbc	r23, r19
    195c:	84 0b       	sbc	r24, r20
    195e:	ba 0b       	sbc	r27, r26
    1960:	ee 1f       	adc	r30, r30
    1962:	88 f7       	brcc	.-30     	; 0x1946 <__divsf3_pse+0x94>
    1964:	e0 95       	com	r30
    1966:	08 95       	ret

00001968 <__fixunssfsi>:
    1968:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__fp_splitA>
    196c:	88 f0       	brcs	.+34     	; 0x1990 <__fixunssfsi+0x28>
    196e:	9f 57       	subi	r25, 0x7F	; 127
    1970:	98 f0       	brcs	.+38     	; 0x1998 <__fixunssfsi+0x30>
    1972:	b9 2f       	mov	r27, r25
    1974:	99 27       	eor	r25, r25
    1976:	b7 51       	subi	r27, 0x17	; 23
    1978:	b0 f0       	brcs	.+44     	; 0x19a6 <__fixunssfsi+0x3e>
    197a:	e1 f0       	breq	.+56     	; 0x19b4 <__fixunssfsi+0x4c>
    197c:	66 0f       	add	r22, r22
    197e:	77 1f       	adc	r23, r23
    1980:	88 1f       	adc	r24, r24
    1982:	99 1f       	adc	r25, r25
    1984:	1a f0       	brmi	.+6      	; 0x198c <__fixunssfsi+0x24>
    1986:	ba 95       	dec	r27
    1988:	c9 f7       	brne	.-14     	; 0x197c <__fixunssfsi+0x14>
    198a:	14 c0       	rjmp	.+40     	; 0x19b4 <__fixunssfsi+0x4c>
    198c:	b1 30       	cpi	r27, 0x01	; 1
    198e:	91 f0       	breq	.+36     	; 0x19b4 <__fixunssfsi+0x4c>
    1990:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__fp_zero>
    1994:	b1 e0       	ldi	r27, 0x01	; 1
    1996:	08 95       	ret
    1998:	0c 94 8e 0d 	jmp	0x1b1c	; 0x1b1c <__fp_zero>
    199c:	67 2f       	mov	r22, r23
    199e:	78 2f       	mov	r23, r24
    19a0:	88 27       	eor	r24, r24
    19a2:	b8 5f       	subi	r27, 0xF8	; 248
    19a4:	39 f0       	breq	.+14     	; 0x19b4 <__fixunssfsi+0x4c>
    19a6:	b9 3f       	cpi	r27, 0xF9	; 249
    19a8:	cc f3       	brlt	.-14     	; 0x199c <__fixunssfsi+0x34>
    19aa:	86 95       	lsr	r24
    19ac:	77 95       	ror	r23
    19ae:	67 95       	ror	r22
    19b0:	b3 95       	inc	r27
    19b2:	d9 f7       	brne	.-10     	; 0x19aa <__fixunssfsi+0x42>
    19b4:	3e f4       	brtc	.+14     	; 0x19c4 <__fixunssfsi+0x5c>
    19b6:	90 95       	com	r25
    19b8:	80 95       	com	r24
    19ba:	70 95       	com	r23
    19bc:	61 95       	neg	r22
    19be:	7f 4f       	sbci	r23, 0xFF	; 255
    19c0:	8f 4f       	sbci	r24, 0xFF	; 255
    19c2:	9f 4f       	sbci	r25, 0xFF	; 255
    19c4:	08 95       	ret

000019c6 <__floatunsisf>:
    19c6:	e8 94       	clt
    19c8:	09 c0       	rjmp	.+18     	; 0x19dc <__floatsisf+0x12>

000019ca <__floatsisf>:
    19ca:	97 fb       	bst	r25, 7
    19cc:	3e f4       	brtc	.+14     	; 0x19dc <__floatsisf+0x12>
    19ce:	90 95       	com	r25
    19d0:	80 95       	com	r24
    19d2:	70 95       	com	r23
    19d4:	61 95       	neg	r22
    19d6:	7f 4f       	sbci	r23, 0xFF	; 255
    19d8:	8f 4f       	sbci	r24, 0xFF	; 255
    19da:	9f 4f       	sbci	r25, 0xFF	; 255
    19dc:	99 23       	and	r25, r25
    19de:	a9 f0       	breq	.+42     	; 0x1a0a <__floatsisf+0x40>
    19e0:	f9 2f       	mov	r31, r25
    19e2:	96 e9       	ldi	r25, 0x96	; 150
    19e4:	bb 27       	eor	r27, r27
    19e6:	93 95       	inc	r25
    19e8:	f6 95       	lsr	r31
    19ea:	87 95       	ror	r24
    19ec:	77 95       	ror	r23
    19ee:	67 95       	ror	r22
    19f0:	b7 95       	ror	r27
    19f2:	f1 11       	cpse	r31, r1
    19f4:	f8 cf       	rjmp	.-16     	; 0x19e6 <__floatsisf+0x1c>
    19f6:	fa f4       	brpl	.+62     	; 0x1a36 <__floatsisf+0x6c>
    19f8:	bb 0f       	add	r27, r27
    19fa:	11 f4       	brne	.+4      	; 0x1a00 <__floatsisf+0x36>
    19fc:	60 ff       	sbrs	r22, 0
    19fe:	1b c0       	rjmp	.+54     	; 0x1a36 <__floatsisf+0x6c>
    1a00:	6f 5f       	subi	r22, 0xFF	; 255
    1a02:	7f 4f       	sbci	r23, 0xFF	; 255
    1a04:	8f 4f       	sbci	r24, 0xFF	; 255
    1a06:	9f 4f       	sbci	r25, 0xFF	; 255
    1a08:	16 c0       	rjmp	.+44     	; 0x1a36 <__floatsisf+0x6c>
    1a0a:	88 23       	and	r24, r24
    1a0c:	11 f0       	breq	.+4      	; 0x1a12 <__floatsisf+0x48>
    1a0e:	96 e9       	ldi	r25, 0x96	; 150
    1a10:	11 c0       	rjmp	.+34     	; 0x1a34 <__floatsisf+0x6a>
    1a12:	77 23       	and	r23, r23
    1a14:	21 f0       	breq	.+8      	; 0x1a1e <__floatsisf+0x54>
    1a16:	9e e8       	ldi	r25, 0x8E	; 142
    1a18:	87 2f       	mov	r24, r23
    1a1a:	76 2f       	mov	r23, r22
    1a1c:	05 c0       	rjmp	.+10     	; 0x1a28 <__floatsisf+0x5e>
    1a1e:	66 23       	and	r22, r22
    1a20:	71 f0       	breq	.+28     	; 0x1a3e <__floatsisf+0x74>
    1a22:	96 e8       	ldi	r25, 0x86	; 134
    1a24:	86 2f       	mov	r24, r22
    1a26:	70 e0       	ldi	r23, 0x00	; 0
    1a28:	60 e0       	ldi	r22, 0x00	; 0
    1a2a:	2a f0       	brmi	.+10     	; 0x1a36 <__floatsisf+0x6c>
    1a2c:	9a 95       	dec	r25
    1a2e:	66 0f       	add	r22, r22
    1a30:	77 1f       	adc	r23, r23
    1a32:	88 1f       	adc	r24, r24
    1a34:	da f7       	brpl	.-10     	; 0x1a2c <__floatsisf+0x62>
    1a36:	88 0f       	add	r24, r24
    1a38:	96 95       	lsr	r25
    1a3a:	87 95       	ror	r24
    1a3c:	97 f9       	bld	r25, 7
    1a3e:	08 95       	ret

00001a40 <__fp_cmp>:
    1a40:	99 0f       	add	r25, r25
    1a42:	00 08       	sbc	r0, r0
    1a44:	55 0f       	add	r21, r21
    1a46:	aa 0b       	sbc	r26, r26
    1a48:	e0 e8       	ldi	r30, 0x80	; 128
    1a4a:	fe ef       	ldi	r31, 0xFE	; 254
    1a4c:	16 16       	cp	r1, r22
    1a4e:	17 06       	cpc	r1, r23
    1a50:	e8 07       	cpc	r30, r24
    1a52:	f9 07       	cpc	r31, r25
    1a54:	c0 f0       	brcs	.+48     	; 0x1a86 <__fp_cmp+0x46>
    1a56:	12 16       	cp	r1, r18
    1a58:	13 06       	cpc	r1, r19
    1a5a:	e4 07       	cpc	r30, r20
    1a5c:	f5 07       	cpc	r31, r21
    1a5e:	98 f0       	brcs	.+38     	; 0x1a86 <__fp_cmp+0x46>
    1a60:	62 1b       	sub	r22, r18
    1a62:	73 0b       	sbc	r23, r19
    1a64:	84 0b       	sbc	r24, r20
    1a66:	95 0b       	sbc	r25, r21
    1a68:	39 f4       	brne	.+14     	; 0x1a78 <__fp_cmp+0x38>
    1a6a:	0a 26       	eor	r0, r26
    1a6c:	61 f0       	breq	.+24     	; 0x1a86 <__fp_cmp+0x46>
    1a6e:	23 2b       	or	r18, r19
    1a70:	24 2b       	or	r18, r20
    1a72:	25 2b       	or	r18, r21
    1a74:	21 f4       	brne	.+8      	; 0x1a7e <__fp_cmp+0x3e>
    1a76:	08 95       	ret
    1a78:	0a 26       	eor	r0, r26
    1a7a:	09 f4       	brne	.+2      	; 0x1a7e <__fp_cmp+0x3e>
    1a7c:	a1 40       	sbci	r26, 0x01	; 1
    1a7e:	a6 95       	lsr	r26
    1a80:	8f ef       	ldi	r24, 0xFF	; 255
    1a82:	81 1d       	adc	r24, r1
    1a84:	81 1d       	adc	r24, r1
    1a86:	08 95       	ret

00001a88 <__fp_inf>:
    1a88:	97 f9       	bld	r25, 7
    1a8a:	9f 67       	ori	r25, 0x7F	; 127
    1a8c:	80 e8       	ldi	r24, 0x80	; 128
    1a8e:	70 e0       	ldi	r23, 0x00	; 0
    1a90:	60 e0       	ldi	r22, 0x00	; 0
    1a92:	08 95       	ret

00001a94 <__fp_nan>:
    1a94:	9f ef       	ldi	r25, 0xFF	; 255
    1a96:	80 ec       	ldi	r24, 0xC0	; 192
    1a98:	08 95       	ret

00001a9a <__fp_pscA>:
    1a9a:	00 24       	eor	r0, r0
    1a9c:	0a 94       	dec	r0
    1a9e:	16 16       	cp	r1, r22
    1aa0:	17 06       	cpc	r1, r23
    1aa2:	18 06       	cpc	r1, r24
    1aa4:	09 06       	cpc	r0, r25
    1aa6:	08 95       	ret

00001aa8 <__fp_pscB>:
    1aa8:	00 24       	eor	r0, r0
    1aaa:	0a 94       	dec	r0
    1aac:	12 16       	cp	r1, r18
    1aae:	13 06       	cpc	r1, r19
    1ab0:	14 06       	cpc	r1, r20
    1ab2:	05 06       	cpc	r0, r21
    1ab4:	08 95       	ret

00001ab6 <__fp_round>:
    1ab6:	09 2e       	mov	r0, r25
    1ab8:	03 94       	inc	r0
    1aba:	00 0c       	add	r0, r0
    1abc:	11 f4       	brne	.+4      	; 0x1ac2 <__fp_round+0xc>
    1abe:	88 23       	and	r24, r24
    1ac0:	52 f0       	brmi	.+20     	; 0x1ad6 <__fp_round+0x20>
    1ac2:	bb 0f       	add	r27, r27
    1ac4:	40 f4       	brcc	.+16     	; 0x1ad6 <__fp_round+0x20>
    1ac6:	bf 2b       	or	r27, r31
    1ac8:	11 f4       	brne	.+4      	; 0x1ace <__fp_round+0x18>
    1aca:	60 ff       	sbrs	r22, 0
    1acc:	04 c0       	rjmp	.+8      	; 0x1ad6 <__fp_round+0x20>
    1ace:	6f 5f       	subi	r22, 0xFF	; 255
    1ad0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad6:	08 95       	ret

00001ad8 <__fp_split3>:
    1ad8:	57 fd       	sbrc	r21, 7
    1ada:	90 58       	subi	r25, 0x80	; 128
    1adc:	44 0f       	add	r20, r20
    1ade:	55 1f       	adc	r21, r21
    1ae0:	59 f0       	breq	.+22     	; 0x1af8 <__fp_splitA+0x10>
    1ae2:	5f 3f       	cpi	r21, 0xFF	; 255
    1ae4:	71 f0       	breq	.+28     	; 0x1b02 <__fp_splitA+0x1a>
    1ae6:	47 95       	ror	r20

00001ae8 <__fp_splitA>:
    1ae8:	88 0f       	add	r24, r24
    1aea:	97 fb       	bst	r25, 7
    1aec:	99 1f       	adc	r25, r25
    1aee:	61 f0       	breq	.+24     	; 0x1b08 <__fp_splitA+0x20>
    1af0:	9f 3f       	cpi	r25, 0xFF	; 255
    1af2:	79 f0       	breq	.+30     	; 0x1b12 <__fp_splitA+0x2a>
    1af4:	87 95       	ror	r24
    1af6:	08 95       	ret
    1af8:	12 16       	cp	r1, r18
    1afa:	13 06       	cpc	r1, r19
    1afc:	14 06       	cpc	r1, r20
    1afe:	55 1f       	adc	r21, r21
    1b00:	f2 cf       	rjmp	.-28     	; 0x1ae6 <__fp_split3+0xe>
    1b02:	46 95       	lsr	r20
    1b04:	f1 df       	rcall	.-30     	; 0x1ae8 <__fp_splitA>
    1b06:	08 c0       	rjmp	.+16     	; 0x1b18 <__fp_splitA+0x30>
    1b08:	16 16       	cp	r1, r22
    1b0a:	17 06       	cpc	r1, r23
    1b0c:	18 06       	cpc	r1, r24
    1b0e:	99 1f       	adc	r25, r25
    1b10:	f1 cf       	rjmp	.-30     	; 0x1af4 <__fp_splitA+0xc>
    1b12:	86 95       	lsr	r24
    1b14:	71 05       	cpc	r23, r1
    1b16:	61 05       	cpc	r22, r1
    1b18:	08 94       	sec
    1b1a:	08 95       	ret

00001b1c <__fp_zero>:
    1b1c:	e8 94       	clt

00001b1e <__fp_szero>:
    1b1e:	bb 27       	eor	r27, r27
    1b20:	66 27       	eor	r22, r22
    1b22:	77 27       	eor	r23, r23
    1b24:	cb 01       	movw	r24, r22
    1b26:	97 f9       	bld	r25, 7
    1b28:	08 95       	ret

00001b2a <__mulsf3>:
    1b2a:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <__mulsf3x>
    1b2e:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__fp_round>
    1b32:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_pscA>
    1b36:	38 f0       	brcs	.+14     	; 0x1b46 <__mulsf3+0x1c>
    1b38:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fp_pscB>
    1b3c:	20 f0       	brcs	.+8      	; 0x1b46 <__mulsf3+0x1c>
    1b3e:	95 23       	and	r25, r21
    1b40:	11 f0       	breq	.+4      	; 0x1b46 <__mulsf3+0x1c>
    1b42:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__fp_inf>
    1b46:	0c 94 4a 0d 	jmp	0x1a94	; 0x1a94 <__fp_nan>
    1b4a:	11 24       	eor	r1, r1
    1b4c:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__fp_szero>

00001b50 <__mulsf3x>:
    1b50:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <__fp_split3>
    1b54:	70 f3       	brcs	.-36     	; 0x1b32 <__mulsf3+0x8>

00001b56 <__mulsf3_pse>:
    1b56:	95 9f       	mul	r25, r21
    1b58:	c1 f3       	breq	.-16     	; 0x1b4a <__mulsf3+0x20>
    1b5a:	95 0f       	add	r25, r21
    1b5c:	50 e0       	ldi	r21, 0x00	; 0
    1b5e:	55 1f       	adc	r21, r21
    1b60:	62 9f       	mul	r22, r18
    1b62:	f0 01       	movw	r30, r0
    1b64:	72 9f       	mul	r23, r18
    1b66:	bb 27       	eor	r27, r27
    1b68:	f0 0d       	add	r31, r0
    1b6a:	b1 1d       	adc	r27, r1
    1b6c:	63 9f       	mul	r22, r19
    1b6e:	aa 27       	eor	r26, r26
    1b70:	f0 0d       	add	r31, r0
    1b72:	b1 1d       	adc	r27, r1
    1b74:	aa 1f       	adc	r26, r26
    1b76:	64 9f       	mul	r22, r20
    1b78:	66 27       	eor	r22, r22
    1b7a:	b0 0d       	add	r27, r0
    1b7c:	a1 1d       	adc	r26, r1
    1b7e:	66 1f       	adc	r22, r22
    1b80:	82 9f       	mul	r24, r18
    1b82:	22 27       	eor	r18, r18
    1b84:	b0 0d       	add	r27, r0
    1b86:	a1 1d       	adc	r26, r1
    1b88:	62 1f       	adc	r22, r18
    1b8a:	73 9f       	mul	r23, r19
    1b8c:	b0 0d       	add	r27, r0
    1b8e:	a1 1d       	adc	r26, r1
    1b90:	62 1f       	adc	r22, r18
    1b92:	83 9f       	mul	r24, r19
    1b94:	a0 0d       	add	r26, r0
    1b96:	61 1d       	adc	r22, r1
    1b98:	22 1f       	adc	r18, r18
    1b9a:	74 9f       	mul	r23, r20
    1b9c:	33 27       	eor	r19, r19
    1b9e:	a0 0d       	add	r26, r0
    1ba0:	61 1d       	adc	r22, r1
    1ba2:	23 1f       	adc	r18, r19
    1ba4:	84 9f       	mul	r24, r20
    1ba6:	60 0d       	add	r22, r0
    1ba8:	21 1d       	adc	r18, r1
    1baa:	82 2f       	mov	r24, r18
    1bac:	76 2f       	mov	r23, r22
    1bae:	6a 2f       	mov	r22, r26
    1bb0:	11 24       	eor	r1, r1
    1bb2:	9f 57       	subi	r25, 0x7F	; 127
    1bb4:	50 40       	sbci	r21, 0x00	; 0
    1bb6:	9a f0       	brmi	.+38     	; 0x1bde <__mulsf3_pse+0x88>
    1bb8:	f1 f0       	breq	.+60     	; 0x1bf6 <__mulsf3_pse+0xa0>
    1bba:	88 23       	and	r24, r24
    1bbc:	4a f0       	brmi	.+18     	; 0x1bd0 <__mulsf3_pse+0x7a>
    1bbe:	ee 0f       	add	r30, r30
    1bc0:	ff 1f       	adc	r31, r31
    1bc2:	bb 1f       	adc	r27, r27
    1bc4:	66 1f       	adc	r22, r22
    1bc6:	77 1f       	adc	r23, r23
    1bc8:	88 1f       	adc	r24, r24
    1bca:	91 50       	subi	r25, 0x01	; 1
    1bcc:	50 40       	sbci	r21, 0x00	; 0
    1bce:	a9 f7       	brne	.-22     	; 0x1bba <__mulsf3_pse+0x64>
    1bd0:	9e 3f       	cpi	r25, 0xFE	; 254
    1bd2:	51 05       	cpc	r21, r1
    1bd4:	80 f0       	brcs	.+32     	; 0x1bf6 <__mulsf3_pse+0xa0>
    1bd6:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__fp_inf>
    1bda:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__fp_szero>
    1bde:	5f 3f       	cpi	r21, 0xFF	; 255
    1be0:	e4 f3       	brlt	.-8      	; 0x1bda <__mulsf3_pse+0x84>
    1be2:	98 3e       	cpi	r25, 0xE8	; 232
    1be4:	d4 f3       	brlt	.-12     	; 0x1bda <__mulsf3_pse+0x84>
    1be6:	86 95       	lsr	r24
    1be8:	77 95       	ror	r23
    1bea:	67 95       	ror	r22
    1bec:	b7 95       	ror	r27
    1bee:	f7 95       	ror	r31
    1bf0:	e7 95       	ror	r30
    1bf2:	9f 5f       	subi	r25, 0xFF	; 255
    1bf4:	c1 f7       	brne	.-16     	; 0x1be6 <__mulsf3_pse+0x90>
    1bf6:	fe 2b       	or	r31, r30
    1bf8:	88 0f       	add	r24, r24
    1bfa:	91 1d       	adc	r25, r1
    1bfc:	96 95       	lsr	r25
    1bfe:	87 95       	ror	r24
    1c00:	97 f9       	bld	r25, 7
    1c02:	08 95       	ret

00001c04 <__udivmodqi4>:
    1c04:	99 1b       	sub	r25, r25
    1c06:	79 e0       	ldi	r23, 0x09	; 9
    1c08:	04 c0       	rjmp	.+8      	; 0x1c12 <__udivmodqi4_ep>

00001c0a <__udivmodqi4_loop>:
    1c0a:	99 1f       	adc	r25, r25
    1c0c:	96 17       	cp	r25, r22
    1c0e:	08 f0       	brcs	.+2      	; 0x1c12 <__udivmodqi4_ep>
    1c10:	96 1b       	sub	r25, r22

00001c12 <__udivmodqi4_ep>:
    1c12:	88 1f       	adc	r24, r24
    1c14:	7a 95       	dec	r23
    1c16:	c9 f7       	brne	.-14     	; 0x1c0a <__udivmodqi4_loop>
    1c18:	80 95       	com	r24
    1c1a:	08 95       	ret

00001c1c <__udivmodhi4>:
    1c1c:	aa 1b       	sub	r26, r26
    1c1e:	bb 1b       	sub	r27, r27
    1c20:	51 e1       	ldi	r21, 0x11	; 17
    1c22:	07 c0       	rjmp	.+14     	; 0x1c32 <__udivmodhi4_ep>

00001c24 <__udivmodhi4_loop>:
    1c24:	aa 1f       	adc	r26, r26
    1c26:	bb 1f       	adc	r27, r27
    1c28:	a6 17       	cp	r26, r22
    1c2a:	b7 07       	cpc	r27, r23
    1c2c:	10 f0       	brcs	.+4      	; 0x1c32 <__udivmodhi4_ep>
    1c2e:	a6 1b       	sub	r26, r22
    1c30:	b7 0b       	sbc	r27, r23

00001c32 <__udivmodhi4_ep>:
    1c32:	88 1f       	adc	r24, r24
    1c34:	99 1f       	adc	r25, r25
    1c36:	5a 95       	dec	r21
    1c38:	a9 f7       	brne	.-22     	; 0x1c24 <__udivmodhi4_loop>
    1c3a:	80 95       	com	r24
    1c3c:	90 95       	com	r25
    1c3e:	bc 01       	movw	r22, r24
    1c40:	cd 01       	movw	r24, r26
    1c42:	08 95       	ret

00001c44 <atoi>:
    1c44:	fc 01       	movw	r30, r24
    1c46:	88 27       	eor	r24, r24
    1c48:	99 27       	eor	r25, r25
    1c4a:	e8 94       	clt
    1c4c:	21 91       	ld	r18, Z+
    1c4e:	20 32       	cpi	r18, 0x20	; 32
    1c50:	e9 f3       	breq	.-6      	; 0x1c4c <atoi+0x8>
    1c52:	29 30       	cpi	r18, 0x09	; 9
    1c54:	10 f0       	brcs	.+4      	; 0x1c5a <atoi+0x16>
    1c56:	2e 30       	cpi	r18, 0x0E	; 14
    1c58:	c8 f3       	brcs	.-14     	; 0x1c4c <atoi+0x8>
    1c5a:	2b 32       	cpi	r18, 0x2B	; 43
    1c5c:	41 f0       	breq	.+16     	; 0x1c6e <atoi+0x2a>
    1c5e:	2d 32       	cpi	r18, 0x2D	; 45
    1c60:	39 f4       	brne	.+14     	; 0x1c70 <atoi+0x2c>
    1c62:	68 94       	set
    1c64:	04 c0       	rjmp	.+8      	; 0x1c6e <atoi+0x2a>
    1c66:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__mulhi_const_10>
    1c6a:	82 0f       	add	r24, r18
    1c6c:	91 1d       	adc	r25, r1
    1c6e:	21 91       	ld	r18, Z+
    1c70:	20 53       	subi	r18, 0x30	; 48
    1c72:	2a 30       	cpi	r18, 0x0A	; 10
    1c74:	c0 f3       	brcs	.-16     	; 0x1c66 <atoi+0x22>
    1c76:	1e f4       	brtc	.+6      	; 0x1c7e <atoi+0x3a>
    1c78:	90 95       	com	r25
    1c7a:	81 95       	neg	r24
    1c7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7e:	08 95       	ret

00001c80 <strdup>:
    1c80:	0f 93       	push	r16
    1c82:	1f 93       	push	r17
    1c84:	cf 93       	push	r28
    1c86:	df 93       	push	r29
    1c88:	8c 01       	movw	r16, r24
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	01 90       	ld	r0, Z+
    1c8e:	00 20       	and	r0, r0
    1c90:	e9 f7       	brne	.-6      	; 0x1c8c <strdup+0xc>
    1c92:	cf 01       	movw	r24, r30
    1c94:	80 1b       	sub	r24, r16
    1c96:	91 0b       	sbc	r25, r17
    1c98:	0e 94 76 10 	call	0x20ec	; 0x20ec <malloc>
    1c9c:	ec 01       	movw	r28, r24
    1c9e:	00 97       	sbiw	r24, 0x00	; 0
    1ca0:	19 f0       	breq	.+6      	; 0x1ca8 <strdup+0x28>
    1ca2:	b8 01       	movw	r22, r16
    1ca4:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <strcpy>
    1ca8:	ce 01       	movw	r24, r28
    1caa:	df 91       	pop	r29
    1cac:	cf 91       	pop	r28
    1cae:	1f 91       	pop	r17
    1cb0:	0f 91       	pop	r16
    1cb2:	08 95       	ret

00001cb4 <strcpy>:
    1cb4:	fb 01       	movw	r30, r22
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	01 90       	ld	r0, Z+
    1cba:	0d 92       	st	X+, r0
    1cbc:	00 20       	and	r0, r0
    1cbe:	e1 f7       	brne	.-8      	; 0x1cb8 <strcpy+0x4>
    1cc0:	08 95       	ret

00001cc2 <strsep>:
    1cc2:	fc 01       	movw	r30, r24
    1cc4:	a0 81       	ld	r26, Z
    1cc6:	b1 81       	ldd	r27, Z+1	; 0x01
    1cc8:	ad 01       	movw	r20, r26
    1cca:	10 96       	adiw	r26, 0x00	; 0
    1ccc:	81 f0       	breq	.+32     	; 0x1cee <strsep+0x2c>
    1cce:	3d 91       	ld	r19, X+
    1cd0:	fb 01       	movw	r30, r22
    1cd2:	01 90       	ld	r0, Z+
    1cd4:	03 16       	cp	r0, r19
    1cd6:	01 10       	cpse	r0, r1
    1cd8:	e1 f7       	brne	.-8      	; 0x1cd2 <strsep+0x10>
    1cda:	c9 f7       	brne	.-14     	; 0x1cce <strsep+0xc>
    1cdc:	00 20       	and	r0, r0
    1cde:	11 f4       	brne	.+4      	; 0x1ce4 <strsep+0x22>
    1ce0:	d0 01       	movw	r26, r0
    1ce2:	02 c0       	rjmp	.+4      	; 0x1ce8 <strsep+0x26>
    1ce4:	1e 92       	st	-X, r1
    1ce6:	11 96       	adiw	r26, 0x01	; 1
    1ce8:	fc 01       	movw	r30, r24
    1cea:	a0 83       	st	Z, r26
    1cec:	b1 83       	std	Z+1, r27	; 0x01
    1cee:	ca 01       	movw	r24, r20
    1cf0:	08 95       	ret

00001cf2 <__mulhi_const_10>:
    1cf2:	7a e0       	ldi	r23, 0x0A	; 10
    1cf4:	97 9f       	mul	r25, r23
    1cf6:	90 2d       	mov	r25, r0
    1cf8:	87 9f       	mul	r24, r23
    1cfa:	80 2d       	mov	r24, r0
    1cfc:	91 0d       	add	r25, r1
    1cfe:	11 24       	eor	r1, r1
    1d00:	08 95       	ret

00001d02 <sprintf>:
    1d02:	ae e0       	ldi	r26, 0x0E	; 14
    1d04:	b0 e0       	ldi	r27, 0x00	; 0
    1d06:	e7 e8       	ldi	r30, 0x87	; 135
    1d08:	fe e0       	ldi	r31, 0x0E	; 14
    1d0a:	0c 94 5d 12 	jmp	0x24ba	; 0x24ba <__prologue_saves__+0x1c>
    1d0e:	0d 89       	ldd	r16, Y+21	; 0x15
    1d10:	1e 89       	ldd	r17, Y+22	; 0x16
    1d12:	86 e0       	ldi	r24, 0x06	; 6
    1d14:	8c 83       	std	Y+4, r24	; 0x04
    1d16:	1a 83       	std	Y+2, r17	; 0x02
    1d18:	09 83       	std	Y+1, r16	; 0x01
    1d1a:	8f ef       	ldi	r24, 0xFF	; 255
    1d1c:	9f e7       	ldi	r25, 0x7F	; 127
    1d1e:	9e 83       	std	Y+6, r25	; 0x06
    1d20:	8d 83       	std	Y+5, r24	; 0x05
    1d22:	ae 01       	movw	r20, r28
    1d24:	47 5e       	subi	r20, 0xE7	; 231
    1d26:	5f 4f       	sbci	r21, 0xFF	; 255
    1d28:	6f 89       	ldd	r22, Y+23	; 0x17
    1d2a:	78 8d       	ldd	r23, Y+24	; 0x18
    1d2c:	ce 01       	movw	r24, r28
    1d2e:	01 96       	adiw	r24, 0x01	; 1
    1d30:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <vfprintf>
    1d34:	2f 81       	ldd	r18, Y+7	; 0x07
    1d36:	38 85       	ldd	r19, Y+8	; 0x08
    1d38:	f8 01       	movw	r30, r16
    1d3a:	e2 0f       	add	r30, r18
    1d3c:	f3 1f       	adc	r31, r19
    1d3e:	10 82       	st	Z, r1
    1d40:	2e 96       	adiw	r28, 0x0e	; 14
    1d42:	e4 e0       	ldi	r30, 0x04	; 4
    1d44:	0c 94 79 12 	jmp	0x24f2	; 0x24f2 <__epilogue_restores__+0x1c>

00001d48 <vfprintf>:
    1d48:	ac e0       	ldi	r26, 0x0C	; 12
    1d4a:	b0 e0       	ldi	r27, 0x00	; 0
    1d4c:	ea ea       	ldi	r30, 0xAA	; 170
    1d4e:	fe e0       	ldi	r31, 0x0E	; 14
    1d50:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__prologue_saves__>
    1d54:	7c 01       	movw	r14, r24
    1d56:	6b 01       	movw	r12, r22
    1d58:	8a 01       	movw	r16, r20
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	17 82       	std	Z+7, r1	; 0x07
    1d5e:	16 82       	std	Z+6, r1	; 0x06
    1d60:	83 81       	ldd	r24, Z+3	; 0x03
    1d62:	81 ff       	sbrs	r24, 1
    1d64:	bd c1       	rjmp	.+890    	; 0x20e0 <vfprintf+0x398>
    1d66:	ce 01       	movw	r24, r28
    1d68:	01 96       	adiw	r24, 0x01	; 1
    1d6a:	4c 01       	movw	r8, r24
    1d6c:	f7 01       	movw	r30, r14
    1d6e:	93 81       	ldd	r25, Z+3	; 0x03
    1d70:	f6 01       	movw	r30, r12
    1d72:	93 fd       	sbrc	r25, 3
    1d74:	85 91       	lpm	r24, Z+
    1d76:	93 ff       	sbrs	r25, 3
    1d78:	81 91       	ld	r24, Z+
    1d7a:	6f 01       	movw	r12, r30
    1d7c:	88 23       	and	r24, r24
    1d7e:	09 f4       	brne	.+2      	; 0x1d82 <vfprintf+0x3a>
    1d80:	ab c1       	rjmp	.+854    	; 0x20d8 <vfprintf+0x390>
    1d82:	85 32       	cpi	r24, 0x25	; 37
    1d84:	39 f4       	brne	.+14     	; 0x1d94 <vfprintf+0x4c>
    1d86:	93 fd       	sbrc	r25, 3
    1d88:	85 91       	lpm	r24, Z+
    1d8a:	93 ff       	sbrs	r25, 3
    1d8c:	81 91       	ld	r24, Z+
    1d8e:	6f 01       	movw	r12, r30
    1d90:	85 32       	cpi	r24, 0x25	; 37
    1d92:	29 f4       	brne	.+10     	; 0x1d9e <vfprintf+0x56>
    1d94:	b7 01       	movw	r22, r14
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1d9c:	e7 cf       	rjmp	.-50     	; 0x1d6c <vfprintf+0x24>
    1d9e:	51 2c       	mov	r5, r1
    1da0:	31 2c       	mov	r3, r1
    1da2:	20 e0       	ldi	r18, 0x00	; 0
    1da4:	20 32       	cpi	r18, 0x20	; 32
    1da6:	a0 f4       	brcc	.+40     	; 0x1dd0 <vfprintf+0x88>
    1da8:	8b 32       	cpi	r24, 0x2B	; 43
    1daa:	69 f0       	breq	.+26     	; 0x1dc6 <vfprintf+0x7e>
    1dac:	30 f4       	brcc	.+12     	; 0x1dba <vfprintf+0x72>
    1dae:	80 32       	cpi	r24, 0x20	; 32
    1db0:	59 f0       	breq	.+22     	; 0x1dc8 <vfprintf+0x80>
    1db2:	83 32       	cpi	r24, 0x23	; 35
    1db4:	69 f4       	brne	.+26     	; 0x1dd0 <vfprintf+0x88>
    1db6:	20 61       	ori	r18, 0x10	; 16
    1db8:	2c c0       	rjmp	.+88     	; 0x1e12 <vfprintf+0xca>
    1dba:	8d 32       	cpi	r24, 0x2D	; 45
    1dbc:	39 f0       	breq	.+14     	; 0x1dcc <vfprintf+0x84>
    1dbe:	80 33       	cpi	r24, 0x30	; 48
    1dc0:	39 f4       	brne	.+14     	; 0x1dd0 <vfprintf+0x88>
    1dc2:	21 60       	ori	r18, 0x01	; 1
    1dc4:	26 c0       	rjmp	.+76     	; 0x1e12 <vfprintf+0xca>
    1dc6:	22 60       	ori	r18, 0x02	; 2
    1dc8:	24 60       	ori	r18, 0x04	; 4
    1dca:	23 c0       	rjmp	.+70     	; 0x1e12 <vfprintf+0xca>
    1dcc:	28 60       	ori	r18, 0x08	; 8
    1dce:	21 c0       	rjmp	.+66     	; 0x1e12 <vfprintf+0xca>
    1dd0:	27 fd       	sbrc	r18, 7
    1dd2:	27 c0       	rjmp	.+78     	; 0x1e22 <vfprintf+0xda>
    1dd4:	30 ed       	ldi	r19, 0xD0	; 208
    1dd6:	38 0f       	add	r19, r24
    1dd8:	3a 30       	cpi	r19, 0x0A	; 10
    1dda:	78 f4       	brcc	.+30     	; 0x1dfa <vfprintf+0xb2>
    1ddc:	26 ff       	sbrs	r18, 6
    1dde:	06 c0       	rjmp	.+12     	; 0x1dec <vfprintf+0xa4>
    1de0:	fa e0       	ldi	r31, 0x0A	; 10
    1de2:	5f 9e       	mul	r5, r31
    1de4:	30 0d       	add	r19, r0
    1de6:	11 24       	eor	r1, r1
    1de8:	53 2e       	mov	r5, r19
    1dea:	13 c0       	rjmp	.+38     	; 0x1e12 <vfprintf+0xca>
    1dec:	8a e0       	ldi	r24, 0x0A	; 10
    1dee:	38 9e       	mul	r3, r24
    1df0:	30 0d       	add	r19, r0
    1df2:	11 24       	eor	r1, r1
    1df4:	33 2e       	mov	r3, r19
    1df6:	20 62       	ori	r18, 0x20	; 32
    1df8:	0c c0       	rjmp	.+24     	; 0x1e12 <vfprintf+0xca>
    1dfa:	8e 32       	cpi	r24, 0x2E	; 46
    1dfc:	21 f4       	brne	.+8      	; 0x1e06 <vfprintf+0xbe>
    1dfe:	26 fd       	sbrc	r18, 6
    1e00:	6b c1       	rjmp	.+726    	; 0x20d8 <vfprintf+0x390>
    1e02:	20 64       	ori	r18, 0x40	; 64
    1e04:	06 c0       	rjmp	.+12     	; 0x1e12 <vfprintf+0xca>
    1e06:	8c 36       	cpi	r24, 0x6C	; 108
    1e08:	11 f4       	brne	.+4      	; 0x1e0e <vfprintf+0xc6>
    1e0a:	20 68       	ori	r18, 0x80	; 128
    1e0c:	02 c0       	rjmp	.+4      	; 0x1e12 <vfprintf+0xca>
    1e0e:	88 36       	cpi	r24, 0x68	; 104
    1e10:	41 f4       	brne	.+16     	; 0x1e22 <vfprintf+0xda>
    1e12:	f6 01       	movw	r30, r12
    1e14:	93 fd       	sbrc	r25, 3
    1e16:	85 91       	lpm	r24, Z+
    1e18:	93 ff       	sbrs	r25, 3
    1e1a:	81 91       	ld	r24, Z+
    1e1c:	6f 01       	movw	r12, r30
    1e1e:	81 11       	cpse	r24, r1
    1e20:	c1 cf       	rjmp	.-126    	; 0x1da4 <vfprintf+0x5c>
    1e22:	98 2f       	mov	r25, r24
    1e24:	9f 7d       	andi	r25, 0xDF	; 223
    1e26:	95 54       	subi	r25, 0x45	; 69
    1e28:	93 30       	cpi	r25, 0x03	; 3
    1e2a:	28 f4       	brcc	.+10     	; 0x1e36 <vfprintf+0xee>
    1e2c:	0c 5f       	subi	r16, 0xFC	; 252
    1e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e30:	ff e3       	ldi	r31, 0x3F	; 63
    1e32:	f9 83       	std	Y+1, r31	; 0x01
    1e34:	0d c0       	rjmp	.+26     	; 0x1e50 <vfprintf+0x108>
    1e36:	83 36       	cpi	r24, 0x63	; 99
    1e38:	31 f0       	breq	.+12     	; 0x1e46 <vfprintf+0xfe>
    1e3a:	83 37       	cpi	r24, 0x73	; 115
    1e3c:	71 f0       	breq	.+28     	; 0x1e5a <vfprintf+0x112>
    1e3e:	83 35       	cpi	r24, 0x53	; 83
    1e40:	09 f0       	breq	.+2      	; 0x1e44 <vfprintf+0xfc>
    1e42:	5b c0       	rjmp	.+182    	; 0x1efa <vfprintf+0x1b2>
    1e44:	22 c0       	rjmp	.+68     	; 0x1e8a <vfprintf+0x142>
    1e46:	f8 01       	movw	r30, r16
    1e48:	80 81       	ld	r24, Z
    1e4a:	89 83       	std	Y+1, r24	; 0x01
    1e4c:	0e 5f       	subi	r16, 0xFE	; 254
    1e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e50:	44 24       	eor	r4, r4
    1e52:	43 94       	inc	r4
    1e54:	51 2c       	mov	r5, r1
    1e56:	54 01       	movw	r10, r8
    1e58:	15 c0       	rjmp	.+42     	; 0x1e84 <vfprintf+0x13c>
    1e5a:	38 01       	movw	r6, r16
    1e5c:	f2 e0       	ldi	r31, 0x02	; 2
    1e5e:	6f 0e       	add	r6, r31
    1e60:	71 1c       	adc	r7, r1
    1e62:	f8 01       	movw	r30, r16
    1e64:	a0 80       	ld	r10, Z
    1e66:	b1 80       	ldd	r11, Z+1	; 0x01
    1e68:	26 ff       	sbrs	r18, 6
    1e6a:	03 c0       	rjmp	.+6      	; 0x1e72 <vfprintf+0x12a>
    1e6c:	65 2d       	mov	r22, r5
    1e6e:	70 e0       	ldi	r23, 0x00	; 0
    1e70:	02 c0       	rjmp	.+4      	; 0x1e76 <vfprintf+0x12e>
    1e72:	6f ef       	ldi	r22, 0xFF	; 255
    1e74:	7f ef       	ldi	r23, 0xFF	; 255
    1e76:	c5 01       	movw	r24, r10
    1e78:	2c 87       	std	Y+12, r18	; 0x0c
    1e7a:	0e 94 ae 11 	call	0x235c	; 0x235c <strnlen>
    1e7e:	2c 01       	movw	r4, r24
    1e80:	83 01       	movw	r16, r6
    1e82:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e84:	2f 77       	andi	r18, 0x7F	; 127
    1e86:	22 2e       	mov	r2, r18
    1e88:	17 c0       	rjmp	.+46     	; 0x1eb8 <vfprintf+0x170>
    1e8a:	38 01       	movw	r6, r16
    1e8c:	f2 e0       	ldi	r31, 0x02	; 2
    1e8e:	6f 0e       	add	r6, r31
    1e90:	71 1c       	adc	r7, r1
    1e92:	f8 01       	movw	r30, r16
    1e94:	a0 80       	ld	r10, Z
    1e96:	b1 80       	ldd	r11, Z+1	; 0x01
    1e98:	26 ff       	sbrs	r18, 6
    1e9a:	03 c0       	rjmp	.+6      	; 0x1ea2 <vfprintf+0x15a>
    1e9c:	65 2d       	mov	r22, r5
    1e9e:	70 e0       	ldi	r23, 0x00	; 0
    1ea0:	02 c0       	rjmp	.+4      	; 0x1ea6 <vfprintf+0x15e>
    1ea2:	6f ef       	ldi	r22, 0xFF	; 255
    1ea4:	7f ef       	ldi	r23, 0xFF	; 255
    1ea6:	c5 01       	movw	r24, r10
    1ea8:	2c 87       	std	Y+12, r18	; 0x0c
    1eaa:	0e 94 a3 11 	call	0x2346	; 0x2346 <strnlen_P>
    1eae:	2c 01       	movw	r4, r24
    1eb0:	2c 85       	ldd	r18, Y+12	; 0x0c
    1eb2:	20 68       	ori	r18, 0x80	; 128
    1eb4:	22 2e       	mov	r2, r18
    1eb6:	83 01       	movw	r16, r6
    1eb8:	23 fc       	sbrc	r2, 3
    1eba:	1b c0       	rjmp	.+54     	; 0x1ef2 <vfprintf+0x1aa>
    1ebc:	83 2d       	mov	r24, r3
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	48 16       	cp	r4, r24
    1ec2:	59 06       	cpc	r5, r25
    1ec4:	b0 f4       	brcc	.+44     	; 0x1ef2 <vfprintf+0x1aa>
    1ec6:	b7 01       	movw	r22, r14
    1ec8:	80 e2       	ldi	r24, 0x20	; 32
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1ed0:	3a 94       	dec	r3
    1ed2:	f4 cf       	rjmp	.-24     	; 0x1ebc <vfprintf+0x174>
    1ed4:	f5 01       	movw	r30, r10
    1ed6:	27 fc       	sbrc	r2, 7
    1ed8:	85 91       	lpm	r24, Z+
    1eda:	27 fe       	sbrs	r2, 7
    1edc:	81 91       	ld	r24, Z+
    1ede:	5f 01       	movw	r10, r30
    1ee0:	b7 01       	movw	r22, r14
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1ee8:	31 10       	cpse	r3, r1
    1eea:	3a 94       	dec	r3
    1eec:	f1 e0       	ldi	r31, 0x01	; 1
    1eee:	4f 1a       	sub	r4, r31
    1ef0:	51 08       	sbc	r5, r1
    1ef2:	41 14       	cp	r4, r1
    1ef4:	51 04       	cpc	r5, r1
    1ef6:	71 f7       	brne	.-36     	; 0x1ed4 <vfprintf+0x18c>
    1ef8:	e5 c0       	rjmp	.+458    	; 0x20c4 <vfprintf+0x37c>
    1efa:	84 36       	cpi	r24, 0x64	; 100
    1efc:	11 f0       	breq	.+4      	; 0x1f02 <vfprintf+0x1ba>
    1efe:	89 36       	cpi	r24, 0x69	; 105
    1f00:	39 f5       	brne	.+78     	; 0x1f50 <vfprintf+0x208>
    1f02:	f8 01       	movw	r30, r16
    1f04:	27 ff       	sbrs	r18, 7
    1f06:	07 c0       	rjmp	.+14     	; 0x1f16 <vfprintf+0x1ce>
    1f08:	60 81       	ld	r22, Z
    1f0a:	71 81       	ldd	r23, Z+1	; 0x01
    1f0c:	82 81       	ldd	r24, Z+2	; 0x02
    1f0e:	93 81       	ldd	r25, Z+3	; 0x03
    1f10:	0c 5f       	subi	r16, 0xFC	; 252
    1f12:	1f 4f       	sbci	r17, 0xFF	; 255
    1f14:	08 c0       	rjmp	.+16     	; 0x1f26 <vfprintf+0x1de>
    1f16:	60 81       	ld	r22, Z
    1f18:	71 81       	ldd	r23, Z+1	; 0x01
    1f1a:	07 2e       	mov	r0, r23
    1f1c:	00 0c       	add	r0, r0
    1f1e:	88 0b       	sbc	r24, r24
    1f20:	99 0b       	sbc	r25, r25
    1f22:	0e 5f       	subi	r16, 0xFE	; 254
    1f24:	1f 4f       	sbci	r17, 0xFF	; 255
    1f26:	2f 76       	andi	r18, 0x6F	; 111
    1f28:	72 2e       	mov	r7, r18
    1f2a:	97 ff       	sbrs	r25, 7
    1f2c:	09 c0       	rjmp	.+18     	; 0x1f40 <vfprintf+0x1f8>
    1f2e:	90 95       	com	r25
    1f30:	80 95       	com	r24
    1f32:	70 95       	com	r23
    1f34:	61 95       	neg	r22
    1f36:	7f 4f       	sbci	r23, 0xFF	; 255
    1f38:	8f 4f       	sbci	r24, 0xFF	; 255
    1f3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f3c:	20 68       	ori	r18, 0x80	; 128
    1f3e:	72 2e       	mov	r7, r18
    1f40:	2a e0       	ldi	r18, 0x0A	; 10
    1f42:	30 e0       	ldi	r19, 0x00	; 0
    1f44:	a4 01       	movw	r20, r8
    1f46:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__ultoa_invert>
    1f4a:	a8 2e       	mov	r10, r24
    1f4c:	a8 18       	sub	r10, r8
    1f4e:	44 c0       	rjmp	.+136    	; 0x1fd8 <vfprintf+0x290>
    1f50:	85 37       	cpi	r24, 0x75	; 117
    1f52:	29 f4       	brne	.+10     	; 0x1f5e <vfprintf+0x216>
    1f54:	2f 7e       	andi	r18, 0xEF	; 239
    1f56:	b2 2e       	mov	r11, r18
    1f58:	2a e0       	ldi	r18, 0x0A	; 10
    1f5a:	30 e0       	ldi	r19, 0x00	; 0
    1f5c:	25 c0       	rjmp	.+74     	; 0x1fa8 <vfprintf+0x260>
    1f5e:	f2 2f       	mov	r31, r18
    1f60:	f9 7f       	andi	r31, 0xF9	; 249
    1f62:	bf 2e       	mov	r11, r31
    1f64:	8f 36       	cpi	r24, 0x6F	; 111
    1f66:	c1 f0       	breq	.+48     	; 0x1f98 <vfprintf+0x250>
    1f68:	18 f4       	brcc	.+6      	; 0x1f70 <vfprintf+0x228>
    1f6a:	88 35       	cpi	r24, 0x58	; 88
    1f6c:	79 f0       	breq	.+30     	; 0x1f8c <vfprintf+0x244>
    1f6e:	b4 c0       	rjmp	.+360    	; 0x20d8 <vfprintf+0x390>
    1f70:	80 37       	cpi	r24, 0x70	; 112
    1f72:	19 f0       	breq	.+6      	; 0x1f7a <vfprintf+0x232>
    1f74:	88 37       	cpi	r24, 0x78	; 120
    1f76:	21 f0       	breq	.+8      	; 0x1f80 <vfprintf+0x238>
    1f78:	af c0       	rjmp	.+350    	; 0x20d8 <vfprintf+0x390>
    1f7a:	2f 2f       	mov	r18, r31
    1f7c:	20 61       	ori	r18, 0x10	; 16
    1f7e:	b2 2e       	mov	r11, r18
    1f80:	b4 fe       	sbrs	r11, 4
    1f82:	0d c0       	rjmp	.+26     	; 0x1f9e <vfprintf+0x256>
    1f84:	8b 2d       	mov	r24, r11
    1f86:	84 60       	ori	r24, 0x04	; 4
    1f88:	b8 2e       	mov	r11, r24
    1f8a:	09 c0       	rjmp	.+18     	; 0x1f9e <vfprintf+0x256>
    1f8c:	24 ff       	sbrs	r18, 4
    1f8e:	0a c0       	rjmp	.+20     	; 0x1fa4 <vfprintf+0x25c>
    1f90:	9f 2f       	mov	r25, r31
    1f92:	96 60       	ori	r25, 0x06	; 6
    1f94:	b9 2e       	mov	r11, r25
    1f96:	06 c0       	rjmp	.+12     	; 0x1fa4 <vfprintf+0x25c>
    1f98:	28 e0       	ldi	r18, 0x08	; 8
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	05 c0       	rjmp	.+10     	; 0x1fa8 <vfprintf+0x260>
    1f9e:	20 e1       	ldi	r18, 0x10	; 16
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	02 c0       	rjmp	.+4      	; 0x1fa8 <vfprintf+0x260>
    1fa4:	20 e1       	ldi	r18, 0x10	; 16
    1fa6:	32 e0       	ldi	r19, 0x02	; 2
    1fa8:	f8 01       	movw	r30, r16
    1faa:	b7 fe       	sbrs	r11, 7
    1fac:	07 c0       	rjmp	.+14     	; 0x1fbc <vfprintf+0x274>
    1fae:	60 81       	ld	r22, Z
    1fb0:	71 81       	ldd	r23, Z+1	; 0x01
    1fb2:	82 81       	ldd	r24, Z+2	; 0x02
    1fb4:	93 81       	ldd	r25, Z+3	; 0x03
    1fb6:	0c 5f       	subi	r16, 0xFC	; 252
    1fb8:	1f 4f       	sbci	r17, 0xFF	; 255
    1fba:	06 c0       	rjmp	.+12     	; 0x1fc8 <vfprintf+0x280>
    1fbc:	60 81       	ld	r22, Z
    1fbe:	71 81       	ldd	r23, Z+1	; 0x01
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	0e 5f       	subi	r16, 0xFE	; 254
    1fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc8:	a4 01       	movw	r20, r8
    1fca:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__ultoa_invert>
    1fce:	a8 2e       	mov	r10, r24
    1fd0:	a8 18       	sub	r10, r8
    1fd2:	fb 2d       	mov	r31, r11
    1fd4:	ff 77       	andi	r31, 0x7F	; 127
    1fd6:	7f 2e       	mov	r7, r31
    1fd8:	76 fe       	sbrs	r7, 6
    1fda:	0b c0       	rjmp	.+22     	; 0x1ff2 <vfprintf+0x2aa>
    1fdc:	37 2d       	mov	r19, r7
    1fde:	3e 7f       	andi	r19, 0xFE	; 254
    1fe0:	a5 14       	cp	r10, r5
    1fe2:	50 f4       	brcc	.+20     	; 0x1ff8 <vfprintf+0x2b0>
    1fe4:	74 fe       	sbrs	r7, 4
    1fe6:	0a c0       	rjmp	.+20     	; 0x1ffc <vfprintf+0x2b4>
    1fe8:	72 fc       	sbrc	r7, 2
    1fea:	08 c0       	rjmp	.+16     	; 0x1ffc <vfprintf+0x2b4>
    1fec:	37 2d       	mov	r19, r7
    1fee:	3e 7e       	andi	r19, 0xEE	; 238
    1ff0:	05 c0       	rjmp	.+10     	; 0x1ffc <vfprintf+0x2b4>
    1ff2:	ba 2c       	mov	r11, r10
    1ff4:	37 2d       	mov	r19, r7
    1ff6:	03 c0       	rjmp	.+6      	; 0x1ffe <vfprintf+0x2b6>
    1ff8:	ba 2c       	mov	r11, r10
    1ffa:	01 c0       	rjmp	.+2      	; 0x1ffe <vfprintf+0x2b6>
    1ffc:	b5 2c       	mov	r11, r5
    1ffe:	34 ff       	sbrs	r19, 4
    2000:	0d c0       	rjmp	.+26     	; 0x201c <vfprintf+0x2d4>
    2002:	fe 01       	movw	r30, r28
    2004:	ea 0d       	add	r30, r10
    2006:	f1 1d       	adc	r31, r1
    2008:	80 81       	ld	r24, Z
    200a:	80 33       	cpi	r24, 0x30	; 48
    200c:	11 f4       	brne	.+4      	; 0x2012 <vfprintf+0x2ca>
    200e:	39 7e       	andi	r19, 0xE9	; 233
    2010:	09 c0       	rjmp	.+18     	; 0x2024 <vfprintf+0x2dc>
    2012:	32 ff       	sbrs	r19, 2
    2014:	06 c0       	rjmp	.+12     	; 0x2022 <vfprintf+0x2da>
    2016:	b3 94       	inc	r11
    2018:	b3 94       	inc	r11
    201a:	04 c0       	rjmp	.+8      	; 0x2024 <vfprintf+0x2dc>
    201c:	83 2f       	mov	r24, r19
    201e:	86 78       	andi	r24, 0x86	; 134
    2020:	09 f0       	breq	.+2      	; 0x2024 <vfprintf+0x2dc>
    2022:	b3 94       	inc	r11
    2024:	33 fd       	sbrc	r19, 3
    2026:	13 c0       	rjmp	.+38     	; 0x204e <vfprintf+0x306>
    2028:	30 ff       	sbrs	r19, 0
    202a:	06 c0       	rjmp	.+12     	; 0x2038 <vfprintf+0x2f0>
    202c:	5a 2c       	mov	r5, r10
    202e:	b3 14       	cp	r11, r3
    2030:	18 f4       	brcc	.+6      	; 0x2038 <vfprintf+0x2f0>
    2032:	53 0c       	add	r5, r3
    2034:	5b 18       	sub	r5, r11
    2036:	b3 2c       	mov	r11, r3
    2038:	b3 14       	cp	r11, r3
    203a:	68 f4       	brcc	.+26     	; 0x2056 <vfprintf+0x30e>
    203c:	b7 01       	movw	r22, r14
    203e:	80 e2       	ldi	r24, 0x20	; 32
    2040:	90 e0       	ldi	r25, 0x00	; 0
    2042:	3c 87       	std	Y+12, r19	; 0x0c
    2044:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    2048:	b3 94       	inc	r11
    204a:	3c 85       	ldd	r19, Y+12	; 0x0c
    204c:	f5 cf       	rjmp	.-22     	; 0x2038 <vfprintf+0x2f0>
    204e:	b3 14       	cp	r11, r3
    2050:	10 f4       	brcc	.+4      	; 0x2056 <vfprintf+0x30e>
    2052:	3b 18       	sub	r3, r11
    2054:	01 c0       	rjmp	.+2      	; 0x2058 <vfprintf+0x310>
    2056:	31 2c       	mov	r3, r1
    2058:	34 ff       	sbrs	r19, 4
    205a:	12 c0       	rjmp	.+36     	; 0x2080 <vfprintf+0x338>
    205c:	b7 01       	movw	r22, r14
    205e:	80 e3       	ldi	r24, 0x30	; 48
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	3c 87       	std	Y+12, r19	; 0x0c
    2064:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    2068:	3c 85       	ldd	r19, Y+12	; 0x0c
    206a:	32 ff       	sbrs	r19, 2
    206c:	17 c0       	rjmp	.+46     	; 0x209c <vfprintf+0x354>
    206e:	31 fd       	sbrc	r19, 1
    2070:	03 c0       	rjmp	.+6      	; 0x2078 <vfprintf+0x330>
    2072:	88 e7       	ldi	r24, 0x78	; 120
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	02 c0       	rjmp	.+4      	; 0x207c <vfprintf+0x334>
    2078:	88 e5       	ldi	r24, 0x58	; 88
    207a:	90 e0       	ldi	r25, 0x00	; 0
    207c:	b7 01       	movw	r22, r14
    207e:	0c c0       	rjmp	.+24     	; 0x2098 <vfprintf+0x350>
    2080:	83 2f       	mov	r24, r19
    2082:	86 78       	andi	r24, 0x86	; 134
    2084:	59 f0       	breq	.+22     	; 0x209c <vfprintf+0x354>
    2086:	31 ff       	sbrs	r19, 1
    2088:	02 c0       	rjmp	.+4      	; 0x208e <vfprintf+0x346>
    208a:	8b e2       	ldi	r24, 0x2B	; 43
    208c:	01 c0       	rjmp	.+2      	; 0x2090 <vfprintf+0x348>
    208e:	80 e2       	ldi	r24, 0x20	; 32
    2090:	37 fd       	sbrc	r19, 7
    2092:	8d e2       	ldi	r24, 0x2D	; 45
    2094:	b7 01       	movw	r22, r14
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    209c:	a5 14       	cp	r10, r5
    209e:	38 f4       	brcc	.+14     	; 0x20ae <vfprintf+0x366>
    20a0:	b7 01       	movw	r22, r14
    20a2:	80 e3       	ldi	r24, 0x30	; 48
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    20aa:	5a 94       	dec	r5
    20ac:	f7 cf       	rjmp	.-18     	; 0x209c <vfprintf+0x354>
    20ae:	aa 94       	dec	r10
    20b0:	f4 01       	movw	r30, r8
    20b2:	ea 0d       	add	r30, r10
    20b4:	f1 1d       	adc	r31, r1
    20b6:	80 81       	ld	r24, Z
    20b8:	b7 01       	movw	r22, r14
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    20c0:	a1 10       	cpse	r10, r1
    20c2:	f5 cf       	rjmp	.-22     	; 0x20ae <vfprintf+0x366>
    20c4:	33 20       	and	r3, r3
    20c6:	09 f4       	brne	.+2      	; 0x20ca <vfprintf+0x382>
    20c8:	51 ce       	rjmp	.-862    	; 0x1d6c <vfprintf+0x24>
    20ca:	b7 01       	movw	r22, r14
    20cc:	80 e2       	ldi	r24, 0x20	; 32
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    20d4:	3a 94       	dec	r3
    20d6:	f6 cf       	rjmp	.-20     	; 0x20c4 <vfprintf+0x37c>
    20d8:	f7 01       	movw	r30, r14
    20da:	86 81       	ldd	r24, Z+6	; 0x06
    20dc:	97 81       	ldd	r25, Z+7	; 0x07
    20de:	02 c0       	rjmp	.+4      	; 0x20e4 <vfprintf+0x39c>
    20e0:	8f ef       	ldi	r24, 0xFF	; 255
    20e2:	9f ef       	ldi	r25, 0xFF	; 255
    20e4:	2c 96       	adiw	r28, 0x0c	; 12
    20e6:	e2 e1       	ldi	r30, 0x12	; 18
    20e8:	0c 94 6b 12 	jmp	0x24d6	; 0x24d6 <__epilogue_restores__>

000020ec <malloc>:
    20ec:	cf 93       	push	r28
    20ee:	df 93       	push	r29
    20f0:	82 30       	cpi	r24, 0x02	; 2
    20f2:	91 05       	cpc	r25, r1
    20f4:	10 f4       	brcc	.+4      	; 0x20fa <malloc+0xe>
    20f6:	82 e0       	ldi	r24, 0x02	; 2
    20f8:	90 e0       	ldi	r25, 0x00	; 0
    20fa:	e0 91 c6 03 	lds	r30, 0x03C6	; 0x8003c6 <__flp>
    20fe:	f0 91 c7 03 	lds	r31, 0x03C7	; 0x8003c7 <__flp+0x1>
    2102:	20 e0       	ldi	r18, 0x00	; 0
    2104:	30 e0       	ldi	r19, 0x00	; 0
    2106:	c0 e0       	ldi	r28, 0x00	; 0
    2108:	d0 e0       	ldi	r29, 0x00	; 0
    210a:	30 97       	sbiw	r30, 0x00	; 0
    210c:	11 f1       	breq	.+68     	; 0x2152 <malloc+0x66>
    210e:	40 81       	ld	r20, Z
    2110:	51 81       	ldd	r21, Z+1	; 0x01
    2112:	48 17       	cp	r20, r24
    2114:	59 07       	cpc	r21, r25
    2116:	c0 f0       	brcs	.+48     	; 0x2148 <malloc+0x5c>
    2118:	48 17       	cp	r20, r24
    211a:	59 07       	cpc	r21, r25
    211c:	61 f4       	brne	.+24     	; 0x2136 <malloc+0x4a>
    211e:	82 81       	ldd	r24, Z+2	; 0x02
    2120:	93 81       	ldd	r25, Z+3	; 0x03
    2122:	20 97       	sbiw	r28, 0x00	; 0
    2124:	19 f0       	breq	.+6      	; 0x212c <malloc+0x40>
    2126:	9b 83       	std	Y+3, r25	; 0x03
    2128:	8a 83       	std	Y+2, r24	; 0x02
    212a:	2b c0       	rjmp	.+86     	; 0x2182 <malloc+0x96>
    212c:	90 93 c7 03 	sts	0x03C7, r25	; 0x8003c7 <__flp+0x1>
    2130:	80 93 c6 03 	sts	0x03C6, r24	; 0x8003c6 <__flp>
    2134:	26 c0       	rjmp	.+76     	; 0x2182 <malloc+0x96>
    2136:	21 15       	cp	r18, r1
    2138:	31 05       	cpc	r19, r1
    213a:	19 f0       	breq	.+6      	; 0x2142 <malloc+0x56>
    213c:	42 17       	cp	r20, r18
    213e:	53 07       	cpc	r21, r19
    2140:	18 f4       	brcc	.+6      	; 0x2148 <malloc+0x5c>
    2142:	9a 01       	movw	r18, r20
    2144:	be 01       	movw	r22, r28
    2146:	df 01       	movw	r26, r30
    2148:	ef 01       	movw	r28, r30
    214a:	02 80       	ldd	r0, Z+2	; 0x02
    214c:	f3 81       	ldd	r31, Z+3	; 0x03
    214e:	e0 2d       	mov	r30, r0
    2150:	dc cf       	rjmp	.-72     	; 0x210a <malloc+0x1e>
    2152:	21 15       	cp	r18, r1
    2154:	31 05       	cpc	r19, r1
    2156:	09 f1       	breq	.+66     	; 0x219a <malloc+0xae>
    2158:	28 1b       	sub	r18, r24
    215a:	39 0b       	sbc	r19, r25
    215c:	24 30       	cpi	r18, 0x04	; 4
    215e:	31 05       	cpc	r19, r1
    2160:	90 f4       	brcc	.+36     	; 0x2186 <malloc+0x9a>
    2162:	12 96       	adiw	r26, 0x02	; 2
    2164:	8d 91       	ld	r24, X+
    2166:	9c 91       	ld	r25, X
    2168:	13 97       	sbiw	r26, 0x03	; 3
    216a:	61 15       	cp	r22, r1
    216c:	71 05       	cpc	r23, r1
    216e:	21 f0       	breq	.+8      	; 0x2178 <malloc+0x8c>
    2170:	fb 01       	movw	r30, r22
    2172:	93 83       	std	Z+3, r25	; 0x03
    2174:	82 83       	std	Z+2, r24	; 0x02
    2176:	04 c0       	rjmp	.+8      	; 0x2180 <malloc+0x94>
    2178:	90 93 c7 03 	sts	0x03C7, r25	; 0x8003c7 <__flp+0x1>
    217c:	80 93 c6 03 	sts	0x03C6, r24	; 0x8003c6 <__flp>
    2180:	fd 01       	movw	r30, r26
    2182:	32 96       	adiw	r30, 0x02	; 2
    2184:	44 c0       	rjmp	.+136    	; 0x220e <malloc+0x122>
    2186:	fd 01       	movw	r30, r26
    2188:	e2 0f       	add	r30, r18
    218a:	f3 1f       	adc	r31, r19
    218c:	81 93       	st	Z+, r24
    218e:	91 93       	st	Z+, r25
    2190:	22 50       	subi	r18, 0x02	; 2
    2192:	31 09       	sbc	r19, r1
    2194:	2d 93       	st	X+, r18
    2196:	3c 93       	st	X, r19
    2198:	3a c0       	rjmp	.+116    	; 0x220e <malloc+0x122>
    219a:	20 91 c4 03 	lds	r18, 0x03C4	; 0x8003c4 <__brkval>
    219e:	30 91 c5 03 	lds	r19, 0x03C5	; 0x8003c5 <__brkval+0x1>
    21a2:	23 2b       	or	r18, r19
    21a4:	41 f4       	brne	.+16     	; 0x21b6 <malloc+0xca>
    21a6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    21aa:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    21ae:	30 93 c5 03 	sts	0x03C5, r19	; 0x8003c5 <__brkval+0x1>
    21b2:	20 93 c4 03 	sts	0x03C4, r18	; 0x8003c4 <__brkval>
    21b6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    21ba:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    21be:	21 15       	cp	r18, r1
    21c0:	31 05       	cpc	r19, r1
    21c2:	41 f4       	brne	.+16     	; 0x21d4 <malloc+0xe8>
    21c4:	2d b7       	in	r18, 0x3d	; 61
    21c6:	3e b7       	in	r19, 0x3e	; 62
    21c8:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    21cc:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    21d0:	24 1b       	sub	r18, r20
    21d2:	35 0b       	sbc	r19, r21
    21d4:	e0 91 c4 03 	lds	r30, 0x03C4	; 0x8003c4 <__brkval>
    21d8:	f0 91 c5 03 	lds	r31, 0x03C5	; 0x8003c5 <__brkval+0x1>
    21dc:	e2 17       	cp	r30, r18
    21de:	f3 07       	cpc	r31, r19
    21e0:	a0 f4       	brcc	.+40     	; 0x220a <malloc+0x11e>
    21e2:	2e 1b       	sub	r18, r30
    21e4:	3f 0b       	sbc	r19, r31
    21e6:	28 17       	cp	r18, r24
    21e8:	39 07       	cpc	r19, r25
    21ea:	78 f0       	brcs	.+30     	; 0x220a <malloc+0x11e>
    21ec:	ac 01       	movw	r20, r24
    21ee:	4e 5f       	subi	r20, 0xFE	; 254
    21f0:	5f 4f       	sbci	r21, 0xFF	; 255
    21f2:	24 17       	cp	r18, r20
    21f4:	35 07       	cpc	r19, r21
    21f6:	48 f0       	brcs	.+18     	; 0x220a <malloc+0x11e>
    21f8:	4e 0f       	add	r20, r30
    21fa:	5f 1f       	adc	r21, r31
    21fc:	50 93 c5 03 	sts	0x03C5, r21	; 0x8003c5 <__brkval+0x1>
    2200:	40 93 c4 03 	sts	0x03C4, r20	; 0x8003c4 <__brkval>
    2204:	81 93       	st	Z+, r24
    2206:	91 93       	st	Z+, r25
    2208:	02 c0       	rjmp	.+4      	; 0x220e <malloc+0x122>
    220a:	e0 e0       	ldi	r30, 0x00	; 0
    220c:	f0 e0       	ldi	r31, 0x00	; 0
    220e:	cf 01       	movw	r24, r30
    2210:	df 91       	pop	r29
    2212:	cf 91       	pop	r28
    2214:	08 95       	ret

00002216 <free>:
    2216:	0f 93       	push	r16
    2218:	1f 93       	push	r17
    221a:	cf 93       	push	r28
    221c:	df 93       	push	r29
    221e:	00 97       	sbiw	r24, 0x00	; 0
    2220:	09 f4       	brne	.+2      	; 0x2224 <free+0xe>
    2222:	8c c0       	rjmp	.+280    	; 0x233c <free+0x126>
    2224:	fc 01       	movw	r30, r24
    2226:	32 97       	sbiw	r30, 0x02	; 2
    2228:	13 82       	std	Z+3, r1	; 0x03
    222a:	12 82       	std	Z+2, r1	; 0x02
    222c:	00 91 c6 03 	lds	r16, 0x03C6	; 0x8003c6 <__flp>
    2230:	10 91 c7 03 	lds	r17, 0x03C7	; 0x8003c7 <__flp+0x1>
    2234:	01 15       	cp	r16, r1
    2236:	11 05       	cpc	r17, r1
    2238:	81 f4       	brne	.+32     	; 0x225a <free+0x44>
    223a:	20 81       	ld	r18, Z
    223c:	31 81       	ldd	r19, Z+1	; 0x01
    223e:	82 0f       	add	r24, r18
    2240:	93 1f       	adc	r25, r19
    2242:	20 91 c4 03 	lds	r18, 0x03C4	; 0x8003c4 <__brkval>
    2246:	30 91 c5 03 	lds	r19, 0x03C5	; 0x8003c5 <__brkval+0x1>
    224a:	28 17       	cp	r18, r24
    224c:	39 07       	cpc	r19, r25
    224e:	79 f5       	brne	.+94     	; 0x22ae <free+0x98>
    2250:	f0 93 c5 03 	sts	0x03C5, r31	; 0x8003c5 <__brkval+0x1>
    2254:	e0 93 c4 03 	sts	0x03C4, r30	; 0x8003c4 <__brkval>
    2258:	71 c0       	rjmp	.+226    	; 0x233c <free+0x126>
    225a:	d8 01       	movw	r26, r16
    225c:	40 e0       	ldi	r20, 0x00	; 0
    225e:	50 e0       	ldi	r21, 0x00	; 0
    2260:	ae 17       	cp	r26, r30
    2262:	bf 07       	cpc	r27, r31
    2264:	50 f4       	brcc	.+20     	; 0x227a <free+0x64>
    2266:	12 96       	adiw	r26, 0x02	; 2
    2268:	2d 91       	ld	r18, X+
    226a:	3c 91       	ld	r19, X
    226c:	13 97       	sbiw	r26, 0x03	; 3
    226e:	ad 01       	movw	r20, r26
    2270:	21 15       	cp	r18, r1
    2272:	31 05       	cpc	r19, r1
    2274:	09 f1       	breq	.+66     	; 0x22b8 <free+0xa2>
    2276:	d9 01       	movw	r26, r18
    2278:	f3 cf       	rjmp	.-26     	; 0x2260 <free+0x4a>
    227a:	9d 01       	movw	r18, r26
    227c:	da 01       	movw	r26, r20
    227e:	33 83       	std	Z+3, r19	; 0x03
    2280:	22 83       	std	Z+2, r18	; 0x02
    2282:	60 81       	ld	r22, Z
    2284:	71 81       	ldd	r23, Z+1	; 0x01
    2286:	86 0f       	add	r24, r22
    2288:	97 1f       	adc	r25, r23
    228a:	82 17       	cp	r24, r18
    228c:	93 07       	cpc	r25, r19
    228e:	69 f4       	brne	.+26     	; 0x22aa <free+0x94>
    2290:	ec 01       	movw	r28, r24
    2292:	28 81       	ld	r18, Y
    2294:	39 81       	ldd	r19, Y+1	; 0x01
    2296:	26 0f       	add	r18, r22
    2298:	37 1f       	adc	r19, r23
    229a:	2e 5f       	subi	r18, 0xFE	; 254
    229c:	3f 4f       	sbci	r19, 0xFF	; 255
    229e:	31 83       	std	Z+1, r19	; 0x01
    22a0:	20 83       	st	Z, r18
    22a2:	8a 81       	ldd	r24, Y+2	; 0x02
    22a4:	9b 81       	ldd	r25, Y+3	; 0x03
    22a6:	93 83       	std	Z+3, r25	; 0x03
    22a8:	82 83       	std	Z+2, r24	; 0x02
    22aa:	45 2b       	or	r20, r21
    22ac:	29 f4       	brne	.+10     	; 0x22b8 <free+0xa2>
    22ae:	f0 93 c7 03 	sts	0x03C7, r31	; 0x8003c7 <__flp+0x1>
    22b2:	e0 93 c6 03 	sts	0x03C6, r30	; 0x8003c6 <__flp>
    22b6:	42 c0       	rjmp	.+132    	; 0x233c <free+0x126>
    22b8:	13 96       	adiw	r26, 0x03	; 3
    22ba:	fc 93       	st	X, r31
    22bc:	ee 93       	st	-X, r30
    22be:	12 97       	sbiw	r26, 0x02	; 2
    22c0:	ed 01       	movw	r28, r26
    22c2:	49 91       	ld	r20, Y+
    22c4:	59 91       	ld	r21, Y+
    22c6:	9e 01       	movw	r18, r28
    22c8:	24 0f       	add	r18, r20
    22ca:	35 1f       	adc	r19, r21
    22cc:	e2 17       	cp	r30, r18
    22ce:	f3 07       	cpc	r31, r19
    22d0:	71 f4       	brne	.+28     	; 0x22ee <free+0xd8>
    22d2:	80 81       	ld	r24, Z
    22d4:	91 81       	ldd	r25, Z+1	; 0x01
    22d6:	84 0f       	add	r24, r20
    22d8:	95 1f       	adc	r25, r21
    22da:	02 96       	adiw	r24, 0x02	; 2
    22dc:	11 96       	adiw	r26, 0x01	; 1
    22de:	9c 93       	st	X, r25
    22e0:	8e 93       	st	-X, r24
    22e2:	82 81       	ldd	r24, Z+2	; 0x02
    22e4:	93 81       	ldd	r25, Z+3	; 0x03
    22e6:	13 96       	adiw	r26, 0x03	; 3
    22e8:	9c 93       	st	X, r25
    22ea:	8e 93       	st	-X, r24
    22ec:	12 97       	sbiw	r26, 0x02	; 2
    22ee:	e0 e0       	ldi	r30, 0x00	; 0
    22f0:	f0 e0       	ldi	r31, 0x00	; 0
    22f2:	d8 01       	movw	r26, r16
    22f4:	12 96       	adiw	r26, 0x02	; 2
    22f6:	8d 91       	ld	r24, X+
    22f8:	9c 91       	ld	r25, X
    22fa:	13 97       	sbiw	r26, 0x03	; 3
    22fc:	00 97       	sbiw	r24, 0x00	; 0
    22fe:	19 f0       	breq	.+6      	; 0x2306 <free+0xf0>
    2300:	f8 01       	movw	r30, r16
    2302:	8c 01       	movw	r16, r24
    2304:	f6 cf       	rjmp	.-20     	; 0x22f2 <free+0xdc>
    2306:	8d 91       	ld	r24, X+
    2308:	9c 91       	ld	r25, X
    230a:	98 01       	movw	r18, r16
    230c:	2e 5f       	subi	r18, 0xFE	; 254
    230e:	3f 4f       	sbci	r19, 0xFF	; 255
    2310:	82 0f       	add	r24, r18
    2312:	93 1f       	adc	r25, r19
    2314:	20 91 c4 03 	lds	r18, 0x03C4	; 0x8003c4 <__brkval>
    2318:	30 91 c5 03 	lds	r19, 0x03C5	; 0x8003c5 <__brkval+0x1>
    231c:	28 17       	cp	r18, r24
    231e:	39 07       	cpc	r19, r25
    2320:	69 f4       	brne	.+26     	; 0x233c <free+0x126>
    2322:	30 97       	sbiw	r30, 0x00	; 0
    2324:	29 f4       	brne	.+10     	; 0x2330 <free+0x11a>
    2326:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <__flp+0x1>
    232a:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <__flp>
    232e:	02 c0       	rjmp	.+4      	; 0x2334 <free+0x11e>
    2330:	13 82       	std	Z+3, r1	; 0x03
    2332:	12 82       	std	Z+2, r1	; 0x02
    2334:	10 93 c5 03 	sts	0x03C5, r17	; 0x8003c5 <__brkval+0x1>
    2338:	00 93 c4 03 	sts	0x03C4, r16	; 0x8003c4 <__brkval>
    233c:	df 91       	pop	r29
    233e:	cf 91       	pop	r28
    2340:	1f 91       	pop	r17
    2342:	0f 91       	pop	r16
    2344:	08 95       	ret

00002346 <strnlen_P>:
    2346:	fc 01       	movw	r30, r24
    2348:	05 90       	lpm	r0, Z+
    234a:	61 50       	subi	r22, 0x01	; 1
    234c:	70 40       	sbci	r23, 0x00	; 0
    234e:	01 10       	cpse	r0, r1
    2350:	d8 f7       	brcc	.-10     	; 0x2348 <strnlen_P+0x2>
    2352:	80 95       	com	r24
    2354:	90 95       	com	r25
    2356:	8e 0f       	add	r24, r30
    2358:	9f 1f       	adc	r25, r31
    235a:	08 95       	ret

0000235c <strnlen>:
    235c:	fc 01       	movw	r30, r24
    235e:	61 50       	subi	r22, 0x01	; 1
    2360:	70 40       	sbci	r23, 0x00	; 0
    2362:	01 90       	ld	r0, Z+
    2364:	01 10       	cpse	r0, r1
    2366:	d8 f7       	brcc	.-10     	; 0x235e <strnlen+0x2>
    2368:	80 95       	com	r24
    236a:	90 95       	com	r25
    236c:	8e 0f       	add	r24, r30
    236e:	9f 1f       	adc	r25, r31
    2370:	08 95       	ret

00002372 <fputc>:
    2372:	0f 93       	push	r16
    2374:	1f 93       	push	r17
    2376:	cf 93       	push	r28
    2378:	df 93       	push	r29
    237a:	fb 01       	movw	r30, r22
    237c:	23 81       	ldd	r18, Z+3	; 0x03
    237e:	21 fd       	sbrc	r18, 1
    2380:	03 c0       	rjmp	.+6      	; 0x2388 <fputc+0x16>
    2382:	8f ef       	ldi	r24, 0xFF	; 255
    2384:	9f ef       	ldi	r25, 0xFF	; 255
    2386:	28 c0       	rjmp	.+80     	; 0x23d8 <fputc+0x66>
    2388:	22 ff       	sbrs	r18, 2
    238a:	16 c0       	rjmp	.+44     	; 0x23b8 <fputc+0x46>
    238c:	46 81       	ldd	r20, Z+6	; 0x06
    238e:	57 81       	ldd	r21, Z+7	; 0x07
    2390:	24 81       	ldd	r18, Z+4	; 0x04
    2392:	35 81       	ldd	r19, Z+5	; 0x05
    2394:	42 17       	cp	r20, r18
    2396:	53 07       	cpc	r21, r19
    2398:	44 f4       	brge	.+16     	; 0x23aa <fputc+0x38>
    239a:	a0 81       	ld	r26, Z
    239c:	b1 81       	ldd	r27, Z+1	; 0x01
    239e:	9d 01       	movw	r18, r26
    23a0:	2f 5f       	subi	r18, 0xFF	; 255
    23a2:	3f 4f       	sbci	r19, 0xFF	; 255
    23a4:	31 83       	std	Z+1, r19	; 0x01
    23a6:	20 83       	st	Z, r18
    23a8:	8c 93       	st	X, r24
    23aa:	26 81       	ldd	r18, Z+6	; 0x06
    23ac:	37 81       	ldd	r19, Z+7	; 0x07
    23ae:	2f 5f       	subi	r18, 0xFF	; 255
    23b0:	3f 4f       	sbci	r19, 0xFF	; 255
    23b2:	37 83       	std	Z+7, r19	; 0x07
    23b4:	26 83       	std	Z+6, r18	; 0x06
    23b6:	10 c0       	rjmp	.+32     	; 0x23d8 <fputc+0x66>
    23b8:	eb 01       	movw	r28, r22
    23ba:	09 2f       	mov	r16, r25
    23bc:	18 2f       	mov	r17, r24
    23be:	00 84       	ldd	r0, Z+8	; 0x08
    23c0:	f1 85       	ldd	r31, Z+9	; 0x09
    23c2:	e0 2d       	mov	r30, r0
    23c4:	09 95       	icall
    23c6:	89 2b       	or	r24, r25
    23c8:	e1 f6       	brne	.-72     	; 0x2382 <fputc+0x10>
    23ca:	8e 81       	ldd	r24, Y+6	; 0x06
    23cc:	9f 81       	ldd	r25, Y+7	; 0x07
    23ce:	01 96       	adiw	r24, 0x01	; 1
    23d0:	9f 83       	std	Y+7, r25	; 0x07
    23d2:	8e 83       	std	Y+6, r24	; 0x06
    23d4:	81 2f       	mov	r24, r17
    23d6:	90 2f       	mov	r25, r16
    23d8:	df 91       	pop	r29
    23da:	cf 91       	pop	r28
    23dc:	1f 91       	pop	r17
    23de:	0f 91       	pop	r16
    23e0:	08 95       	ret

000023e2 <__ultoa_invert>:
    23e2:	fa 01       	movw	r30, r20
    23e4:	aa 27       	eor	r26, r26
    23e6:	28 30       	cpi	r18, 0x08	; 8
    23e8:	51 f1       	breq	.+84     	; 0x243e <__ultoa_invert+0x5c>
    23ea:	20 31       	cpi	r18, 0x10	; 16
    23ec:	81 f1       	breq	.+96     	; 0x244e <__ultoa_invert+0x6c>
    23ee:	e8 94       	clt
    23f0:	6f 93       	push	r22
    23f2:	6e 7f       	andi	r22, 0xFE	; 254
    23f4:	6e 5f       	subi	r22, 0xFE	; 254
    23f6:	7f 4f       	sbci	r23, 0xFF	; 255
    23f8:	8f 4f       	sbci	r24, 0xFF	; 255
    23fa:	9f 4f       	sbci	r25, 0xFF	; 255
    23fc:	af 4f       	sbci	r26, 0xFF	; 255
    23fe:	b1 e0       	ldi	r27, 0x01	; 1
    2400:	3e d0       	rcall	.+124    	; 0x247e <__ultoa_invert+0x9c>
    2402:	b4 e0       	ldi	r27, 0x04	; 4
    2404:	3c d0       	rcall	.+120    	; 0x247e <__ultoa_invert+0x9c>
    2406:	67 0f       	add	r22, r23
    2408:	78 1f       	adc	r23, r24
    240a:	89 1f       	adc	r24, r25
    240c:	9a 1f       	adc	r25, r26
    240e:	a1 1d       	adc	r26, r1
    2410:	68 0f       	add	r22, r24
    2412:	79 1f       	adc	r23, r25
    2414:	8a 1f       	adc	r24, r26
    2416:	91 1d       	adc	r25, r1
    2418:	a1 1d       	adc	r26, r1
    241a:	6a 0f       	add	r22, r26
    241c:	71 1d       	adc	r23, r1
    241e:	81 1d       	adc	r24, r1
    2420:	91 1d       	adc	r25, r1
    2422:	a1 1d       	adc	r26, r1
    2424:	20 d0       	rcall	.+64     	; 0x2466 <__ultoa_invert+0x84>
    2426:	09 f4       	brne	.+2      	; 0x242a <__ultoa_invert+0x48>
    2428:	68 94       	set
    242a:	3f 91       	pop	r19
    242c:	2a e0       	ldi	r18, 0x0A	; 10
    242e:	26 9f       	mul	r18, r22
    2430:	11 24       	eor	r1, r1
    2432:	30 19       	sub	r19, r0
    2434:	30 5d       	subi	r19, 0xD0	; 208
    2436:	31 93       	st	Z+, r19
    2438:	de f6       	brtc	.-74     	; 0x23f0 <__ultoa_invert+0xe>
    243a:	cf 01       	movw	r24, r30
    243c:	08 95       	ret
    243e:	46 2f       	mov	r20, r22
    2440:	47 70       	andi	r20, 0x07	; 7
    2442:	40 5d       	subi	r20, 0xD0	; 208
    2444:	41 93       	st	Z+, r20
    2446:	b3 e0       	ldi	r27, 0x03	; 3
    2448:	0f d0       	rcall	.+30     	; 0x2468 <__ultoa_invert+0x86>
    244a:	c9 f7       	brne	.-14     	; 0x243e <__ultoa_invert+0x5c>
    244c:	f6 cf       	rjmp	.-20     	; 0x243a <__ultoa_invert+0x58>
    244e:	46 2f       	mov	r20, r22
    2450:	4f 70       	andi	r20, 0x0F	; 15
    2452:	40 5d       	subi	r20, 0xD0	; 208
    2454:	4a 33       	cpi	r20, 0x3A	; 58
    2456:	18 f0       	brcs	.+6      	; 0x245e <__ultoa_invert+0x7c>
    2458:	49 5d       	subi	r20, 0xD9	; 217
    245a:	31 fd       	sbrc	r19, 1
    245c:	40 52       	subi	r20, 0x20	; 32
    245e:	41 93       	st	Z+, r20
    2460:	02 d0       	rcall	.+4      	; 0x2466 <__ultoa_invert+0x84>
    2462:	a9 f7       	brne	.-22     	; 0x244e <__ultoa_invert+0x6c>
    2464:	ea cf       	rjmp	.-44     	; 0x243a <__ultoa_invert+0x58>
    2466:	b4 e0       	ldi	r27, 0x04	; 4
    2468:	a6 95       	lsr	r26
    246a:	97 95       	ror	r25
    246c:	87 95       	ror	r24
    246e:	77 95       	ror	r23
    2470:	67 95       	ror	r22
    2472:	ba 95       	dec	r27
    2474:	c9 f7       	brne	.-14     	; 0x2468 <__ultoa_invert+0x86>
    2476:	00 97       	sbiw	r24, 0x00	; 0
    2478:	61 05       	cpc	r22, r1
    247a:	71 05       	cpc	r23, r1
    247c:	08 95       	ret
    247e:	9b 01       	movw	r18, r22
    2480:	ac 01       	movw	r20, r24
    2482:	0a 2e       	mov	r0, r26
    2484:	06 94       	lsr	r0
    2486:	57 95       	ror	r21
    2488:	47 95       	ror	r20
    248a:	37 95       	ror	r19
    248c:	27 95       	ror	r18
    248e:	ba 95       	dec	r27
    2490:	c9 f7       	brne	.-14     	; 0x2484 <__ultoa_invert+0xa2>
    2492:	62 0f       	add	r22, r18
    2494:	73 1f       	adc	r23, r19
    2496:	84 1f       	adc	r24, r20
    2498:	95 1f       	adc	r25, r21
    249a:	a0 1d       	adc	r26, r0
    249c:	08 95       	ret

0000249e <__prologue_saves__>:
    249e:	2f 92       	push	r2
    24a0:	3f 92       	push	r3
    24a2:	4f 92       	push	r4
    24a4:	5f 92       	push	r5
    24a6:	6f 92       	push	r6
    24a8:	7f 92       	push	r7
    24aa:	8f 92       	push	r8
    24ac:	9f 92       	push	r9
    24ae:	af 92       	push	r10
    24b0:	bf 92       	push	r11
    24b2:	cf 92       	push	r12
    24b4:	df 92       	push	r13
    24b6:	ef 92       	push	r14
    24b8:	ff 92       	push	r15
    24ba:	0f 93       	push	r16
    24bc:	1f 93       	push	r17
    24be:	cf 93       	push	r28
    24c0:	df 93       	push	r29
    24c2:	cd b7       	in	r28, 0x3d	; 61
    24c4:	de b7       	in	r29, 0x3e	; 62
    24c6:	ca 1b       	sub	r28, r26
    24c8:	db 0b       	sbc	r29, r27
    24ca:	0f b6       	in	r0, 0x3f	; 63
    24cc:	f8 94       	cli
    24ce:	de bf       	out	0x3e, r29	; 62
    24d0:	0f be       	out	0x3f, r0	; 63
    24d2:	cd bf       	out	0x3d, r28	; 61
    24d4:	09 94       	ijmp

000024d6 <__epilogue_restores__>:
    24d6:	2a 88       	ldd	r2, Y+18	; 0x12
    24d8:	39 88       	ldd	r3, Y+17	; 0x11
    24da:	48 88       	ldd	r4, Y+16	; 0x10
    24dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    24de:	6e 84       	ldd	r6, Y+14	; 0x0e
    24e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    24e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    24e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    24e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    24e8:	b9 84       	ldd	r11, Y+9	; 0x09
    24ea:	c8 84       	ldd	r12, Y+8	; 0x08
    24ec:	df 80       	ldd	r13, Y+7	; 0x07
    24ee:	ee 80       	ldd	r14, Y+6	; 0x06
    24f0:	fd 80       	ldd	r15, Y+5	; 0x05
    24f2:	0c 81       	ldd	r16, Y+4	; 0x04
    24f4:	1b 81       	ldd	r17, Y+3	; 0x03
    24f6:	aa 81       	ldd	r26, Y+2	; 0x02
    24f8:	b9 81       	ldd	r27, Y+1	; 0x01
    24fa:	ce 0f       	add	r28, r30
    24fc:	d1 1d       	adc	r29, r1
    24fe:	0f b6       	in	r0, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	de bf       	out	0x3e, r29	; 62
    2504:	0f be       	out	0x3f, r0	; 63
    2506:	cd bf       	out	0x3d, r28	; 61
    2508:	ed 01       	movw	r28, r26
    250a:	08 95       	ret

0000250c <_exit>:
    250c:	f8 94       	cli

0000250e <__stop_program>:
    250e:	ff cf       	rjmp	.-2      	; 0x250e <__stop_program>
